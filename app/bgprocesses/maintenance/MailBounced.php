<?php

	require_once(__DIR__ . "/../bootstrap/index.php");
	$data = 0;
	if (isset($argv[1])) {
	  $data = $argv[1];
	}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of CounterMailSent
 *
 * @author jordan.zapata
 */
	$mailBounced = new MailBounced();
	$mailBounced->updateCampainMail($data);

  
class MailBounced {


    public function Bounced($data) {

    $manager = \Phalcon\DI::getDefault()->get('mongomanager');
    $writeConcern = new MongoDB\Driver\WriteConcern(MongoDB\Driver\WriteConcern::MAJORITY, 1000);
    $idMailDAta = array(2365, 3524, 3531, 3537, 3543, 3560, 3579, 3585, 3590, 5010, 5351, 5358, 5389, 5392, 5393, 5395, 5396, 5397, 5398, 5399, 5403, 5405, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5421, 5422, 5423, 5425, 5427, 5430, 5431, 5432, 5433, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 5447, 5448, 5449, 5450, 5451, 5452, 5454, 5455, 5457, 5459, 5462, 5464, 5468, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, 5492, 5493, 5494, 5495, 5499, 5503, 5504, 5505, 5508, 5510, 5511, 5512, 5513, 5514, 5515, 5517, 5525, 5526, 5542, 5551, 5552, 5553, 5554, 5555, 5557, 5560, 5561, 5563, 5564, 5566, 5567, 5568, 5570, 5573, 5576, 5577, 5579, 5581, 5584, 5585, 5588, 5589, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5601, 5603, 5604, 5605, 5606, 5608, 5611, 5612, 5616, 5617, 5618, 5619, 5620, 5623, 5625, 5626, 5627, 5628, 5634, 5635, 5638, 5640, 5644, 5646, 5648, 5650, 5651, 5653, 5654, 5655, 5656, 5657, 5660, 5665, 5667, 5668, 5669, 5671, 5673, 5680, 5681, 5682, 5685, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5697, 5698, 5704, 5706, 5708, 5709, 5710, 5712, 5714, 5720, 5721, 5722, 5723, 5727, 5728, 5730, 5732, 5733, 5735, 5738, 5740, 5741, 5743, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5756, 5757, 5759, 5760, 5761, 5762, 5763, 5765, 5768, 5771, 5772, 5780, 5781, 5804, 5805, 5806, 5807, 5808, 5811, 5812, 5814, 5815, 5818, 5819, 5821, 5822, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5831, 5834, 5835, 5839, 5841, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5853, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5867, 5868, 5872, 5873, 5874, 5875, 5876, 5877, 5879, 5881, 5884, 5885, 5887, 5889, 5890, 5891, 5893, 5895, 5896, 5897, 5898, 5899, 5903, 5904, 5905, 5909, 5910, 5911, 5915, 5916, 5917, 5918, 5919, 5920, 5921, 5923, 5926, 5927, 5928, 5929, 5931, 5932, 5933, 5934, 5936, 5937, 5938, 5941, 5942, 5943, 5944, 5945, 5946, 5947, 5949, 5950, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5961, 5962, 5965, 5966, 5967, 5968, 5969, 5970, 5971, 5972, 5973, 5974, 5975, 5976, 5979, 5981, 5984, 5985, 5986, 5987, 5988, 5990, 5991, 5994, 5995, 5996, 5997, 6002, 6003, 6004, 6005, 6006, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016, 6024, 6025, 6027, 6028, 6029, 6030, 6031, 6033, 6034, 6035, 6037, 6038, 6039, 6040, 6041, 6054, 6055, 6062, 6063, 6066, 6078, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 6102, 6103, 6104, 6105, 6112, 6114, 6115, 6116, 6117, 6118, 6119, 6121, 6122, 6123, 6125, 6128, 6129, 6130, 6131, 6132, 6133, 6136, 6137, 6139, 6140, 6142, 6144, 6145, 6146, 6148, 6149, 6150, 6151, 6153, 6154, 6155, 6156, 6158, 6159, 6161, 6164, 6165, 6166, 6167, 6169, 6172, 6173, 6174, 6175, 6177, 6178, 6179, 6181, 6182, 6183, 6184, 6186, 6188, 6189, 6190, 6191, 6195, 6196, 6199, 6201, 6207, 6208, 6210, 6211, 6214, 6217, 6220, 6221, 6223, 6224, 6225, 6226, 6227, 6232, 6236, 6237, 6238, 6242, 6243, 6245, 6247, 6248, 6250, 6251, 6253, 6255, 6259, 6260, 6261, 6262, 6266, 6267, 6268, 6269, 6270, 6271, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6287, 6291, 6292, 6293, 6295, 6299, 6300, 6306, 6310, 6316, 6319, 6323, 6325, 6326, 6328, 6329, 6330, 6331, 6333, 6337, 6338, 6339, 6341, 6342, 6345, 6346, 6347, 6351, 6355, 6358, 6360, 6361);
    foreach ($idMailDAta as $value) {
      var_dump("csv recorrido : " . $value);
      $url = "/tmp/bounceds/" . $value . ".csv";
      $handle = fopen($url, "r");


      if ($handle) {

        while ((($record = fgets($handle)) !== false)) {

          $dataRecord = explode(";", $record);
          $dataMxc = explode("x", $dataRecord[2]);




          $contion = array(
              'conditions' => array(
                  'idMail' => (String) $dataMxc[2],
                  'idContact' => (int) $dataMxc[1]
              )
          );

          $mxc = \Mxc::find($contion);

          $Mail = \Mail::find(array(
                      //"columns"=>"idMail",
                      "conditions" => "idMail = ?0",
                      "bind" => array(0 => $dataMxc[2])
                  ))->toArray();

          $bulkUpdate = new \MongoDB\Driver\BulkWrite;
          if ($mxc) {
            var_dump("si existe contacto en mxc, actualizando : " . $dataMxc[2] . "  " . $dataMxc[1]);

            $bulkUpdate->update(
                    [
                'idMail' => (String) $dataMxc[2],
                'idContact' => (int) $dataMxc[1]
                    ], [
                '$set' => [
                    'bounced' => (string) strtotime($Mail[0]["scheduleDate"]),
                    'bouncedCode' => (string) $dataRecord[3],
                    'status' => 'sent'
                ]
                    ]
            );

            $manager->executeBulkWrite('aio.mxc', $bulkUpdate, $writeConcern);
            unset($bulkUpdate);
          } else {

            var_dump("No existe este contacto, se crea en mxc " . $dataMxc[2] . " " . $dataMxc[1]);

            $arr = array();

            $arr["bounced"] = (string) strtotime($Mail[0]["scheduleDate"]);
            $arr["bouncedCode"] = (string) $dataRecord[3];
            $arr["idContact"] = (int) $dataMxc[1];
            $arr["idMail"] = (String) $dataMxc[2];
            $arr["mailName"] = $Mail[0]["name"];
            $arr["scheduleDate"] = (string) $Mail[0]["scheduleDate"];
            $arr["email"] = (string) $dataRecord[1];
            $arr["name"] = "";
            $arr["lastname"] = "";
            $arr["birthdate"] = "";
            $arr["indicative"] = "";
            $arr["phone"] = "";
            $arr["status"] = "sent";
            $arr["open"] = "0";
            $arr["totalOpening"] = (int) 0;
            $arr["totalClicks"] = 0;
            $arr["uniqueClicks"] = "0";
            $arr["spam"] = 0;
            $arr["unsubscribed"] = 0;
            $arr["share_fb"] = 0;
            $arr["share_tw"] = 0;
            $arr["share_li"] = 0;
            $arr["share_gp"] = 0;
            $arr["open_fb"] = 0;
            $arr["open_tw"] = 0;
            $arr["open_li"] = 0;
            $arr["open_gp"] = 0;

            $bulkUpdate->insert($arr);
            $manager->executeBulkWrite('aio.mxc', $bulkUpdate, $writeConcern);
            unset($bulkUpdate);
          }
        }
      }
    }
  }

  public function updateCampainMail($data){

  	    $manager = \Phalcon\DI::getDefault()->get('mongomanager');
    	$writeConcern = new MongoDB\Driver\WriteConcern(MongoDB\Driver\WriteConcern::MAJORITY, 1000);
    	$bulk = new \MongoDB\Driver\BulkWrite;


    	$idMailDAta = array(2365, 3524, 3531, 3537, 3543, 3560, 3579, 3585, 3590, 5010, 5351, 5358, 5389, 5392, 5393, 5395, 5396, 5397, 5398, 5399, 5403, 5405, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5421, 5422, 5423, 5425, 5427, 5430, 5431, 5432, 5433, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 5447, 5448, 5449, 5450, 5451, 5452, 5454, 5455, 5457, 5459, 5462, 5464, 5468, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, 5492, 5493, 5494, 5495, 5499, 5503, 5504, 5505, 5508, 5510, 5511, 5512, 5513, 5514, 5515, 5517, 5525, 5526, 5542, 5551, 5552, 5553, 5554, 5555, 5557, 5560, 5561, 5563, 5564, 5566, 5567, 5568, 5570, 5573, 5576, 5577, 5579, 5581, 5584, 5585, 5588, 5589, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5601, 5603, 5604, 5605, 5606, 5608, 5611, 5612, 5616, 5617, 5618, 5619, 5620, 5623, 5625, 5626, 5627, 5628, 5634, 5635, 5638, 5640, 5644, 5646, 5648, 5650, 5651, 5653, 5654, 5655, 5656, 5657, 5660, 5665, 5667, 5668, 5669, 5671, 5673, 5680, 5681, 5682, 5685, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5697, 5698, 5704, 5706, 5708, 5709, 5710, 5712, 5714, 5720, 5721, 5722, 5723, 5727, 5728, 5730, 5732, 5733, 5735, 5738, 5740, 5741, 5743, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5756, 5757, 5759, 5760, 5761, 5762, 5763, 5765, 5768, 5771, 5772, 5780, 5781, 5804, 5805, 5806, 5807, 5808, 5811, 5812, 5814, 5815, 5818, 5819, 5821, 5822, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5831, 5834, 5835, 5839, 5841, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5853, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5867, 5868, 5872, 5873, 5874, 5875, 5876, 5877, 5879, 5881, 5884, 5885, 5887, 5889, 5890, 5891, 5893, 5895, 5896, 5897, 5898, 5899, 5903, 5904, 5905, 5909, 5910, 5911, 5915, 5916, 5917, 5918, 5919, 5920, 5921, 5923, 5926, 5927, 5928, 5929, 5931, 5932, 5933, 5934, 5936, 5937, 5938, 5941, 5942, 5943, 5944, 5945, 5946, 5947, 5949, 5950, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5961, 5962, 5965, 5966, 5967, 5968, 5969, 5970, 5971, 5972, 5973, 5974, 5975, 5976, 5979, 5981, 5984, 5985, 5986, 5987, 5988, 5990, 5991, 5994, 5995, 5996, 5997, 6002, 6003, 6004, 6005, 6006, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016, 6024, 6025, 6027, 6028, 6029, 6030, 6031, 6033, 6034, 6035, 6037, 6038, 6039, 6040, 6041, 6054, 6055, 6062, 6063, 6066, 6078, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 6102, 6103, 6104, 6105, 6112, 6114, 6115, 6116, 6117, 6118, 6119, 6121, 6122, 6123, 6125, 6128, 6129, 6130, 6131, 6132, 6133, 6136, 6137, 6139, 6140, 6142, 6144, 6145, 6146, 6148, 6149, 6150, 6151, 6153, 6154, 6155, 6156, 6158, 6159, 6161, 6164, 6165, 6166, 6167, 6169, 6172, 6173, 6174, 6175, 6177, 6178, 6179, 6181, 6182, 6183, 6184, 6186, 6188, 6189, 6190, 6191, 6195, 6196, 6199, 6201, 6207, 6208, 6210, 6211, 6214, 6217, 6220, 6221, 6223, 6224, 6225, 6226, 6227, 6232, 6236, 6237, 6238, 6242, 6243, 6245, 6247, 6248, 6250, 6251, 6253, 6255, 6259, 6260, 6261, 6262, 6266, 6267, 6268, 6269, 6270, 6271, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6287, 6291, 6292, 6293, 6295, 6299, 6300, 6306, 6310, 6316, 6319, 6323, 6325, 6326, 6328, 6329, 6330, 6331, 6333, 6337, 6338, 6339, 6341, 6342, 6345, 6346, 6347, 6351, 6355, 6358, 6360, 6361);


    	foreach ($idMailDAta as $idMail) {

    		if ($idMail == 6338 || $idMail == 6155) {
    			continue;
    		}else{
    			var_dump("Id de campaña de Mail en proceso :: " . $idMail);

	  	$Mail = \Mail::find(array(
	              //"columns"=>"idMail",
	              "conditions" => "idMail = ?0",
	              "bind" => array(0 => $idMail)
	          				))->toArray()[0];

	  	$contion = array(
	              'conditions' => array(
	                  'idMail' => (String) $idMail,
	                  'status' => (string)'sent'
	              )
	          );

         $mxc = \Mxc::count($contion);
         		var_dump("total de envios en mail ::" . $Mail['messagesSent']);
  			if (($total = ((int)$Mail['messagesSent']-(int)$mxc)) >0) {
  				var_dump("total de comtactos que se acturalizaran a sent en Mxc::" .$total);

  				$query = array(
  						'conditions' => array(
  							'idMail' => (string)$idMail,
  							'status' => 'scheduled'
  							),
  						'fields' => array(
  							'idContact' => 1
  							),
  						'limit'=> $total

  						);

  				$mxcUpdateId = \Mxc::find($query);

  				foreach ($mxcUpdateId as $value) {
  					       
  					$bulk->update(
                    					[
							                'idMail' => (String) $idMail,
							                'idContact' => (int) $value->idContact
                						], 
                						[
						                '$set' => [
								                    'status' => 'sent'
                								  ]
                    					]
            							);
      
  				}

  			$manager->executeBulkWrite('aio.mxc', $bulk, $writeConcern);
            unset($bulkUpdate);
  			}else{
  				var_dump("no hay contactos que actualizar");
  			}
    		}
    	}
  	var_dump("fin del proceso");		
  }

}
