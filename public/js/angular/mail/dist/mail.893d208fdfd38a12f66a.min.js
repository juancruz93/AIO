/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(1);\r\n__webpack_require__(2);\r\n__webpack_require__(3);\r\n__webpack_require__(4);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL21haWwvbWFpbi5qcz9kZDdhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1CQUFPLENBQUMsQ0FBVTtBQUNsQixtQkFBTyxDQUFDLENBQWtCO0FBQzFCLG1CQUFPLENBQUMsQ0FBaUI7QUFDekIsbUJBQU8sQ0FBQyxDQUFlIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL2FwcC5qcycpO1xyXG5yZXF1aXJlKCcuL2NvbnRyb2xsZXJzLmpzJyk7XHJcbnJlcXVpcmUoJy4vZGlyZWN0aXZlcy5qcycpO1xyXG5yZXF1aXJlKCcuL3NlcnZpY2VzLmpzJyk7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvYW5ndWxhci9tYWlsL21haW4uanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n(function () {\r\n  angular.module('mail', ['ui.router', 'mail.controllers', 'mail.directives', 'mail.services', 'ngMaterial', 'ui.select', 'ngSanitize', 'moment-picker', 'angularMoment', 'angularFileUpload'])\r\n//    .config(function($mdAriaProvider) {\r\n//      // Globally disables all ARIA warnings.\r\n//      $mdAriaProvider.disableWarnings();\r\n//    })\r\n          .constant('constantMail', {\r\n            permissionFBAdmin:\"ADMINISTER\",\r\n            permissionFBBasicAdmin:\"CREATE_CONTENT\",\r\n            permissionFBCreateContent:\"BASIC_ADMIN\",\r\n            \r\n            errorApiFacebook:\"Ha ocurrido un problema. Por favor intente de nuevo\",\r\n            errorLengthFanPage:\"No tiene fan page asociadas. Por favor intente de nuevo.\",\r\n            \r\n            templateModalPageFacebook:'<md-dialog aria-label=\"\">' +\r\n              //Toolbar  \r\n              \"<md-toolbar>\" +\r\n              \"<div class=\\\"md-toolbar-tools\\\">\" +\r\n              \"<h4 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Seleccionar fan page</h4>\" +\r\n              \"<span flex></span>\" +\r\n              \"<md-button class=\\\"md-icon-button\\\" ng-click=\\\"cancel()\\\">\" +\r\n              \"<md-icon  aria-label=\\\"Close dialog\\\"></md-icon>\" +\r\n              \"</md-button>\" +\r\n              \"</div>\" +\r\n              \"</md-toolbar>\" +\r\n              //Dialog Content\r\n              \"<md-dialog-content >\" +\r\n              '<div class=\"container-fluid\">'+\r\n              '<div class=\"row row-flex row-flex-wrap\">'+\r\n              '<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" ng-if=\"pages>0\">'+\r\n                '<h1>No tiene actualmente Fan Page para seleccionar.</h1>'+\r\n              '</div>'+\r\n              '<div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4 cursor-pointer\"  ng-repeat=\"page in pages\" ng-click=\"selectedPage(page)\"> '+\r\n              '<div class=\"card facebook-list\">'+\r\n                '<div class=\"text-center\">'+\r\n                    '<a ><img src=\"{{page.picture}}\" class=\"img-circle\"/></a>'+\r\n                    '<h3 class=\"text-center\">{{page.name}}</h3>'+\r\n                '</div>'+\r\n              '</div>'+\r\n              '</div>'+\r\n              '</div>'+\r\n              '</div>'+\r\n              '<br>'+\r\n              '<div class=row>' +\r\n              '<md-dialog-actions class=\"col-lg-12 text-right\">' +\r\n              \"<button type=\\\"button\\\" class=\\\"btn btn-default\\\"  ng-click=\\\"closeDialog()\\\">Cerrar</button>\" +\r\n              '</md-dialog-actions>' +\r\n              '</div>' +\r\n              '</md-dialog-content>' +\r\n              '</md-dialog>'\r\n          })\r\n          .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\r\n              $stateProvider\r\n                      .state('describe', {\r\n                        url: \"/basicinformation/:id\",\r\n                        templateUrl: fullUrlBase + templateBase + '/basicinformation',\r\n                        controller: 'basicinformationController'\r\n                      })\r\n                      .state('addressees', {\r\n                        url: \"/addressees/:id\",\r\n                        templateUrl: fullUrlBase + templateBase + '/addressees',\r\n                        controller: 'addAddresseesController'\r\n                      })\r\n                      .state('content', {\r\n                        url: \"/content/:id\",\r\n                        templateUrl: fullUrlBase + templateBase + '/content',\r\n                        controller: 'contentController'\r\n                      })\r\n                      .state('advanceoptions', {\r\n                        url: \"/advanceoptions/:id\",\r\n                        templateUrl: fullUrlBase + templateBase + '/advanceoptions/',\r\n                        controller: 'advanceoptionsController'\r\n                      })\r\n                      .state('shippingdate', {\r\n                        url: \"/shippingdate/:id\",\r\n                        templateUrl: fullUrlBase + templateBase + '/shippingdate',\r\n                        controller: 'shippingdateController'\r\n                      })\r\n//        $urlRouterProvider.otherwise(function ($injector, $location) {\r\n//          var $state = $injector.get('$state');\r\n//          $state.go('index');\r\n//        });\r\n            }]);\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL21haWwvYXBwLmpzP2MwOWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGNBQWM7QUFDbkQsK0NBQStDLFdBQVc7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxhQUFhO0FBQ2IsQ0FBQyIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG4oZnVuY3Rpb24gKCkge1xyXG4gIGFuZ3VsYXIubW9kdWxlKCdtYWlsJywgWyd1aS5yb3V0ZXInLCAnbWFpbC5jb250cm9sbGVycycsICdtYWlsLmRpcmVjdGl2ZXMnLCAnbWFpbC5zZXJ2aWNlcycsICduZ01hdGVyaWFsJywgJ3VpLnNlbGVjdCcsICduZ1Nhbml0aXplJywgJ21vbWVudC1waWNrZXInLCAnYW5ndWxhck1vbWVudCcsICdhbmd1bGFyRmlsZVVwbG9hZCddKVxyXG4vLyAgICAuY29uZmlnKGZ1bmN0aW9uKCRtZEFyaWFQcm92aWRlcikge1xyXG4vLyAgICAgIC8vIEdsb2JhbGx5IGRpc2FibGVzIGFsbCBBUklBIHdhcm5pbmdzLlxyXG4vLyAgICAgICRtZEFyaWFQcm92aWRlci5kaXNhYmxlV2FybmluZ3MoKTtcclxuLy8gICAgfSlcclxuICAgICAgICAgIC5jb25zdGFudCgnY29uc3RhbnRNYWlsJywge1xyXG4gICAgICAgICAgICBwZXJtaXNzaW9uRkJBZG1pbjpcIkFETUlOSVNURVJcIixcclxuICAgICAgICAgICAgcGVybWlzc2lvbkZCQmFzaWNBZG1pbjpcIkNSRUFURV9DT05URU5UXCIsXHJcbiAgICAgICAgICAgIHBlcm1pc3Npb25GQkNyZWF0ZUNvbnRlbnQ6XCJCQVNJQ19BRE1JTlwiLFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgZXJyb3JBcGlGYWNlYm9vazpcIkhhIG9jdXJyaWRvIHVuIHByb2JsZW1hLiBQb3IgZmF2b3IgaW50ZW50ZSBkZSBudWV2b1wiLFxyXG4gICAgICAgICAgICBlcnJvckxlbmd0aEZhblBhZ2U6XCJObyB0aWVuZSBmYW4gcGFnZSBhc29jaWFkYXMuIFBvciBmYXZvciBpbnRlbnRlIGRlIG51ZXZvLlwiLFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGVtcGxhdGVNb2RhbFBhZ2VGYWNlYm9vazonPG1kLWRpYWxvZyBhcmlhLWxhYmVsPVwiXCI+JyArXHJcbiAgICAgICAgICAgICAgLy9Ub29sYmFyICBcclxuICAgICAgICAgICAgICBcIjxtZC10b29sYmFyPlwiICtcclxuICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9XFxcIm1kLXRvb2xiYXItdG9vbHNcXFwiPlwiICtcclxuICAgICAgICAgICAgICBcIjxoNCBjbGFzcz1cXFwibW9kYWwtdGl0bGVcXFwiIGlkPVxcXCJleGFtcGxlTW9kYWxMYWJlbFxcXCI+U2VsZWNjaW9uYXIgZmFuIHBhZ2U8L2g0PlwiICtcclxuICAgICAgICAgICAgICBcIjxzcGFuIGZsZXg+PC9zcGFuPlwiICtcclxuICAgICAgICAgICAgICBcIjxtZC1idXR0b24gY2xhc3M9XFxcIm1kLWljb24tYnV0dG9uXFxcIiBuZy1jbGljaz1cXFwiY2FuY2VsKClcXFwiPlwiICtcclxuICAgICAgICAgICAgICBcIjxtZC1pY29uICBhcmlhLWxhYmVsPVxcXCJDbG9zZSBkaWFsb2dcXFwiPjwvbWQtaWNvbj5cIiArXHJcbiAgICAgICAgICAgICAgXCI8L21kLWJ1dHRvbj5cIiArXHJcbiAgICAgICAgICAgICAgXCI8L2Rpdj5cIiArXHJcbiAgICAgICAgICAgICAgXCI8L21kLXRvb2xiYXI+XCIgK1xyXG4gICAgICAgICAgICAgIC8vRGlhbG9nIENvbnRlbnRcclxuICAgICAgICAgICAgICBcIjxtZC1kaWFsb2ctY29udGVudCA+XCIgK1xyXG4gICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY29udGFpbmVyLWZsdWlkXCI+JytcclxuICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInJvdyByb3ctZmxleCByb3ctZmxleC13cmFwXCI+JytcclxuICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNvbC14cy0xMiBjb2wtc20tMTIgY29sLW1kLTEyIGNvbC1sZy0xMlwiIG5nLWlmPVwicGFnZXM+MFwiPicrXHJcbiAgICAgICAgICAgICAgICAnPGgxPk5vIHRpZW5lIGFjdHVhbG1lbnRlIEZhbiBQYWdlIHBhcmEgc2VsZWNjaW9uYXIuPC9oMT4nK1xyXG4gICAgICAgICAgICAgICc8L2Rpdj4nK1xyXG4gICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY29sLXhzLTEyIGNvbC1zbS0xMiBjb2wtbWQtNCBjb2wtbGctNCBjdXJzb3ItcG9pbnRlclwiICBuZy1yZXBlYXQ9XCJwYWdlIGluIHBhZ2VzXCIgbmctY2xpY2s9XCJzZWxlY3RlZFBhZ2UocGFnZSlcIj4gJytcclxuICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNhcmQgZmFjZWJvb2stbGlzdFwiPicrXHJcbiAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInRleHQtY2VudGVyXCI+JytcclxuICAgICAgICAgICAgICAgICAgICAnPGEgPjxpbWcgc3JjPVwie3twYWdlLnBpY3R1cmV9fVwiIGNsYXNzPVwiaW1nLWNpcmNsZVwiLz48L2E+JytcclxuICAgICAgICAgICAgICAgICAgICAnPGgzIGNsYXNzPVwidGV4dC1jZW50ZXJcIj57e3BhZ2UubmFtZX19PC9oMz4nK1xyXG4gICAgICAgICAgICAgICAgJzwvZGl2PicrXHJcbiAgICAgICAgICAgICAgJzwvZGl2PicrXHJcbiAgICAgICAgICAgICAgJzwvZGl2PicrXHJcbiAgICAgICAgICAgICAgJzwvZGl2PicrXHJcbiAgICAgICAgICAgICAgJzwvZGl2PicrXHJcbiAgICAgICAgICAgICAgJzxicj4nK1xyXG4gICAgICAgICAgICAgICc8ZGl2IGNsYXNzPXJvdz4nICtcclxuICAgICAgICAgICAgICAnPG1kLWRpYWxvZy1hY3Rpb25zIGNsYXNzPVwiY29sLWxnLTEyIHRleHQtcmlnaHRcIj4nICtcclxuICAgICAgICAgICAgICBcIjxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0XFxcIiAgbmctY2xpY2s9XFxcImNsb3NlRGlhbG9nKClcXFwiPkNlcnJhcjwvYnV0dG9uPlwiICtcclxuICAgICAgICAgICAgICAnPC9tZC1kaWFsb2ctYWN0aW9ucz4nICtcclxuICAgICAgICAgICAgICAnPC9kaXY+JyArXHJcbiAgICAgICAgICAgICAgJzwvbWQtZGlhbG9nLWNvbnRlbnQ+JyArXHJcbiAgICAgICAgICAgICAgJzwvbWQtZGlhbG9nPidcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY29uZmlnKFsnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywgZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcclxuICAgICAgICAgICAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAgICAgICAgICAgICAgICAgLnN0YXRlKCdkZXNjcmliZScsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9iYXNpY2luZm9ybWF0aW9uLzppZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogZnVsbFVybEJhc2UgKyB0ZW1wbGF0ZUJhc2UgKyAnL2Jhc2ljaW5mb3JtYXRpb24nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnYmFzaWNpbmZvcm1hdGlvbkNvbnRyb2xsZXInXHJcbiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgLnN0YXRlKCdhZGRyZXNzZWVzJywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FkZHJlc3NlZXMvOmlkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBmdWxsVXJsQmFzZSArIHRlbXBsYXRlQmFzZSArICcvYWRkcmVzc2VlcycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdhZGRBZGRyZXNzZWVzQ29udHJvbGxlcidcclxuICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAuc3RhdGUoJ2NvbnRlbnQnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvY29udGVudC86aWRcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6IGZ1bGxVcmxCYXNlICsgdGVtcGxhdGVCYXNlICsgJy9jb250ZW50JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2NvbnRlbnRDb250cm9sbGVyJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgIC5zdGF0ZSgnYWR2YW5jZW9wdGlvbnMnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvYWR2YW5jZW9wdGlvbnMvOmlkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBmdWxsVXJsQmFzZSArIHRlbXBsYXRlQmFzZSArICcvYWR2YW5jZW9wdGlvbnMvJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2FkdmFuY2VvcHRpb25zQ29udHJvbGxlcidcclxuICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAuc3RhdGUoJ3NoaXBwaW5nZGF0ZScsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9zaGlwcGluZ2RhdGUvOmlkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBmdWxsVXJsQmFzZSArIHRlbXBsYXRlQmFzZSArICcvc2hpcHBpbmdkYXRlJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3NoaXBwaW5nZGF0ZUNvbnRyb2xsZXInXHJcbiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4vLyAgICAgICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShmdW5jdGlvbiAoJGluamVjdG9yLCAkbG9jYXRpb24pIHtcclxuLy8gICAgICAgICAgdmFyICRzdGF0ZSA9ICRpbmplY3Rvci5nZXQoJyRzdGF0ZScpO1xyXG4vLyAgICAgICAgICAkc3RhdGUuZ28oJ2luZGV4Jyk7XHJcbi8vICAgICAgICB9KTtcclxuICAgICAgICAgICAgfV0pO1xyXG59KSgpO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2pzL2FuZ3VsYXIvbWFpbC9hcHAuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n(function () {\r\n  angular.module('mail.controllers', [])\r\n          .filter('propsFilter', function () {\r\n            return function (items, props) {\r\n              var out = [];\r\n              if (angular.isArray(items)) {\r\n                var keys = Object.keys(props);\r\n                items.forEach(function (item) {\r\n                  var itemMatches = false;\r\n                  for (var i = 0; i < keys.length; i++) {\r\n                    var prop = keys[i];\r\n                    var text = props[prop].toLowerCase();\r\n                    if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {\r\n                      itemMatches = true;\r\n                      break;\r\n                    }\r\n                  }\r\n\r\n                  if (itemMatches) {\r\n                    out.push(item);\r\n                  }\r\n                });\r\n              } else {\r\n                // Let the output be the input untouched\r\n                out = items;\r\n              }\r\n\r\n              return out;\r\n            };\r\n          })\r\n          .filter('getById', function () {\r\n            return function (input, id) {\r\n              var i = 0, len = input.length;\r\n              for (; i < len; i++) {\r\n                if (input[i].gmt == id) {\r\n                  return input[i];\r\n                }\r\n              }\r\n              return null;\r\n            }\r\n          })\r\n          .controller('main', ['$scope', 'incomplete', '$rootScope', 'wizard', 'restService', function ($scope, incomplete, $rootScope, wizard, restService) {\r\n              $rootScope.incomplete = incomplete.getincomplete();\r\n              wizard.setdescribe(true);\r\n              wizard.setaddressees(false);\r\n              wizard.setcontent(false);\r\n              wizard.setadvanceoptions(false);\r\n              wizard.setshippingdate(false);\r\n              $rootScope.addressees = wizard.getaddressees();\r\n              $rootScope.describe = wizard.getdescribe();\r\n              $rootScope.content = wizard.getcontent();\r\n              $rootScope.advanceoptions = wizard.getadvanceoptions();\r\n              $rootScope.shippingdate = wizard.getshippingdate();\r\n            }])\r\n          .controller('basicinformationController', ['$scope', '$rootScope', 'restService', '$window', 'notificationService', '$stateParams', 'wizard', function ($scope, $rootScope, restService, $window, notificationService, $stateParams, wizard) {\r\n\r\n              wizard.setdescribe(true);\r\n              wizard.setaddressees(false);\r\n              wizard.setcontent(false);\r\n              wizard.setadvanceoptions(false);\r\n              wizard.setshippingdate(false);\r\n              $rootScope.addressees = wizard.getaddressees();\r\n              $rootScope.describe = wizard.getdescribe();\r\n              $rootScope.content = wizard.getcontent();\r\n              $rootScope.advanceoptions = wizard.getadvanceoptions();\r\n              $rootScope.shippingdate = wizard.getshippingdate();\r\n              $scope.data = {};\r\n              $scope.data.category = [];\r\n              function getemailname() {\r\n                restService.getemailname().then(function (res) {\r\n                  $scope.emailname = res;\r\n                });\r\n              }\r\n\r\n              function getemailsend() {\r\n                restService.getemailsend().then(function (res) {\r\n                  $scope.emailsend = res;\r\n                });\r\n              }\r\n\r\n              function getMailCategory() {\r\n                restService.getMailCategory().then(function (res) {\r\n                  $scope.availibleCategory = res;\r\n                });\r\n              }\r\n\r\n              function getReplyTo() {\r\n                restService.getReplyTo().then(function (res) {\r\n                  $scope.replyToArray = res;\r\n                });\r\n              }\r\n\r\n              getemailname();\r\n              getemailsend();\r\n              getReplyTo();\r\n              getMailCategory();\r\n              $scope.showInputName = false;\r\n              $scope.showInputCategory = false;\r\n              $scope.showSelectName = true;\r\n              $scope.showCategoryName = true;\r\n              $scope.showIconsName = true;\r\n              $scope.showIconsCategory = true;\r\n              $scope.showIconsSaveName = false;\r\n              $scope.showIconsSaveCategory = false;\r\n              $scope.changeStatusNameCategory = function () {\r\n                if (!$scope.showInputCategory) {\r\n                  $scope.showInputCategory = true;\r\n                  $scope.showCategoryName = false;\r\n                  $scope.showIconsCategory = false;\r\n                  $scope.showIconsSaveCategory = true;\r\n                } else {\r\n                  $scope.showInputCategory = false;\r\n                  $scope.showCategoryName = true;\r\n                  $scope.showIconsCategory = true;\r\n                  $scope.showIconsSaveCategory = false;\r\n                }\r\n              };\r\n              $scope.changeStatusInputName = function () {\r\n                if (!$scope.showInputName) {\r\n                  $scope.showInputName = true;\r\n                  $scope.showSelectName = false;\r\n                  $scope.showIconsName = false;\r\n                  $scope.showIconsSaveName = true;\r\n                } else {\r\n                  $scope.showInputName = false;\r\n                  $scope.showSelectName = true;\r\n                  $scope.showIconsName = true;\r\n                  $scope.showIconsSaveName = false;\r\n                }\r\n              }\r\n\r\n              $scope.showInputEmail = false;\r\n              $scope.showSelectEmail = true;\r\n              $scope.showIconsEmail = true;\r\n              $scope.showIconsSaveEmail = false;\r\n              $scope.changeStatusInputEmail = function () {\r\n                if (!$scope.showInputEmail) {\r\n                  $scope.showInputEmail = true;\r\n                  $scope.showSelectEmail = false;\r\n                  $scope.showIconsEmail = false;\r\n                  $scope.showIconsSaveEmail = true;\r\n                } else {\r\n                  $scope.showInputEmail = false;\r\n                  $scope.showSelectEmail = true;\r\n                  $scope.showIconsEmail = true;\r\n                  $scope.showIconsSaveEmail = false;\r\n                }\r\n              }\r\n\r\n\r\n              $scope.showInputReplyto = false;\r\n              $scope.showSelectReplyto = true;\r\n              $scope.showIconsReplyto = true;\r\n              $scope.showIconsSaveReplyto = false;\r\n              $scope.changeStatusInputReplyto = function () {\r\n                if (!$scope.showInputReplyto) {\r\n                  $scope.showInputReplyto = true;\r\n                  $scope.showSelectReplyto = false;\r\n                  $scope.showIconsReplyto = false;\r\n                  $scope.showIconsSaveReplyto = true;\r\n                } else {\r\n                  $scope.showInputReplyto = false;\r\n                  $scope.showSelectReplyto = true;\r\n                  $scope.showIconsReplyto = true;\r\n                  $scope.showIconsSaveReplyto = false;\r\n                }\r\n              }\r\n\r\n\r\n\r\n              $scope.basicInformationRegister = function () {\r\n                if (typeof ($rootScope.idMailGet) != \"undefined\") {\r\n                  //console.log($scope.data);\r\n                  if (typeof ($scope.data.senderNameSelect) == 'undefined') {\r\n                    notificationService.error(\"El Nombre del remitente es obigatorio\");\r\n                  } else if (typeof ($scope.data.senderMailSelect) == 'undefined') {\r\n                    notificationService.error(\"El Correo del remitente es obigatorio\");\r\n                  } else {\r\n                    restService.editBasicInformation($rootScope.idMailGet, $scope.data).then(function (res) {\r\n                      notificationService.success(res['msg']);\r\n                      $rootScope.idMailGet = res['idMail'];\r\n                      $window.location.href = fullUrlBase + templateBase + '/create#/addressees/' + res['idMail'];\r\n                    });\r\n                  }\r\n                } else {\r\n                  if (typeof ($scope.data.senderNameSelect) == 'undefined') {\r\n                    notificationService.error(\"El Nombre del remitente es obigatorio\");\r\n                  } else if (typeof ($scope.data.senderMailSelect) == 'undefined') {\r\n                    notificationService.error(\"El Correo del remitente es obigatorio\");\r\n                  } else {\r\n                    restService.addBasicInformation($scope.data).then(function (res) {\r\n                      notificationService.success(res['msg']);\r\n                      $rootScope.idMailGet = res['idMail'];\r\n                      $window.location.href = fullUrlBase + templateBase + '/create#/addressees/' + res['idMail'];\r\n                    });\r\n                  }\r\n                }\r\n              };\r\n              $scope.basicInformationSave = function () {\r\n                if (typeof ($scope.data.senderNameSelect) == 'undefined') {\r\n                  notificationService.error(\"El Nombre del remitente es obigatorio\");\r\n                } else if (typeof ($scope.data.senderMailSelect) == 'undefined') {\r\n                  notificationService.error(\"El Correo del remitente es obigatorio\");\r\n                } else {\r\n                  restService.editBasicInformation($rootScope.idMailGet, $scope.data).then(function (res) {\r\n                    //console.log(res);\r\n                    notificationService.success(res['msg']);\r\n                    $rootScope.idMailGet = res['idMail'];\r\n                    $window.location.href = fullUrlBase + templateBase;\r\n                  });\r\n                }\r\n              };\r\n              $scope.saveCategory = function () {\r\n                var data = {name: $scope.categoryName};\r\n                $scope.changeStatusNameCategory();\r\n                restService.saveCategory(data).then(function (res) {\r\n                  notificationService.primary(res['msg']);\r\n                  $scope.categoryName = \"\";\r\n                  getMailCategory();\r\n                  $scope.data.category.push(res['category'].idMailCategory);\r\n                });\r\n              };\r\n              $scope.saveName = function () {\r\n                var data = {name: $scope.senderName};\r\n                restService.addEmailName(data).then(function (res) {\r\n                  notificationService.success(res['msg']);\r\n                  $scope.senderName = \"\";\r\n                  getemailname();\r\n                  $scope.changeStatusInputName();\r\n                  $scope.data.senderNameSelect = res['idNameSender'];\r\n                });\r\n              }\r\n\r\n              $scope.saveEmail = function () {\r\n                var data = {email: $scope.senderMail};\r\n                restService.addEmailSender(data).then(function (res) {\r\n                  if (res == \"\" || res == null) {\r\n                    notificationService.warning('No se pudo guardar el remitente, posiblemente el correo ese demasiado largo, intentelo nuevamente o comuniquese con soporte');\r\n                  } else {\r\n                    notificationService.success(res['msg']);\r\n                    $scope.senderMail = \"\";\r\n                    getemailsend();\r\n                    $scope.changeStatusInputEmail();\r\n                    $scope.data.senderMailSelect = res['idEmailsender'];\r\n                  }\r\n                });\r\n              }\r\n\r\n              $scope.saveReplyto = function () {\r\n                var data = {email: $scope.replyTo};\r\n                restService.addReplyTo(data).then(function (res) {\r\n                  notificationService.success(res['msg']);\r\n                  $scope.replyTo = \"\";\r\n                  getReplyTo();\r\n                  $scope.changeStatusInputReplyto();\r\n                  $scope.data.replyToSelect = res['idReplyTo'];\r\n                });\r\n              }\r\n\r\n\r\n              if ($stateParams.id) {\r\n                if (!IsNumeric($stateParams.id)) {\r\n                  notificationService.warning(\"El correo no se ha encontrado\");\r\n                  location.href = '#/basicinformation/';\r\n                } else {\r\n                  $rootScope.idMailGet = $stateParams.id;\r\n                }\r\n              }\r\n              function IsNumeric(val) {\r\n                return Number(parseFloat(val)) == val;\r\n              }\r\n\r\n              if ($rootScope.idMailGet && IsNumeric($rootScope.idMailGet)) {\r\n                //        if (typeof ($rootScope.idMailGet) != \"undefined\" ) {\r\n                restService.findMail($rootScope.idMailGet).then(function (res) {\r\n                  $scope.data.name = res.name;\r\n                  $scope.data.senderNameSelect = res.idNameSender;\r\n                  $scope.data.senderMailSelect = res.idEmailsender;\r\n                  $scope.data.replyToSelect = res.idReplyTo;\r\n                  $scope.data.replyto = res.replyto;\r\n                  $scope.data.subject = res.subject;\r\n                  $scope.data.test = (res.test == 1);\r\n                });\r\n                restService.getMailCategoryByIdMail($rootScope.idMailGet).then(function (res) {\r\n                  var idMailCategory = [];\r\n                  res.forEach(function (item, index) {\r\n                    idMailCategory.push(item.idMailCategory);\r\n                  });\r\n                  $scope.data.category = idMailCategory;\r\n                });\r\n              }\r\n            }])\r\n          .controller('shippingdateController', ['$scope', '$rootScope', '$interval', '$filter', 'restService', '$stateParams', '$q', 'notificationService', 'moment', 'wizard', '$FB', '$timeout', function ($scope, $rootScope, $interval, $filter, restService, $stateParams, $q, notificationService, moment, wizard, $FB, $timeout) {\r\n              if (!IsNumeric($stateParams.id)) {\r\n                notificationService.warning(\"El correo no se ha encontrado\");\r\n                location.href = '#/basicinformation/';\r\n                return true;\r\n              }\r\n\r\n              function IsNumeric(val) {\r\n                return Number(parseFloat(val)) == val;\r\n              }\r\n              wizard.setdescribe(false);\r\n              wizard.setaddressees(false);\r\n              wizard.setcontent(false);\r\n              wizard.setadvanceoptions(false);\r\n              wizard.setshippingdate(true);\r\n              $rootScope.addressees = wizard.getaddressees();\r\n              $rootScope.describe = wizard.getdescribe();\r\n              $rootScope.content = wizard.getcontent();\r\n              $rootScope.advanceoptions = wizard.getadvanceoptions();\r\n              $rootScope.shippingdate = wizard.getshippingdate();\r\n              $scope.show = false;\r\n              $scope.data = {};\r\n              $scope.zonahoraria = {};\r\n              $rootScope.idMailGet = $stateParams.id;\r\n              $scope.idMail = $rootScope.idMailGet;\r\n              $scope.imagenDate = new Date();\r\n              $scope.imagenTime = $scope.imagenDate.getTime();\r\n              $scope.tester = {\r\n                mailTester: false,\r\n                emailsSendTester: null,\r\n                messageSendTester: null,\r\n                sendTesterMail: function () {\r\n                  if (this.mailTester) {\r\n                    if (this.emailsSendTester == null || this.emailsSendTester == \"\") {\r\n                      notificationService.error(\"El campo de correos de envio de tester no puede estar vacio.\");\r\n                      return false;\r\n                    }\r\n                    data = {mailsSend: this.emailsSendTester.split(\",\"), messageSend: this.messageSendTester, idTester: $scope.idMail};\r\n                    restService.sendTesterMails(data, $scope.idMail)\r\n                            .then(function (data) {\r\n                              console.log(data);\r\n                            });\r\n                  }\r\n\r\n                }\r\n              };\r\n\r\n\r\n              $('#datetimepicker').datetimepicker({\r\n                format: 'yyyy-MM-dd hh:mm',\r\n                language: 'es'\r\n              }).on('changeDate', function (ev) {\r\n                $scope.tick();\r\n                $scope.$apply();\r\n              });\r\n              $scope.showTextarea = function () {\r\n                if ($scope.show == false) {\r\n                  $scope.show = true;\r\n                } else {\r\n                  $scope.show = false;\r\n                }\r\n              }\r\n              $scope.loginFB = function (idPage) {\r\n                $FB.getLoginStatus(function (response) {\r\n                  if (response.status === 'connected') {\r\n                    $FB.api('/' + idPage + \"?fields=access_token,name\", function (response) {\r\n                      $scope.setFacebook(response);\r\n                    });\r\n                  } else {\r\n                    $FB.login(function () {\r\n                      $FB.api('/' + idPage + \"?fields=access_token,name\", function (response) {\r\n                        $scope.setFacebook(response);\r\n                      });\r\n                    }, {\r\n                      scope: 'publish_actions,publish_pages,manage_pages'\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n              $scope.setFacebook = function (data) {\r\n\r\n                $FB.api('/' + data.id + '/picture?redirect=false', function (response) {\r\n                  $scope.$apply(function () {\r\n                    $scope.data.facebook.name = data.name;\r\n                    $scope.data.facebook.picture = response.data.url;\r\n                    $scope.data.facebook.access_token = data.access_token;\r\n\r\n                  });\r\n                });\r\n              }\r\n\r\n              $scope.publishSocialFacebook = function (data) {\r\n                var post = {};\r\n\r\n//                post.url = fullUrlBase + 'asset/thumbnailmail/' + $scope.idMail; //SERVIDOR\r\n                post.url = \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQ1dmzDhsPc5yHJ5S6j90DUcoUEayldxlaiFDnhAyzR5YFcozADUxk1dBw\";//LOCALHOST\r\n                post.access_token = $scope.data.facebook.access_token;\r\n                post.message = ($scope.data.facebook.description != null) ? $scope.data.facebook.description : \"\";\r\n                //                if(!angular.equals(null,$scope.data.facebook.description)){\r\n                //                  post.caption = $scope.data.facebook.description; \r\n                //                }\r\n                console.log(\"Check -> Caption, me imagino que el comentario en el post\");\r\n                console.log(post);\r\n                if (data.socialSend != \"now\") {\r\n                  post.scheduled_publish_time = data.socialSend;\r\n                  post.published = false;\r\n                }\r\n                post.link = \"https://aio.sigmamovil.com/webversion/show/\" + \"1-\" + $scope.data.idMail + \"-public-\" + $scope.data.codigo + \"/\";\r\n                $FB.api(\"/\" + $scope.data.facebook.idPage + \"/feed\",\r\n                        \"POST\", post,\r\n                        function (response) {\r\n                          if (response && !response.error) {\r\n                            var photoId = response.id;\r\n                            var postId = response.post_id;\r\n                            if (typeof postId == \"undefined\") {\r\n                              postId = $scope.data.facebook.idPage + \"_\" + photoId;\r\n                            }\r\n                            restService.sendDataComfirmationEmail(data).then(function (data) {\r\n                              notificationService.primary(data.message);\r\n                              openModalConfirm();\r\n                            }).catch(function (data) {\r\n                              $FB.api(\"/\" + photoId,\r\n                                      \"DELETE\",\r\n                                      {access_token: $scope.data.facebook.access_token},\r\n                                      function (response) {\r\n                                        if (response && !response.error) {\r\n                                        }\r\n                                      });\r\n\r\n                              $FB.api(\"/\" + postId,\r\n                                      \"DELETE\",\r\n                                      {access_token: $scope.data.facebook.access_token},\r\n                                      function (response) {\r\n                                        if (response && !response.error) {\r\n                                        }\r\n                                      });\r\n                            });\r\n                          } else {\r\n                            notificationService.error(\"ocurrÃ­o un error haciendo el posteo, por favor validar la sessiÃ³n de facebook.\")\r\n                          }\r\n                        });\r\n              }\r\n\r\n              if ($stateParams.id) {\r\n                $rootScope.idMailGet = $stateParams.id;\r\n                $scope.idMail = $rootScope.idMailGet;\r\n              }\r\n\r\n              restService.getSaxs().then(function (res) {\r\n                for (var i = 0; i < res.length; i++) {\r\n                  if (res[i].service == \"email marketing\") {\r\n                    $scope.ammoutEmail = {ammount: res[i].amount, accountingMode: res[i].accountingMode};\r\n                  }\r\n                }\r\n              });\r\n              restService.findMail($rootScope.idMailGet).then(function (res) {\r\n\r\n                $scope.data = res;\r\n                $scope.data.test = (res.test == \"1\");\r\n                if (res.scheduleDate != null && res.scheduleDate != \"\") {\r\n                  $(\"#valueDatepicker\").val(res.scheduleDate);\r\n                  $scope.gmtDataBase = res.gmt;\r\n                  $scope.date = res.scheduleDate;\r\n                  $scope.oldHour = true;\r\n                  restService.getlisttimezone().then(function (res) {\r\n                    $scope.timezone = res;\r\n                    $scope.zonahoraria.zone = $filter('getById')($scope.timezone, res.gmt);\r\n                  });\r\n                } else {\r\n                  restService.getlisttimezone().then(function (res) {\r\n                    $scope.timezone = res;\r\n                    $scope.zonahoraria.zone = $filter('getById')($scope.timezone, \"-0500\");\r\n                  });\r\n                  $scope.oldHour = false;\r\n                }\r\n\r\n                if (res.target != null && res.target != \"\") {\r\n                  var json = jQuery.parseJSON(res.target);\r\n                  if (json.type == \"contactlist\") {\r\n                    $scope.data.titleList = 'Lista(s) de contacto(s): ';\r\n                    $scope.data.contacts = json.contactlists;\r\n                  } else if (json.type == \"segment\") {\r\n                    $scope.data.titleList = 'Segmento(s): ';\r\n                    $scope.data.contacts = json.segment;\r\n                  }\r\n                  //console.log(json);\r\n                }\r\n\r\n                restService.getContentMail($rootScope.idMailGet).then(function (resStatics) {\r\n                  if (resStatics.statisticsEmails != \"\") {\r\n                    $scope.data.statisticsEmails = {statisticsEmails: resStatics.statisticsEmails, quantity: resStatics.quantity, typeTime: resStatics.typeTime};\r\n                  } else {\r\n                    $scope.data.statisticsEmails = false;\r\n                  }\r\n\r\n                  if (resStatics.notificationEmails != \"\") {\r\n                    $scope.data.notificationEmails = resStatics.notificationEmails;\r\n                  } else {\r\n                    $scope.data.notificationEmails = false;\r\n                  }\r\n\r\n                  if (resStatics.facebook) {\r\n                    $scope.data.facebook = resStatics.facebook;\r\n                    if ($FB.loaded) {\r\n                      $scope.loginFB($scope.data.facebook.idPage);\r\n                    } else {\r\n                      $timeout(function () {\r\n                        $scope.loginFB($scope.data.facebook.idPage);\r\n                      }, 2000);\r\n                    }\r\n                  } else {\r\n                    $scope.data.facebook = false;\r\n                  }\r\n                })\r\n                restService.findEmailSender(res.idEmailsender).then(function (resEmailSender) {\r\n                  //console.log(resEmailSender);\r\n                  $scope.data.emailSender = resEmailSender.email;\r\n                });\r\n                restService.findEmailName(res.idNameSender).then(function (resEmailname) {\r\n                  //            console.log(resEmailname);\r\n                  $scope.data.nameSender = resEmailname.name;\r\n                });\r\n\r\n                if (res.idReplyTo != null && angular.isDefined(res.idReplyTo)) {\r\n                  restService.findReplyto(res.idReplyTo).then(function (resReplyto) {\r\n                    //          console.log(resReplyto.email);\r\n                    $scope.data.replyto = resReplyto.email;\r\n                  });\r\n                } else {\r\n                  $scope.data.replyto = null;\r\n                }\r\n\r\n\r\n                restService.findMailCategory($rootScope.idMailGet).then(function (res) {\r\n                  $scope.data.category = res;\r\n                });\r\n                restService.findMailAttachment($rootScope.idMailGet).then(function (res) {\r\n                  $scope.data.attachment = res;\r\n                  $scope.data.sizeAttachment = 0;\r\n                  if ($scope.data.attachment.length > 0) {\r\n                    for (var i in $scope.data.attachment) {\r\n                      $scope.data.sizeAttachment = $scope.data.sizeAttachment + parseInt($scope.data.attachment[i].size);\r\n                    }\r\n                  }\r\n                  //console.log(res);\r\n                });\r\n              });\r\n              var dateUnix = moment().utc().valueOf();\r\n              var gmt;\r\n              $scope.changeTestMail = function (test) {\r\n                var data = {};\r\n                if (test) {\r\n                  data.test = 1;\r\n                } else {\r\n                  data.test = 0;\r\n                }\r\n\r\n                restService.changeTestMail($rootScope.idMailGet, data).then(function (res) {\r\n                  notificationService.primary(\"Se actualizo correctamente el correo.\");\r\n                })\r\n              }\r\n              $scope.tick = function () {\r\n                var selecteDate = $(\"#valueDatepicker\").val();\r\n                if (!selecteDate.length == 0) {\r\n                  $scope.dateSelectedUnix = moment(selecteDate).utc().valueOf();\r\n                  dateUnix = $scope.dateSelectedUnix;\r\n                }\r\n\r\n                if (typeof ($scope.zonahoraria.zone) == \"undefined\") {\r\n                  gmt = \"-0500\";\r\n                } else {\r\n                  gmt = $scope.zonahoraria.zone.gmt;\r\n                }\r\n\r\n                if (!$scope.oldHour) {\r\n                  $scope.date = moment(dateUnix).utcOffset(gmt).format('YYYY-MM-DD HH:mm');\r\n                  $scope.dateCompare = moment(dateUnix).utcOffset(gmt).add(10, 'minutes').format('YYYY-MM-DD HH:mm');\r\n                }\r\n\r\n              }\r\n\r\n              $scope.program = function () {\r\n                var gmt;\r\n                var selecteDate = $(\"#valueDatepicker\").val();\r\n                if (selecteDate.length == 0) {\r\n                  notificationService.error(\"No se puede programar el envio, falta la fecha de envio\");\r\n                  return false;\r\n                }\r\n\r\n                var timenow = moment().utc('-0500').format('YYYY-MM-DD HH:mm');\r\n                if ($scope.dateCompare <= timenow) {\r\n                  notificationService.error(\"No se puede programar el envio, la fecha de envio ya expiro\");\r\n                  return false;\r\n                }\r\n                var enviar = {dateSelected: selecteDate, gmt: $scope.zonahoraria.zone.gmt, idMail: $scope.idMail};\r\n                restService.sendScheduleDateEmail(enviar).then(function (data) {\r\n                  notificationService.primary(data.message);\r\n                  $scope.oldHour = true;\r\n                  $scope.data.gmt = $scope.gmtDataBase = data.mail.gmt;\r\n                  $scope.data.scheduleDate = $scope.date = data.mail.scheduleDate;\r\n                });\r\n              }\r\n\r\n              $scope.reprogram = function () {\r\n                $scope.oldHour = false;\r\n                $(\"#valueDatepicker\").val(moment(new Date()).format('YYYY-MM-DD HH:mm'));\r\n                $scope.zonahoraria.zone = $filter('getById')($scope.timezone, \"-0500\");\r\n                $scope.date = moment(new Date()).format('YYYY-MM-DD HH:mm');\r\n              }\r\n\r\n              $scope.sendNow = function () {\r\n                var gmt = '-0500';\r\n                var enviar = {dateSelected: moment().utcOffset(gmt).format('YYYY-MM-DD HH:mm'), gmt: $scope.zonahoraria.zone.gmt, idMail: $scope.idMail};\r\n                restService.sendScheduleDateEmail(enviar).then(function (data) {\r\n                  notificationService.primary(data.message);\r\n                  $scope.oldHour = true;\r\n                  $scope.data.gmt = $scope.gmtDataBase = data.mail.gmt;\r\n                  $scope.data.scheduleDate = $scope.date = data.mail.scheduleDate;\r\n                });\r\n              };\r\n              $scope.closeModalConfirm = function () {\r\n                location.href = fullUrlBase + templateBase;\r\n              };\r\n              $scope.sendConfirmation = function () {\r\n                $scope.dateConfirmation = moment(new Date()).format('YYYY-MM-DD HH:mm');\r\n                $scope.getMd5($scope.data);\r\n              };\r\n              $scope.sendDataConfirmationEmail = function (data) {\r\n                restService.sendDataComfirmationEmail(data).then(function (data) {\r\n                  notificationService.primary(data.message);\r\n                  openModalConfirm();\r\n                });\r\n              }\r\n              $scope.validateData = function () {\r\n                var data = $scope.data;\r\n                var objSendDataConfirmation = {};\r\n                var defer = $q.defer();\r\n                var message = \"No se puede enviar el mensaje porque falta el campo \";\r\n                if (data.name == 0 || !angular.isDefined(data.name)) {\r\n                  defer.reject(false);\r\n                  notificationService.error(message + \"nombre correo\");\r\n                }\r\n                if (data.emailSender == 0 || !angular.isDefined(data.emailSender)) {\r\n                  defer.reject(false);\r\n                  notificationService.error(message + \"remitente\");\r\n                }\r\n                if (data.category == 0 || !angular.isDefined(data.category)) {\r\n                  defer.reject(false);\r\n                  notificationService.error(message + \"categoria de correos\");\r\n                }\r\n                if (data.subject == 0 || !angular.isDefined(data.subject)) {\r\n                  defer.reject(false);\r\n                  notificationService.error(message + \"asunto de correo\");\r\n                }\r\n                if (data.target == null || !angular.isDefined(data.target)) {\r\n                  defer.reject(false);\r\n                  notificationService.error(message + \"destinatarios\");\r\n                }\r\n                if (data.scheduleDate == null || !angular.isDefined(data.scheduleDate)) {\r\n                  defer.reject(false);\r\n                  notificationService.error(message + \"fecha y hora de envio\");\r\n                }\r\n\r\n                if (data.sizeAttachment > 2000000) {\r\n                  defer.reject(false);\r\n                  notificationService.error(\"El tamaÃ±o de todos los adjuntos es mayor a lo permitido\");\r\n                }\r\n\r\n                if (angular.isDefined($scope.ammoutEmail)) {\r\n                  //console.log($scope.ammoutEmail.ammount,data.quantitytarget,parseInt($scope.ammoutEmail.ammount) < parseInt(data.quantitytarget));\r\n                  if ($scope.ammoutEmail.accountingMode == \"sending\") {\r\n\r\n                    if (parseInt($scope.ammoutEmail.ammount) < parseInt(data.quantitytarget)) {\r\n                      defer.reject(false);\r\n                      notificationService.error(\"No tiene saldo suficiente para realizar esta campaÃ±a, le invitamos a recargar el servicio.\");\r\n                    }\r\n                  }\r\n                } else {\r\n                  defer.reject(false);\r\n                  notificationService.error(\"No tiene los servicios para realizar la campaÃ±a, por favor comunicarse con soporte\");\r\n                }\r\n\r\n                var scheduleDate = moment(data.scheduleDate).utc(data.gmt).add(10, 'minutes').format('YYYY-MM-DD HH:mm');\r\n                var nowhour = moment().utc('-0500').format('YYYY-MM-DD HH:mm');\r\n\r\n                var dateProgram = moment(scheduleDate);\r\n                var hournow = moment();\r\n                var programeSocial = 'now';\r\n\r\n                if (scheduleDate <= nowhour) {\r\n                  defer.reject(false);\r\n                  notificationService.error(\"la fecha de programación ya expiro, por favor validar.\");\r\n                } else {\r\n                  var postDate = moment(data.scheduleDate).utc(data.gmt);\r\n                  var nowMoment = moment().utc('-0500');\r\n                  if (postDate.diff(nowMoment, 'minutes') <= 20) {\r\n                    programeSocial = \"now\";\r\n                  } else {\r\n                    programeSocial = moment(dateProgram).unix();\r\n                  }\r\n\r\n                }\r\n                objSendDataConfirmation = {dateConfirmation: $scope.dateConfirmation, idMail: $scope.idMail, socialSend: programeSocial};\r\n                defer.resolve(objSendDataConfirmation);\r\n                return defer.promise;\r\n              }\r\n\r\n              //$interval(tick, 1000);\r\n\r\n              $scope.test = {};\r\n              $scope.loaderTestMail = false;\r\n\r\n              $scope.sendTestMail = function () {\r\n                $scope.test.idMail = $stateParams.id;\r\n                $scope.loaderTestMail = true;\r\n                restService.sendTestMail($scope.test).then(function (data) {\r\n                  notificationService.success(data.message);\r\n                  $scope.test.target = '';\r\n                  $scope.test.message = '';\r\n                  $scope.loaderTestMail = false;\r\n                }).catch(function (data) {\r\n                  $scope.loaderTestMail = false;\r\n                });\r\n              };\r\n\r\n              $scope.sendTesterMail = function () {\r\n                $scope.test.idMail = $stateParams.id;\r\n                $scope.loaderTestMail = true;\r\n                restService.sendTestMail($scope.test).then(function (data) {\r\n                  notificationService.success(data.message);\r\n                  $scope.test.target = '';\r\n                  $scope.test.message = '';\r\n                  $scope.loaderTestMail = false;\r\n                }).catch(function (data) {\r\n                  $scope.loaderTestMail = false;\r\n                });\r\n              };\r\n\r\n              restService.getThumbnailMail($stateParams.id).then(function (data) {\r\n                console.log(data.thumb);\r\n                $scope.urlThumbnail = data.thumb;\r\n              });\r\n\r\n              $scope.downloadMailPreview = function () {\r\n                restService.downloadMailPreview($stateParams.id).then(function (data) {\r\n                  if (!data.thumb) {\r\n                    notificationService.error(\"Ocurrio un error generando el archivo, por favor comunicarse con el administrador.\");\r\n                  } else {\r\n                    var url = fullUrlBase + data.thumb;\r\n                    location.href = url;\r\n                  }\r\n                });\r\n              };\r\n\r\n//     $scope.restService.getMd5publish($scope.data).then(function(data){\r\n//        \r\n//      })\r\n\r\n              $scope.getMd5 = function (data) {\r\n                restService.getMd5publish(data).then(function (data) {\r\n                  $scope.data.codigo = angular.copy(data.data);\r\n                  $scope.validateData().then(function (success) {\r\n                    if ($scope.data.facebook) {\r\n                      $scope.publishSocialFacebook(success);\r\n                    } else {\r\n                      $scope.sendDataConfirmationEmail(success);\r\n                    }\r\n                  })\r\n                }).catch(function (data) {\r\n                });\r\n              }\r\n\r\n            }\r\n          ])\r\n          .controller('addAddresseesController', ['$scope', 'restService', '$window', 'incomplete', '$rootScope', '$stateParams', 'notificationService', 'wizard', function ($scope, restService, $window, incomplete, $rootScope, $stateParams, notificationService, wizard) {\r\n              $rootScope.idMailGet = $stateParams.id;\r\n              $scope.enabled = false;\r\n              $scope.enableddb = false;\r\n              $scope.enabledcat = false;\r\n              if (!IsNumeric($stateParams.id)) {\r\n                notificationService.warning(\"El correo no se ha encontrado\");\r\n                location.href = '#/basicinformation/';\r\n              }\r\n\r\n              $scope.data = {\r\n                singleMail: true,\r\n                alldb: false,\r\n                typeUnsuscribed: false,\r\n                typeAccount: null\r\n              };\r\n              function IsNumeric(val) {\r\n                return Number(parseFloat(val)) == val;\r\n              }\r\n              wizard.setdescribe(false);\r\n              wizard.setaddressees(true);\r\n              wizard.setcontent(false);\r\n              wizard.setadvanceoptions(false);\r\n              wizard.setshippingdate(false);\r\n              $rootScope.addressees = wizard.getaddressees();\r\n              $rootScope.describe = wizard.getdescribe();\r\n              $rootScope.content = wizard.getcontent();\r\n              $rootScope.advanceoptions = wizard.getadvanceoptions();\r\n              $rootScope.shippingdate = wizard.getshippingdate();\r\n              $scope.idMail = $rootScope.idMailGet;\r\n              $scope.disabledContactlist = false;\r\n              $scope.disabledSegment = false;\r\n              $scope.addressees = [];\r\n              $scope.addressees = {selectdContactlis: []};\r\n              $scope.addressees = {selectdSegment: []};\r\n              $scope.addressees.showSegment = true;\r\n              $scope.addressees.showstep1 = true;\r\n              $scope.addressees.showContactlist = true;\r\n              $scope.addressees.count = 0;\r\n              $scope.addressees.filerMail = [];\r\n              $scope.categories = \"\";\r\n              $scope.statusandtype = \"\";\r\n\r\n              restService.findMail($scope.idMail).then(function (data) {\r\n\r\n                $scope.addressees.count = data.quantitytarget;\r\n\r\n                if (data.singleMail == 1 && data.alldb == 1 ) {\r\n                    var type = false;                    \r\n                    if(data.typeUnsuscribed == 0 || data.typeUnsuscribed == null){\r\n                        type = false;\r\n                    }else{\r\n                        type = true;\r\n                    }\r\n                    $scope.data = {\r\n                    singleMail: true,\r\n                    alldb: true,\r\n                    idAccount: data.idAccount,\r\n                    typeUnsuscribed: type,\r\n                    typeAccount: data.typeAccount\r\n                  };\r\n                } else if (data.singleMail == 1 && data.alldb == 0) {\r\n                   var type = false;                    \r\n                   if(data.typeUnsuscribed == 0 || data.typeUnsuscribed == null){\r\n                       type = false;\r\n                   }else{\r\n                       type = true;\r\n                   }\r\n                  $scope.data = {\r\n                    singleMail: true,\r\n                    alldb: false,\r\n                    idAccount: data.idAccount,\r\n                    typeUnsuscribed: type,\r\n                    typeAccount: data.typeAccount\r\n                  };\r\n                } else if (data.singleMail == 0 && data.alldb == 0 && data.target == null) {\r\n                   var type = false;                    \r\n                   if(data.typeUnsuscribed == 0 || data.typeUnsuscribed == null){\r\n                       type = false;\r\n                   }else{\r\n                       type = true;\r\n                   }\r\n                  $scope.data = {\r\n                    singleMail: true,\r\n                    alldb: false,\r\n                    idAccount: data.idAccount,\r\n                    typeUnsuscribed: type,\r\n                    typeAccount: data.typeAccount\r\n                  };\r\n                } else if (data.singleMail == 0 && data.alldb == 0) {\r\n                   var type = false;                    \r\n                   if(data.typeUnsuscribed == 0 || data.typeUnsuscribed == null){\r\n                       type = false;\r\n                   }else{\r\n                       type = true;\r\n                   }\r\n                  $scope.data = {\r\n                    singleMail: false,\r\n                    alldb: false,\r\n                    idAccount: data.idAccount,\r\n                    typeUnsuscribed: type,\r\n                    typeAccount: data.typeAccount\r\n                  };\r\n                }\r\n\r\n                if (data.target) {\r\n                  $scope.addressees.showstep1 = false;\r\n                  var json = jQuery.parseJSON(data.target);\r\n                  if (json.type == \"contactlist\") {\r\n                    $scope.statusandtype = json.type;\r\n                    $scope.addressees.showContactlist = false;\r\n                    $scope.addressees.selectdContactlis = json.contactlists;\r\n                    $scope.getAllContactlist();\r\n                  } else if (json.type == \"segment\") {\r\n                    $scope.statusandtype = json.type;\r\n                    $scope.addressees.showSegment = false;\r\n                    $scope.addressees.selectdSegment = json.segment;\r\n                    $scope.getAllSegment();\r\n                  }\r\n                  if (json.filters) {\r\n                    $scope.filters = json.filters;\r\n                    $scope.addressees.condition = json.condition;\r\n                    restService.getMailFilters().then(function (data) {\r\n                      $scope.addressees.filerMail = data;\r\n                    });\r\n                  }\r\n                }\r\n                if(json.filters[0].typeFilters!='' ){\r\n                    $scope.filterContact = 1;\r\n                }\r\n\r\n              });\r\n              $scope.clearSelect = function () {\r\n                $scope.filters = [];\r\n                $scope.addressees.count = 0;\r\n                $scope.disabledContactlist = false;\r\n                $scope.disabledSegment = false;\r\n                $scope.addressees.selectdContactlis = \"\";\r\n                $scope.addressees.selectdSegment = \"\";\r\n                $scope.categories = \"\";\r\n              };\r\n              $scope.getContactlist = function () {\r\n                $scope.filters = [];\r\n                $scope.addressees = {selectdSegment: []};\r\n                $scope.segments = [];\r\n                $scope.contactlists = [];\r\n                $scope.addressees.showstep1 = false;\r\n                $scope.addressees.count = 0;\r\n                $scope.addressees.showSegment = true;\r\n                $scope.addressees.showContactlist = false;\r\n                $scope.prueba = undefined;\r\n                $scope.getAllContactlist();\r\n                $scope.getAllSegment();\r\n              };\r\n              $scope.getAllContactlist = function () {\r\n                restService.getContactlist().then(function (data) {\r\n                  $scope.contactlists = data;\r\n                  $scope.only();\r\n                });\r\n              };\r\n              $scope.getSegment = function () {\r\n                $scope.filters = [];\r\n                $scope.addressees = {selectdContactlis: []};\r\n                $scope.segments = [];\r\n                $scope.contactlists = [];\r\n                $scope.addressees.showstep1 = false;\r\n                $scope.addressees.count = 0;\r\n                $scope.prueba = undefined;\r\n                $scope.prueba2 = undefined;\r\n                $scope.addressees.selectdContactlis = [];\r\n                $scope.addressees.selectdSegment = [];\r\n                $scope.addressees.showSegment = false;\r\n                $scope.addressees.showContactlist = true;\r\n                $scope.getAllSegment();\r\n                $scope.getAllContactlist();\r\n              };\r\n              $scope.getAllSegment = function () {\r\n                restService.getSegment().then(function (data) {\r\n                  $scope.segments = data;\r\n                });\r\n              };\r\n              $scope.selectAction = function () {\r\n                $scope.countContacts(\"contactlist\");\r\n              };\r\n              $scope.selectActionSegment = function () {\r\n                $scope.countContacts(\"segment\");\r\n              };\r\n              $scope.countContacts = function (type) {\r\n                $scope.addressees.count = 0;\r\n                var data = {\r\n                  type: type,\r\n                  segment: $scope.addressees.selectdSegment,\r\n                  contactlist: $scope.addressees.selectdContactlis,\r\n                  filters: $scope.filters,\r\n                  condition: $scope.addressees.condition,\r\n                  idMail: $scope.idMail\r\n                };\r\n                restService.countContact(data).then(function (data) {\r\n                  $scope.addressees.count = data.count;\r\n                  $scope.only();\r\n                });\r\n              };\r\n\r\n              $scope.addAddressees = function () {\r\n                var data = {\r\n                  selectdContactlis: $scope.addressees.selectdContactlis,\r\n                  selectdSegment: $scope.addressees.selectdSegment,\r\n                  showSegment: $scope.addressees.showSegment,\r\n                  showContactlist: $scope.addressees.showContactlist,\r\n                  idMail: $scope.idMail,\r\n                  quantitytarget: $scope.addressees.count,\r\n                  filters: $scope.filters,\r\n                  condition: $scope.addressees.condition,\r\n                  singleMail: $scope.data.singleMail,\r\n                  alldb: $scope.data.alldb,\r\n                  typeUnsuscribed : $scope.data.typeUnsuscribed\r\n                };\r\n                if ($scope.addressees.selectdContactlis && $scope.addressees.selectdContactlis.length > 0) {\r\n                  incomplete.setincomplete(false);\r\n                  $rootScope.incomplete = incomplete.getincomplete();\r\n                  $scope.add(data);\r\n                } else if ($scope.addressees.selectdSegment && $scope.addressees.selectdSegment.length > 0) {\r\n                  incomplete.setincomplete(false);\r\n                  $rootScope.incomplete = incomplete.getincomplete();\r\n                  $scope.add(data);\r\n                } else {\r\n                  incomplete.setincomplete(true);\r\n                  $rootScope.incomplete = incomplete.getincomplete();\r\n                  $scope.add(data);\r\n                }\r\n              };\r\n              $scope.allSegment = function () {\r\n                $scope.disabledSegment = true;\r\n                $scope.addressees.selectdSegment = $scope.segments;\r\n                $scope.selectActionSegment();\r\n              };\r\n              $scope.allContactlist = function () {\r\n                $scope.disabledContactlist = true;\r\n                $scope.addressees.selectdContactlis = $scope.contactlists;\r\n                $scope.selectAction();\r\n              };\r\n              $scope.filters = [];\r\n              $scope.tipeFilters = [\r\n                {id: 1, name: \"Enviar a contactos que hayan recibido un correo\"},\r\n                {id: 2, name: \"Enviar a contactos que hayan abierto un correo\"},\r\n                {id: 3, name: \"Enviar a contactos que hayan hecho clic un enlace\"}\r\n              ];\r\n              $scope.selectMailFilter = function (key) {\r\n                restService.getMailFilters().then(function (data) {\r\n                  $scope.addressees.filerMail = data;\r\n                });\r\n                if (key.typeFilters == 3) {\r\n                  restService.getLinksByMail(key.mailSelected).then(function (data) {\r\n                    key.links = data;\r\n                  });\r\n                } else {\r\n                  if (!$scope.addressees.showContactlist) {\r\n                    $scope.countContacts(\"contactlist\");\r\n                  } else {\r\n                    $scope.countContacts(\"segment\");\r\n                  }\r\n                }\r\n              };\r\n              function IsNumeric(val) {\r\n                return Number(parseFloat(val)) == val;\r\n              }\r\n              $scope.selectinverted = function (key) {\r\n                if (key.typeFilters == 3) {\r\n                  if (IsNumeric(key.mailSelected) && IsNumeric(key.mailSelected) && IsNumeric(key.linkSelected)) {\r\n                    if (!$scope.addressees.showContactlist) {\r\n                      $scope.countContacts(\"contactlist\");\r\n                    } else {\r\n                      $scope.countContacts(\"segment\");\r\n                    }\r\n                  }\r\n                } else {\r\n                  if (IsNumeric(key.mailSelected) && key.typeFilters) {\r\n                    if (!$scope.addressees.showContactlist) {\r\n                      $scope.countContacts(\"contactlist\");\r\n                    } else {\r\n                      $scope.countContacts(\"segment\");\r\n                    }\r\n                  }\r\n                }\r\n              };\r\n              $scope.selectLinkFilter = function () {\r\n                if (!$scope.addressees.showContactlist) {\r\n                  $scope.countContacts(\"contactlist\");\r\n                } else {\r\n                  $scope.countContacts(\"segment\");\r\n                }\r\n              };\r\n              $scope.selectTypeFilter = function (key) {\r\n                key.mailSelected = [];\r\n                key.linkSelected = [];\r\n                key.mail = [];\r\n                key.links = [];\r\n                key.inverted = \"\";\r\n                restService.getMailFilters().then(function (data) {\r\n                  $scope.addressees.filerMail = data;\r\n\r\n                });\r\n                switch (key.typeFilters) {\r\n                  case 1:\r\n\r\n                    break;\r\n                  case 2:\r\n\r\n                    break;\r\n                  case 3:\r\n\r\n                    break;\r\n                }\r\n              };\r\n              \r\n              $scope.filterContact = 0;\r\n              \r\n              $scope.addFilter = function () {\r\n                $scope.addressees.condition = \"all\";\r\n                $scope.filters.push({});\r\n                $scope.filterContact = 1;\r\n                 $('#filterContact').addClass('disabled');\r\n              };\r\n              $scope.removeFilters = function (index) {\r\n                $scope.filters.splice(index, 1);\r\n                $scope.filterContact = 0;\r\n                $('#filterContact').removeClass('disabled');\r\n                if (!$scope.addressees.showContactlist) {\r\n                  $scope.countContacts(\"contactlist\");\r\n                } else {\r\n                  $scope.countContacts(\"segment\");\r\n                }\r\n              };\r\n              $scope.add = function (data) {\r\n                restService.addAddressees(data).then(function () {\r\n                  notificationService.success(\"Se ha guardado la selección de destinatarios correctamente\");\r\n                  location.href = '#/content/' + $scope.idMail;\r\n                });\r\n              };\r\n              $scope.only = function () {\r\n                if ($scope.addressees.showContactlist == false) {\r\n                  var data = {\r\n                    selectdContactlis: $scope.addressees.selectdContactlis,\r\n                    filters: $scope.filters,\r\n                    singleMail: $scope.data.singleMail\r\n                  };\r\n\r\n                  if (typeof data.selectdContactlis !== 'undefined') {\r\n                    //\r\n\r\n                    restService.only(data).then(function (data) {\r\n                      $scope.addressees.count = data.count;\r\n                      $scope.categories = data.categories;\r\n                    });\r\n                  }\r\n                }\r\n\r\n\r\n              };\r\n              $scope.only();\r\n            }])\r\n          .controller('index', ['$scope', 'incomplete', '$rootScope', 'restService', 'notificationService', '$interval', function ($scope, incomplete, $rootScope, restService, notificationService, $interval) {\r\n              $scope.viewlist = true;\r\n              $scope.viewnolist = true;\r\n              $scope.prueba = [{name: 'Eliminar'}];\r\n              $scope.initial = 0;\r\n              $scope.page = 1;\r\n              $scope.mail = [{}];\r\n              $scope.mailToTemplate = [];\r\n              $scope.selected = [];\r\n              $scope.filter = \"\";\r\n              $scope.showTest = false;\r\n              $scope.confirmDelete = function (idMail) {\r\n                $scope.idMail = idMail;\r\n                openModal();\r\n              };\r\n              $scope.confirmCancel = function (idMail) {\r\n                $scope.idMail = idMail;\r\n                openModalCancel(idMail);\r\n              };\r\n              $scope.previewmailtempcont = function (id) {\r\n                restService.previewMailTemplateContent(id).then(function (data) {\r\n\r\n                  var e = data.template;\r\n                  $('#content-preview').empty();\r\n                  $('<iframe frameborder=\"0\" width=\"100%\" height=\"100%\"/>').appendTo('#content-preview').contents().find('body').append(e);\r\n                  $('#myModal').modal('show');\r\n                });\r\n              };\r\n              $scope.pauseMailAn = function (idMail) {\r\n                //console.log(idMail);\r\n                pauseMail(idMail);\r\n              };\r\n              $scope.cancelMailAn = function (idMail) {\r\n                cancelMail(idMail);\r\n              };\r\n              $scope.resumeMailAn = function (idMail) {\r\n                //console.log(idMail);\r\n                resumeMail(idMail);\r\n              };\r\n              $scope.cancelMail = function (idMail) {\r\n                restService.cancelMail(idMail).then(function (data) {\r\n                  notificationService.warning(data.message);\r\n                  closeModalCancel();\r\n                  $scope.getAll();\r\n                });\r\n              };\r\n              $scope.deleteMail = function () {\r\n                restService.deleteMail($scope.idMail).then(function (data) {\r\n                  notificationService.warning(data.message);\r\n                  closeModal();\r\n                  $scope.getAll();\r\n                });\r\n              };\r\n              $scope.openModalCancel = function (idMail) {\r\n                console.log(idMail);\r\n                $scope.idMail = idMail;\r\n                $('#dialogCancel').addClass('dialog--open');\r\n              };\r\n              //        $scope.filter.category = [];\r\n              $scope.filter = {category: []};\r\n              $scope.$watch('showTest', function () {\r\n                if ($scope.showTest) {\r\n                  $scope.filter.showTest = 0;\r\n                } else {\r\n                  $scope.filter.showTest = 1;\r\n                }\r\n                $scope.getAll();\r\n              }, true);\r\n              $scope.forward = function () {\r\n                $scope.initial += 1;\r\n                $scope.page += 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.fastforward = function () {\r\n                $scope.initial = ($scope.mail.total_pages - 1);\r\n                $scope.page = $scope.mail.total_pages;\r\n                $scope.getAll();\r\n              };\r\n              $scope.backward = function () {\r\n                $scope.initial -= 1;\r\n                $scope.page -= 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.fastbackward = function () {\r\n                $scope.initial = 0;\r\n                $scope.page = 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.search = function () {\r\n               $scope.initial = 0;\r\n               $scope.page = 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.searchcategory = function () {\r\n                if ($scope.filter.category.length >= 1) {\r\n                  $scope.initial = 0;\r\n                  $scope.page = 1;\r\n                  $scope.getAll();\r\n                } else {\r\n                  $scope.getAll();\r\n                }\r\n              };\r\n              $scope.$watch('[filter.dateinitial,filter.dateend]', function () {\r\n                //          if(angular.isDefined($scope.filter.dateinitial)){\r\n                //            if($scope.filter.dateinitial != \"\"){\r\n                //              if(angular.isDefined($scope.filter.dateend)){\r\n                //                if($scope.filter.dateend != \"\"){\r\n                //                  $scope.getAll();\r\n                //                }\r\n                //              }\r\n                //            }\r\n                //          }\r\n                $scope.initial = 0;\r\n                $scope.page = 1;\r\n                $scope.getAll();\r\n              });\r\n              $scope.getAll = function () {\r\n                if (angular.isDefined($scope.mail[0])) {\r\n                  $scope.mail[0].items = [];\r\n                }\r\n                restService.getAllMail($scope.initial, $scope.filter).then(function (data) {\r\n                  $scope.mail = data;\r\n                });\r\n              };\r\n              var statusVerify = function () {\r\n                restService.getAllMail($scope.initial, $scope.filter).then(function (data) {\r\n                  data[0].items.forEach(function (item, index) {\r\n                    if ($scope.mail[0].items[index].status != item.status) {\r\n                      $scope.mail[0].items[index].status = item.status;\r\n                      //console.log(item.status);\r\n                    }\r\n                  });\r\n                  //$scope.mail = data;\r\n                });\r\n              };\r\n              $interval(statusVerify, 1000);\r\n              restService.getMailCategory($scope.initial, $scope.filter).then(function (data) {\r\n                $scope.mailCategory = data;\r\n              });\r\n              //$scope.getAll();\r\n              //              $scope.to = function () {\r\n              $scope.toggle = function (item, list) {\r\n                var idx = list.indexOf(item);\r\n                if (idx > -1) {\r\n                  list.splice(idx, 1);\r\n                } else {\r\n                  list.push(item);\r\n                }\r\n              };\r\n              $scope.exists = function (item, list) {\r\n                return list.indexOf(item) > -1;\r\n              };\r\n              $scope.isChecked = function () {\r\n                return $scope.mail[0].items && $scope.selected.length === $scope.mail[0].items.length;\r\n              };\r\n              $scope.isIndeterminate = function () {\r\n                $scope.initial = 0;\r\n                $scope.page = 1;\r\n                return ($scope.selected.length !== $scope.mail[0].items.length);\r\n              };\r\n              $scope.toggleAll = function () {\r\n                if ($scope.selected.length === $scope.mail[0].items.length) {\r\n                  $scope.selected = [];\r\n                } else if ($scope.selected.length === 0 || $scope.selected.length > 0) {\r\n                  $scope.selected = $scope.mail[0].items.slice(0);\r\n                }\r\n              };             \r\n              $scope.getAll();\r\n              //              }\r\n              $scope.targetString = function (target) {\r\n                var string = \"\";\r\n                //                for (var i = 0; i > target.contactlists.length; i++) {\r\n                ////                  console.log(target.contactlists[i]);\r\n                //                  string += target.contactlists[i].name;\r\n                //                }\r\n                return string;\r\n              }\r\n\r\n              //Todo sobre pasar mail a template\r\n              $scope.empty = false;\r\n              $scope.length = false;\r\n              $scope.categ = false;\r\n              $scope.restart = function (idMail) {\r\n                for (var i = 0; i < $scope.mail[0].items.length; i++) {\r\n                  if ($scope.mail[0].items[i].idMail == idMail) {\r\n                    $scope.mailToTemplate = $scope.mail[0].items[i];\r\n                    break;\r\n                  }\r\n                }\r\n                $scope.empty = false;\r\n                $scope.length = false;\r\n                $scope.categ = false;\r\n                $scope.namemailtempcat = '';\r\n              };\r\n\r\n              restService.getMailTemplateCategory().then(function (data) {\r\n                $scope.mailtempcats = data;\r\n              });\r\n\r\n              $scope.saveMailAsMailTemplate = function () {\r\n                restService.getMailContentJSON($scope.mailToTemplate.idMail).then(function (data) {\r\n                  $scope.editor = data.content;\r\n\r\n                  if (angular.isUndefined($scope.namemailtempcat) || $scope.namemailtempcat === '') {\r\n                    $scope.empty = true;\r\n                    $scope.length = false;\r\n                    //notificationService.error(\"El campo de nombre de la plantilla no puede estar vacÃƒÆ’Ã‚Â­o\");\r\n                    //alert(\"El campo de nombre de la plantilla no puede estar vacÃƒÆ’Ã‚Â­o\");\r\n                    return false;\r\n                  }\r\n                  if ($scope.namemailtempcat.length < 2 || $scope.namemailtempcat.length > 80) {\r\n                    $scope.empty = false;\r\n                    $scope.length = true;\r\n                    //notificationService.error(\"El campo de nombre de la plantilla debe tener mÃƒÆ’Ã‚Â­nimo 2 caracteres y mÃƒÆ’Ã‚Â¡ximo 80\");\r\n                    //alert(\"El campo de nombre de la plantilla debe tener mÃƒÆ’Ã‚Â­nimo 2 caracteres y mÃƒÆ’Ã‚Â¡ximo 80\");\r\n                    return false;\r\n                  }\r\n                  if (angular.isUndefined($scope.mailtempcat)) {\r\n                    $scope.categ = true;\r\n                    //notificationService.error(\"Debe seleccionar un ÃƒÆ’Ã‚Â­tem del listado de categorÃƒÆ’Ã‚Â­as\");\r\n                    //alert(\"Debe seleccionar un ÃƒÆ’Ã‚Â­tem del listado de categorÃƒÆ’Ã‚Â­as\");\r\n                    return false;\r\n                  }\r\n\r\n                  var data = {\r\n                    nameMailTemplate: $scope.namemailtempcat,\r\n                    mailTemplateCateg: $scope.mailtempcat,\r\n                    editor: $scope.editor\r\n                  };\r\n                  console.log(data);\r\n\r\n                  //                document.getElementById('iframeEditor').contentWindow.RecreateEditor();\r\n\r\n                  restService.saveMailAsMailTemplate(data, null).then(function (data) {\r\n                    $(\"#saveMailAsMailTemplate\").modal(\"hide\");\r\n                    $scope.namemailtempcat = '';\r\n                    $scope.mailtempcat = '';\r\n                    $scope.empty = false;\r\n                    $scope.length = false;\r\n                    $scope.cat = false;\r\n\r\n                    notificationService.success(data.message);\r\n                  });\r\n                });\r\n\r\n\r\n              };\r\n              // Fin de todo sobre pasar mail a template\r\n              \r\n              $scope.statusFunc = function () {\r\n                  console.log('Afuera');\r\n                  console.log($scope.filter.mailStatus);\r\n                if ($scope.filter.mailStatus.length > 0) {\r\n                  console.log('Adentro');\r\n                  console.log($scope.filter.mailStatus);\r\n                  $scope.initial = 0;\r\n                  $scope.page = 1;\r\n                  $scope.getAll();\r\n                }\r\n              };\r\n\r\n            }])\r\n          .controller('contentController', ['$scope', 'restService', '$stateParams', '$rootScope', 'notificationService', '$filter', 'wizard', function ($scope, restService, $stateParams, $rootScope, notificationService, $filter, wizard) {\r\n              wizard.setdescribe(false);\r\n              wizard.setaddressees(false);\r\n              wizard.setcontent(true);\r\n              wizard.setadvanceoptions(false);\r\n              wizard.setshippingdate(false);\r\n              $rootScope.addressees = wizard.getaddressees();\r\n              $rootScope.describe = wizard.getdescribe();\r\n              $rootScope.content = wizard.getcontent();\r\n              $rootScope.advanceoptions = wizard.getadvanceoptions();\r\n              $rootScope.shippingdate = wizard.getshippingdate();\r\n              $rootScope.idMailGet = $stateParams.id;\r\n              $scope.idMail = $rootScope.idMailGet;\r\n              $scope.imagenDate = new Date();\r\n              $scope.imagenTime = $scope.imagenDate.getTime();\r\n              if (!IsNumeric($stateParams.id)) {\r\n                notificationService.warning(\"El correo no se ha encontrado\");\r\n                location.href = '#/basicinformation/';\r\n              }\r\n\r\n              function IsNumeric(val) {\r\n                return Number(parseFloat(val)) == val;\r\n              }\r\n              $scope.getContent = {};\r\n              $scope.setPlane = {};\r\n              $scope.boolEditors = true;\r\n              $scope.PlaneError = {};\r\n              htmlPreview($scope.idMail);\r\n              restService.getContentMail($scope.idMail).then(function (data) {\r\n\r\n                if (!data.content) {\r\n                  //            console.log(data);\r\n                  $scope.boolEditors = true;\r\n                } else {\r\n                  //            console.log(data);\r\n                  restService.getThumbnailMail($stateParams.id).then(function (data) {\r\n                    $scope.urlThumbnail = data.thumb;\r\n                  });\r\n                  $scope.boolEditors = false;\r\n                  $scope.getContent = data.content;\r\n                  $scope.setPlane.content = data.content.plaintext;\r\n                }\r\n              });\r\n              $scope.addplaintext = function () {\r\n                var data = {\r\n                  idMail: $scope.idMail,\r\n                  plaintext: $scope.setPlane.content\r\n                };\r\n                restService.addPlaintext(data).then(function () {\r\n                  notificationService.primary(\"Se ha modificado el texto plano del correo\");\r\n                  $scope.closeModal();\r\n                });\r\n              };\r\n              $scope.openModal = function () {\r\n                $('.dialog').addClass('dialog--open');\r\n              }\r\n\r\n              $scope.closeModal = function () {\r\n                $('.dialog').removeClass('dialog--open');\r\n              }\r\n            }])\r\n          .controller('contentEditorController', ['$scope', 'restService', 'notificationService', function ($scope, restService, notificationService) {\r\n\r\n              $scope.registerContent = function (idMail) {\r\n                var data = {\r\n                  editor: document.getElementById('iframeEditor').contentWindow.catchEditorData()\r\n                };\r\n                restService.addContentEditor(idMail, data).then(function (res) {\r\n                  location.href = fullUrlBase + templateBase + '/create#/content/' + res['idMail'];\r\n                });\r\n              };\r\n              $scope.saveContent = function (idMail) {\r\n                var data = {\r\n                  editor: document.getElementById('iframeEditor').contentWindow.catchEditorData()\r\n                };\r\n                restService.addContentEditor(idMail, data).then(function (res) {\r\n                  document.getElementById('iframeEditor').contentWindow.RecreateEditor();\r\n                  notificationService.success(res['msg']);\r\n                });\r\n              };\r\n              $scope.empty = false;\r\n              $scope.length = false;\r\n              $scope.categ = false;\r\n\r\n\r\n\r\n              $scope.saveMailAsMailTemplate = function () {\r\n                if (angular.isUndefined($scope.namemailtempcat) || $scope.namemailtempcat === '') {\r\n                  $scope.empty = true;\r\n                  $scope.length = false;\r\n                  //notificationService.error(\"El campo de nombre de la plantilla no puede estar vacÃƒÆ’Ã‚Â­o\");\r\n                  //alert(\"El campo de nombre de la plantilla no puede estar vacÃƒÆ’Ã‚Â­o\");\r\n                  return false;\r\n                }\r\n                if ($scope.namemailtempcat.length < 2 || $scope.namemailtempcat.length > 80) {\r\n                  $scope.empty = false;\r\n                  $scope.length = true;\r\n                  //notificationService.error(\"El campo de nombre de la plantilla debe tener mÃƒÆ’Ã‚Â­nimo 2 caracteres y mÃƒÆ’Ã‚Â¡ximo 80\");\r\n                  //alert(\"El campo de nombre de la plantilla debe tener mÃƒÆ’Ã‚Â­nimo 2 caracteres y mÃƒÆ’Ã‚Â¡ximo 80\");\r\n                  return false;\r\n                }\r\n                if (angular.isUndefined($scope.mailtempcat)) {\r\n                  $scope.categ = true;\r\n                  //notificationService.error(\"Debe seleccionar un ÃƒÆ’Ã‚Â­tem del listado de categorÃƒÆ’Ã‚Â­as\");\r\n                  //alert(\"Debe seleccionar un ÃƒÆ’Ã‚Â­tem del listado de categorÃƒÆ’Ã‚Â­as\");\r\n                  return false;\r\n                }\r\n\r\n                var data = {\r\n                  nameMailTemplate: $scope.namemailtempcat,\r\n                  mailTemplateCateg: $scope.mailtempcat,\r\n                  editor: document.getElementById('iframeEditor').contentWindow.catchEditorData()\r\n                };\r\n                document.getElementById('iframeEditor').contentWindow.RecreateEditor();\r\n                restService.saveMailAsMailTemplate(data, null).then(function (data) {\r\n                  $(\"#saveMailAsMailTemplate\").modal(\"hide\");\r\n                  $scope.namemailtempcat = '';\r\n                  $scope.mailtempcat = '';\r\n                  $scope.empty = false;\r\n                  $scope.length = false;\r\n                  $scope.cat = false;\r\n                  notificationService.success(data.message);\r\n                });\r\n              };\r\n              $scope.restart = function () {\r\n                $scope.empty = false;\r\n                $scope.length = false;\r\n                $scope.categ = false;\r\n                $scope.namemailtempcat = '';\r\n              };\r\n\r\n\r\n            }])\r\n          .controller('contentUrlController', ['$scope', 'restService', 'notificationService', function ($scope, restService, notificationService) {\r\n              $scope.trimContent = function () {\r\n                $('#url').val($('#url').val().trim());\r\n              }\r\n\r\n              $scope.registerContentUrl = function () {\r\n                //          if ($scope.checkboximage) {\r\n                //            var image = $scope.checkboximage;\r\n                //          } else {\r\n                //            image = false;\r\n                //          }\r\n                sendData(\"no load\");\r\n                //          sendData(image);\r\n              };\r\n              //        $scope.saveContent = function (idMail) {\r\n              //          var data = {\r\n              //            editor: document.getElementById('iframeEditor').contentWindow.catchEditorData()\r\n              //          };\r\n              //          restService.addContentEditor(idMail, data).then(function (res) {\r\n              //            document.getElementById('iframeEditor').contentWindow.RecreateEditor();\r\n              //            notificationService.success(res['msg']);\r\n              //          });\r\n              //        };\r\n            }])\r\n          .controller('advanceoptionsController', ['$scope', 'restService', 'notificationService', '$rootScope', '$stateParams', '$mdDialog', 'FileUploader', 'wizard', '$FB', '$q', 'constantMail', '$timeout', '$window', function ($scope, restService, notificationService, $rootScope, $stateParams, $mdDialog, FileUploader, wizard, $FB, $q, constantMail, $timeout, $window) {\r\n          \r\n              //              $scope.notifications = false;\r\n              //              $scope.notificationEmails = \"\";\r\n              //              $scope.dataadv = [];\r\n              $scope.dataadv = {};\r\n              $scope.sizeFiles = 0;\r\n\r\n              $scope.result = [];\r\n\r\n              var num = 1;\r\n              var numbers = [];\r\n              while (num <= 30) {\r\n                numbers[num] = num;\r\n                num++;\r\n              }\r\n              $scope.numbers = numbers;\r\n              //              $scope.typesTimes = typesTimes;\r\n              $scope.typesTimes = {hour: \"horas\", day: \"días\", week: \"semanas\"};\r\n              //              console.log($scope.numbers);\r\n              //              console.log($scope.typesTimes);\r\n              $scope.dataadv.notifications = false;\r\n              $scope.dataadv.notificationEmails = \"\";\r\n              $scope.dataadv.statistics = false;\r\n              $scope.dataadv.statisticsEmails = \"\";\r\n              wizard.setdescribe(false);\r\n              wizard.setaddressees(false);\r\n              wizard.setcontent(false);\r\n              wizard.setadvanceoptions(true);\r\n              wizard.setshippingdate(false);\r\n              $rootScope.addressees = wizard.getaddressees();\r\n              $rootScope.describe = wizard.getdescribe();\r\n              $rootScope.content = wizard.getcontent();\r\n              $rootScope.advanceoptions = wizard.getadvanceoptions();\r\n              $rootScope.shippingdate = wizard.getshippingdate();\r\n              $rootScope.idMailGet = $stateParams.id;\r\n              $scope.isModal = \"\";\r\n              if (!IsNumeric($stateParams.id)) {\r\n                notificationService.warning(\"El correo no se ha encontrado\");\r\n                location.href = '#/basicinformation/';\r\n              }\r\n\r\n              function IsNumeric(val) {\r\n                return Number(parseFloat(val)) == val;\r\n              }\r\n              $scope.idMail = $rootScope.idMailGet;\r\n              $scope.status = '  ';\r\n              $scope.customFullscreen = false;\r\n              $scope.deleteAttached = function (id, index) {\r\n                restService.deleteAttached(id).then(function () {\r\n                  $scope.attach();\r\n                });\r\n              };\r\n              function DialogController($scope, $mdDialog) {\r\n                $scope.hide = function () {\r\n                  $mdDialog.hide();\r\n                };\r\n                $scope.cancel = function () {\r\n                  $mdDialog.cancel();\r\n                };\r\n                $scope.answer = function () {\r\n                  $('#adjun').modal('hide');\r\n                  $scope.selectFile();\r\n                };\r\n              }\r\n              \r\n              \r\n              var uploadUrl = fullUrlBase + \"gallery/uploadfileadjunt/\" + $scope.idMail;\r\n              var uploader = $scope.uploader = new FileUploader({\r\n                url: uploadUrl\r\n              });\r\n              // FILTERS\r\n              //\r\n              //        uploader.filters.push({\r\n              //          name: 'customFilter',\r\n              //          fn: function (item /*{File|FileLikeObject}*/, options) {\r\n              //            return this.queue.length < 10;\r\n              //          }\r\n              //        });\r\n\r\n\r\n              uploader.onWhenAddingFileFailed = function (item /*{File|FileLikeObject}*/, filter, options) {\r\n                //console.info('onWhenAddingFileFailed', item, filter, options);\r\n              };\r\n              uploader.onAfterAddingFile = function (fileItem) {\r\n                //console.info('onAfterAddingFile', fileItem);\r\n                //          $scope.arrFilePending = true;\r\n                $scope.uploader.queue[$scope.uploader.queue.length - 1].upload();\r\n              };\r\n              uploader.onAfterAddingAll = function (addedFileItems) {\r\n                //console.info('onAfterAddingAll', addedFileItems);\r\n              };\r\n              uploader.onBeforeUploadItem = function (item) {\r\n                //console.info('onBeforeUploadItem', item);\r\n              };\r\n              uploader.onProgressItem = function (fileItem, progress) {\r\n                //console.info('onProgressItem', fileItem, progress);\r\n              };\r\n              uploader.onProgressAll = function (progress) {\r\n                //console.info('onProgressAll', progress);\r\n              };\r\n              uploader.onSuccessItem = function (fileItem, response, status, headers) {\r\n                //console.info('onSuccessItem', fileItem, response, status, headers);\r\n              };\r\n              uploader.onErrorItem = function (fileItem, response, status, headers) {\r\n                //console.info('onErrorItem', fileItem, response, status, headers);\r\n              };\r\n              uploader.onCancelItem = function (fileItem, response, status, headers) {\r\n                //console.info('onCancelItem', fileItem, response, status, headers);\r\n              };\r\n              uploader.onCompleteItem = function (fileItem, response, status, headers) {\r\n\r\n                //console.info('onCompleteItem', fileItem, response, status, headers);\r\n              };\r\n              uploader.onCompleteAll = function () {\r\n\r\n                $scope.attach();\r\n                //          $scope.arrFilePending = false;\r\n                //console.info('onCompleteAll');\r\n              };\r\n              console.log($scope.idMail);\r\n              $scope.showTabDialog = function (ev) {\r\n                document.body.scrollTop = 0;\r\n                $mdDialog.show({\r\n                  scope: $scope.$new(),\r\n                  //            mdDialog: $mdDialog,\r\n                  controller: DialogController,\r\n                  templateUrl: 'tabDialog.tmpl.html',\r\n                  parent: angular.element(document.body),\r\n                  targetEvent: ev,\r\n                  clickOutsideToClose: true\r\n                }).then(function (answer) {\r\n                  $scope.status = 'You said the information was \"' + answer + '\".';\r\n                }, function () {\r\n                  $scope.status = 'You cancelled the dialog.';\r\n                });\r\n              };\r\n              \r\n        \r\n        $scope.uploaderTwo = function() {\r\n\r\n      //==============================================\r\n\r\n      /*var hashLocal  = location.hash;\r\n                  var arrayTemp = hashLocal.split(\"/\");\r\n                  var idMail = arrayTemp['2'];*/\r\n\r\n                  var uploader = new plupload.Uploader({\r\n        browse_button : 'pickfiles', // you can pass in id...\r\n        container: document.getElementById('container'), \r\n        //url: \"{{url('mail/loadpdf')}}/\"+idMail,\r\n        url: \"../../mail/loadpdf/\"+$scope.idMail,\r\n        file_data_name: \"file\",\r\n        filters : {\r\n            max_file_size : '500mb',\r\n            mime_types: [\r\n      {title : \"Zip files\", extensions : \"zip\"}\r\n                          ]\r\n        },\r\n        // Flash settings\r\n        flash_swf_url : '/plupload/js/Moxie.swf',\r\n        // Silverlight settings\r\n        silverlight_xap_url : '/plupload/js/Moxie.xap',\r\n        multi_selection: false,\r\n        rename: true,\r\n        sortable: true,\r\n        dragdrop: true,\r\n\r\n        views: {\r\n            list: false,\r\n            thumbs: false\r\n        },        \r\n\r\n        init: {\r\n            PostInit: function() {\r\n          document.getElementById('filelist').innerHTML = '';\r\n\r\n          document.getElementById('uploadfiles').onclick = function() {\r\n              uploader.start()\r\n              return false;\r\n          };\r\n            },\r\n\r\n            FilesAdded: function(up, files) {\r\n          plupload.each(files, function(file) {\r\n            document.getElementById('filelist').innerHTML += '<div id=\"' + file.id + '\">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b></div>';\r\n              });\r\n            },\r\n\r\n            UploadProgress: function(up, file) {\r\n          document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = '<span>' + file.percent + \"%</span>\";\r\n            },\r\n                          \r\n            FileUploaded: function(up, err) {\r\n\r\n          restService.getTableResults($scope.idMail)\r\n           .then(function (data) { \r\n             $scope.fileadjuntpdf = data;\r\n             $scope.result = data; \r\n             if(data.uploadstatus == \"error\"){\r\n                 notificationService.error(\"Ah ocurrido un error validando el archivo que estas intentando cargar,\");\r\n                 //debo de hacer los movimientos a la inversa para que pueda cargar un archivo nuevamente en la vista.\r\n                 $('#next').hide('slow');\r\n                 $('#gogo').hide('slow');\r\n                 $('#resume').hide('slow');\r\n                 $('#buttons').show('slow');\r\n                 $('#htab3').show('slow');\r\n                 $('#filelist').show('slow');\r\n                 $('#container').show('slow');\r\n                 \r\n                 document.getElementById('filelist').innerHTML = '';\r\n                 \r\n             }\r\n           })\r\n           .catch(function (data) { notificationService.error(data); });\r\n          \r\n          $('#next').show('slow');\r\n          $('#gogo').show('slow');\r\n          $('#resume').show('slow');\r\n          $('#buttons').hide('slow');\r\n          $('#htab3').hide('slow');\r\n          $('#filelist').hide('slow');\r\n          $('#container').hide('slow');\r\n\r\n            },\r\n\r\n            Error: function(up, err) {\r\n          document.getElementById('console').innerHTML += \"\\nError #\" + err.code + \": \" + err.message;\r\n            }\r\n        }\r\n          });\r\n\r\n                  uploader.init();\r\n      \r\n      //==============================================\r\n\r\n        }\r\n        $scope.uploaderTwo(); //inicializando el modulo puesto...\r\n\r\n              $scope.answer = function () {\r\n                $('#adjun').modal('hide');\r\n              };\r\n              //        prueba($scope.idMail);\r\n              $scope.fileadjunt = [];\r\n              $scope.fileadjuntpdf = [];\r\n              $scope.fileSelecteds = [];\r\n              $scope.divfile = true;\r\n              //        $scope.tabload = function () {\r\n              //          $scope.divfile = false;\r\n              //        }\r\n              //        $scope.tabgallery = function () {\r\n              //          $scope.divfile = true;\r\n              //        }\r\n              $scope.count = 0;\r\n              $scope.initial = 0;\r\n              $scope.page = 1;\r\n              $scope.hidefile = false;\r\n              $scope.search = function () {\r\n                $scope.getAll();\r\n              };\r\n              $scope.forward = function () {\r\n                $scope.initial += 1;\r\n                $scope.page += 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.fastforward = function () {\r\n                $scope.initial = ($scope.gallery.total_pages - 1);\r\n                $scope.page = $scope.gallery.total_pages;\r\n                $scope.getAll();\r\n              };\r\n              $scope.backward = function () {\r\n                $scope.initial -= 1;\r\n                $scope.page -= 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.fastbackward = function () {\r\n                $scope.initial = 0;\r\n                $scope.page = 1;\r\n                //          $scope.addFile();\r\n                $scope.getAll();\r\n              };\r\n              $scope.getAll = function () {\r\n                restService.getAllGallery($scope.initial).then(function (data) {\r\n                  $scope.gallery = data;\r\n                  $scope.attach();\r\n                  $scope.attachpdf();\r\n                });\r\n              };\r\n              $scope.attach = function () {\r\n                restService.getAllAttachment($scope.idMail).then(function (data) {\r\n                  $scope.fileadjunt = data;\r\n                  $scope.sizeFiles = 0;\r\n                  $scope.fileSelecteds = angular.copy($scope.fileadjunt);\r\n                  if ($scope.fileadjunt.length > 0) {\r\n                    $scope.hidefile = true;\r\n                    $scope.selectFile();\r\n                    $scope.setSizeFile();\r\n                  }\r\n                });\r\n              };\r\n              $scope.attachpdf = function () {\r\n                restService.getAllAttachmentpdf($scope.idMail).then(function (data) {\r\n                  $scope.fileadjuntpdf = data;\r\n                  $scope.result = data;\r\n                  $scope.sizeFiles = 0;\r\n                  //$scope.fileSelecteds = angular.copy($scope.fileadjuntpdf);\r\n                  if ($scope.fileadjuntpdf.files.length > 0) {\r\n                    $('#next').show('slow');\r\n                    $('#gogo').show('slow');\r\n                    $('#resume').show('slow');\r\n                    $('#buttons').hide('slow');\r\n                    $('#htab3').hide('slow');\r\n                    $('#filelist').hide('slow');\r\n                    $('#container').hide('slow');\r\n                  }\r\n                });\r\n              };\r\n              $scope.setSizeFile = function () {\r\n                for (var i in $scope.fileadjunt) {\r\n                  $scope.sizeFiles = $scope.sizeFiles + parseInt($scope.fileadjunt[i].size);\r\n                }\r\n              }\r\n\r\n              $scope.selectFile = function () {\r\n                for (var i = 0; i < $scope.gallery[0].items.length; i++) {\r\n                  $scope.gallery[0].items[i].class = {}\r\n                  for (var j in $scope.fileadjunt) {\r\n                    if ($scope.fileadjunt[j].idAsset == $scope.gallery[0].items[i].idAsset) {\r\n                      $scope.gallery[0].items[i].class.border = \"1px solid red\";\r\n                      $scope.gallery[0].items[i].class.opacity = 0.5;\r\n                    }\r\n                  }\r\n                }\r\n              };\r\n              $scope.selectedAsset = function (data, $index) {\r\n                var x = $scope.gallery[0].items[$index];\r\n                if (angular.isDefined(x.class) && !angular.equals(x.class, {})) {\r\n                  for (var i in $scope.fileSelecteds) {\r\n                    if ($scope.fileSelecteds[i].idAsset == data.idAsset) {\r\n                      $scope.fileSelecteds.splice(i, 1);\r\n                    }\r\n                  }\r\n                  $scope.gallery[0].items[$index].class = {};\r\n                } else {\r\n                  $scope.fileSelecteds.push(data);\r\n                  $scope.gallery[0].items[$index].class = {};\r\n                  $scope.gallery[0].items[$index].class.border = \"1px solid red\";\r\n                  $scope.gallery[0].items[$index].class.opacity = 0.5;\r\n                }\r\n              };\r\n              $scope.addFile = function () {\r\n                //          if($scope.arrFilePending){\r\n                //            $scope.uploader.uploadAll();\r\n                //          }\r\n                //          console.log($scope.fileSelecteds);\r\n                //          return;\r\n                if ($scope.fileSelecteds.length > 0) {\r\n                  $scope.hidefile = true;\r\n                  var data = {\r\n                    file: $scope.fileSelecteds,\r\n                    idMail: $scope.idMail\r\n                  };\r\n                  restService.addAdjunt(data).then(function () {\r\n                    $scope.attach();\r\n                  });\r\n                }\r\n                //$scope.answer('not useful');\r\n                $('#adjun').modal('hide');\r\n              };\r\n              $scope.addFileLoad = function () {\r\n                //console.log(123);\r\n                //          $(\"#myModal\").modal(\"hide\");\r\n                //          $scope.getAll();\r\n              };\r\n              $scope.getAll();\r\n              $scope.googleAnalyticsLink = [];\r\n              $scope.showLinksGoogleAnalytics = false;\r\n              $scope.googleAnalytics = {links: [], campaignName: \"\", idMail: $stateParams.id};\r\n              $scope.disabledSendDataGoogleAnalytics = false;\r\n\r\n              $scope.sendDataGoogleAnalytics = function () {\r\n                if ($scope.googleAnalytics.campaignName.length < 2 || $scope.googleAnalytics.links.length == 0) {\r\n                  notificationService.error(\"Los campos nombre de campaña y seguimiento de Google Analytics no pueden estar vacios.\");\r\n                } else {\r\n                  restService.sendDataGoogleAnalitics($scope.googleAnalytics).then(function (data) {\r\n                    if (data.action == \"create\") {\r\n                      notificationService.success(data.message);\r\n                    } else {\r\n                      notificationService.primary(data.message);\r\n                    }\r\n                  });\r\n                }\r\n              };\r\n              $scope.clearDataGoogleAnalytics = function () {\r\n                $scope.googleAnalytics.campaignName = \"\";\r\n                $scope.googleAnalytics.links = [];\r\n                //$scope.dataGoogleAnalytics = {};\r\n              };\r\n              $scope.discardChangesGoogleAnalytics = function () {\r\n                $scope.showLinksGoogleAnalytics = false;\r\n                $scope.googleAnalytics.campaignName = \"\";\r\n                $scope.googleAnalytics.links = [];\r\n                //$scope.dataGoogleAnalytics = {};\r\n              };\r\n              $scope.changeNotifications = function () {\r\n                $(\"#notificationArea\").removeClass(\"error-focus\");\r\n                if (!$scope.notifications) {\r\n                  $scope.dataadv.notificationEmails = \"\";\r\n                  $(\"#advert-error\").removeClass('color-danger');\r\n                }\r\n                //                console.log($scope.dataadv.notifications);\r\n                //                console.log($scope.dataadv.notificationEmails);\r\n\r\n              }\r\n              $scope.changeStatistics = function () {\r\n                $(\"#statisticsArea\").removeClass(\"error-focus\");\r\n                if (!$scope.statistics) {\r\n                  $scope.dataadv.statisticsEmails = \"\";\r\n                  $scope.dataadv.quantity = null;\r\n                  $scope.dataadv.typeTime = null;\r\n                  $(\"#advert-error-statistics\").removeClass('color-danger');\r\n                }\r\n                //                console.log($scope.dataadv.statistics);\r\n                //                console.log($scope.dataadv.statistics);\r\n\r\n              }\r\n\r\n              $scope.validateEmail = function () {\r\n                $(\"#notificationArea\").removeClass(\"error-focus\");\r\n                var notEmails = $scope.dataadv.notificationEmails.split(',');\r\n                var cont = 0;\r\n                var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                for (i = 0; i < notEmails.length; i++) {\r\n                  if (!re.test(notEmails[i])) {\r\n                    cont++;\r\n                  }\r\n                }\r\n                //                .log.log(\"El array tiene \" + notEmails.length + \" posiciones y su contenido es '\" + notEmails[0] + \"' en su posicion 0\");\r\n                if (cont > 0) {\r\n                  $(\"#notificationArea\").addClass('error-focus');\r\n                }\r\n\r\n                if (notEmails.length == 1 && notEmails[0] == '') {\r\n                  $(\"#notificationArea\").removeClass(\"error-focus\");\r\n                  $(\"#advert-error\").removeClass('color-danger');\r\n                }\r\n                //                console.log(\"Posiciones: \" + notEmails.length);\r\n\r\n                if (notEmails.length > 8) {\r\n                  $(\"#notificationArea\").addClass('error-focus');\r\n                  $(\"#advert-error\").addClass('color-danger');\r\n                } else {\r\n                  $(\"#advert-error\").removeClass('color-danger');\r\n                }\r\n\r\n              }\r\n              $scope.validateEmailStatistics = function () {\r\n                $(\"#statisticsArea\").removeClass(\"error-focus\");\r\n                var notEmails = $scope.dataadv.statisticsEmails.split(',');\r\n                var cont = 0;\r\n                var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                for (i = 0; i < notEmails.length; i++) {\r\n                  if (!re.test(notEmails[i])) {\r\n                    cont++;\r\n                  }\r\n                }\r\n                //                console.log(\"El array tiene \" + notEmails.length + \" posiciones y su contenido es '\" + notEmails[0] + \"' en su posicion 0\");\r\n                if (cont > 0) {\r\n                  $(\"#statisticsArea\").addClass('error-focus');\r\n                }\r\n\r\n                if (notEmails.length == 1 && notEmails[0] == '') {\r\n                  $(\"#statisticsArea\").removeClass(\"error-focus\");\r\n                  $(\"#advert-error-statistics\").removeClass('color-danger');\r\n                }\r\n                //                console.log(\"Posiciones: \" + notEmails.length);\r\n\r\n                if (notEmails.length > 8) {\r\n                  $(\"#statisticsArea\").addClass('error-focus');\r\n                  $(\"#advert-error-statistics\").addClass('color-danger');\r\n                } else {\r\n                  $(\"#advert-error-statistics\").removeClass('color-danger');\r\n                }\r\n\r\n              }\r\n\r\n              $scope.sendDataForTable = function(){\r\n                  //console.log(\"esta entrando al metodo xD\");  \r\n                  restService.getTableResults($scope.idMail)\r\n                        .then(function (data) { $scope.result = data; })\r\n                        .catch(function (data) { notificationService.error(data); });\r\n              }\r\n              //APP FACEBOOK\r\n              function ModalPageFacebookCtrl($scope, $mdDialog, pages) {\r\n                $scope.pages = pages\r\n                $scope.hide = function () {\r\n                  $mdDialog.hide();\r\n                };\r\n                $scope.closeDialog = function () {\r\n                  $mdDialog.cancel();\r\n                };\r\n                $scope.selectedPage = function (page) {\r\n                  $mdDialog.hide(page);\r\n                }\r\n              }\r\n\r\n              $scope.appFacebook = {\r\n                fanPageSelected: false,\r\n                checkPermissionFacebookPage: function (page) {\r\n                  var defer = $q.defer();\r\n                  var promise = defer.promise;\r\n                  var arrPageReturn = {data: []};\r\n                  for (var i in page) {\r\n                    if (typeof page[i].perms.indexOf(constantMail.permissionFBAdmin) != \"number\" ||\r\n                            typeof page[i].perms.indexOf(constantMail.permissionFBBasicAdmin) != \"number\" ||\r\n                            typeof page[i].perms.indexOf(constantMail.permissionFBCreateContent) != \"number\") {\r\n                      continue;\r\n                    }\r\n                    arrPageReturn.data.push(page[i]);\r\n                  }\r\n                  if (arrPageReturn.data.length <= 0) {\r\n                    defer.reject(constantMail.errorLengthFanPage);\r\n                  }\r\n                  defer.resolve(arrPageReturn);\r\n                  return promise;\r\n                },\r\n                changeSwitch: function () {\r\n                  if ($scope.appFacebook.facebook) {\r\n                    if (!this.fanPageSelected) {\r\n                      $scope.appFacebook.login(false);\r\n                    }\r\n                  } else {\r\n\r\n                  }\r\n                },\r\n                login: function (objPage) {\r\n                  $FB.getLoginStatus(function (response) {\r\n                    console.log(response);\r\n                    if (response.status === 'connected') {\r\n                      $FB.api('/me/accounts', function (response) {\r\n//                      $FB.api('/' + $FB.getUserID() + '/accounts', function (response) {\r\n                        if (response.error) {\r\n                         //notificationService.error(constantMail.errorApiFacebook);\r\n                          return;\r\n                        }\r\n                        $scope.appFacebook.checkPermissionFacebookPage(response.data).then(function (response) {\r\n                        if (!objPage) {\r\n                          $scope.appFacebook.showModalSelectedPage(response);\r\n                        } else {\r\n                          $scope.appFacebook.setFacebook(response, objPage);\r\n                        }\r\n                        }).catch(function (data) {\r\n                          notificationService.error(data);\r\n                        });\r\n                      });\r\n                    } else {\r\n                      $FB.login(function () {\r\n                        $FB.api('/me/accounts', function (response) {\r\n//                        $FB.api('/' + $FB.getUserID() + '/accounts', function (response) {\r\n                          if (response.error) {\r\n                            //notificationService.error(constantMail.errorApiFacebook);\r\n                            return;\r\n                          }\r\n                          $scope.appFacebook.checkPermissionFacebookPage(response.data).then(function (response) {\r\n                          if (!objPage) {\r\n                            $scope.appFacebook.showModalSelectedPage(response);\r\n                          } /*else {\r\n                            $scope.appFacebook.setFacebook(response, objPage);\r\n                          }*/\r\n                          }).catch(function (data) {\r\n                            notificationService.error(data);\r\n                          });\r\n                        });\r\n                      }, {\r\n                        scope: 'publish_actions,publish_pages,manage_pages'\r\n                      });\r\n                    }\r\n                  });\r\n                },\r\n                getPicturesPage: function (id) {\r\n                  var defer = $q.defer();\r\n                  var promise = defer.promise;\r\n                  FB.api('/' + id + '/picture?redirect=false', function (response) {\r\n                    defer.resolve(response);\r\n                  });\r\n                  return promise;\r\n                },\r\n                getFanPageArr: function (data) {\r\n                  var defer = $q.defer();\r\n                  var promises = [];\r\n                  var response = data;\r\n                  angular.forEach(response, function (value) {\r\n                    promises.push($scope.appFacebook.getPicturesPage(value.id));\r\n                  });\r\n                  function setResolve(data) {\r\n                    for (var i = 0; i < data.length; i++) {\r\n                      response[i].picture = data[i].data.url;\r\n                    }\r\n                    defer.resolve(response);\r\n                  }\r\n                  $q.all(promises).then(function (data) {\r\n                    setResolve(data)\r\n                  });\r\n                  return defer.promise;\r\n                },\r\n                showModalSelectedPage: function (data) {\r\n                  var pages = data.data\r\n\r\n                  $scope.appFacebook.getFanPageArr(pages).then(function (data) {\r\n                    document.body.scrollTop = 0;\r\n                    $mdDialog.show({\r\n                      scope: $scope.$new(),\r\n                      controller: ModalPageFacebookCtrl,\r\n                      template: constantMail.templateModalPageFacebook,\r\n                      parent: angular.element(document.body),\r\n                      clickOutsideToClose: true,\r\n                      disableParentScroll: false,\r\n                      locals: {\r\n                        pages: data\r\n                      },\r\n                    }).then(function (response) {\r\n                      $scope.appFacebook.fanPageSelected = response;\r\n                    }, function () {\r\n                      if (!$scope.appFacebook.fanPageSelected) {\r\n                        $scope.appFacebook.facebook = false;\r\n                      }\r\n                    });\r\n                  });\r\n                },\r\n                setFacebook: function (response, objPage) {\r\n                  $scope.appFacebook.getPicturesPage(objPage.idPage).then(function (data) {\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                      let value = response.data[i];\r\n                      console.log(parseInt(value.id) == parseInt(objPage.idPage));\r\n                      if (parseInt(value.id) == parseInt(objPage.idPage)) {\r\n                        $scope.appFacebook.facebook = true;\r\n                        $scope.appFacebook.fanPageSelected = value;\r\n                        $scope.appFacebook.fanPageSelected.picture = data.data.url;\r\n                        $scope.appFacebook.descriptionPublish = objPage.description;\r\n                        console.log($scope.appFacebook);\r\n                        break;\r\n                      }\r\n                    }\r\n                  });\r\n\r\n                }\r\n              };\r\n              restService.getContentMail($scope.idMail).then(function (data) {\r\n                $scope.showLinksGoogleAnalytics = (data.googleAnalytics == 1 ? true : false);\r\n                $scope.googleAnalyticsLinks = data.content.links;\r\n                if (typeof data.googleAnalyticsData !== 'undefined') {\r\n                  $scope.googleAnalytics = data.googleAnalyticsData;\r\n                }\r\n\r\n                if (data.notificationEmails) {\r\n                  $scope.dataadv.notifications = true;\r\n                  $scope.dataadv.notificationEmails = data.notificationEmails;\r\n                }\r\n\r\n                if (data.statisticsEmails) {\r\n                  $scope.dataadv.statistics = true;\r\n                  $scope.dataadv.statisticsEmails = data.statisticsEmails;\r\n                  $scope.dataadv.quantity = data.quantity;\r\n                  $scope.dataadv.typeTime = data.typeTime;\r\n                }\r\n\r\n                if (data.facebook) {\r\n                  var data = {idPage: data.facebook.idPage, description: data.facebook.description};\r\n                  console.log(\"Valida si existe faceboog loko\");\r\n                  console.log(data);\r\n                  if ($FB.loaded) {\r\n                    $scope.appFacebook.login(data);\r\n                  } else {\r\n                    $timeout(function () {\r\n                      $scope.appFacebook.login(data);\r\n                    }, 100);\r\n                  }\r\n\r\n                }\r\n\r\n                $scope.saveAdvanceOptions = function () {\r\n                  if ($scope.appFacebook.facebook && $scope.appFacebook.fanPageSelected) {\r\n                    $scope.dataadv.facebook = angular.copy($scope.appFacebook);\r\n                  } else {\r\n                    $scope.dataadv.facebook = false;\r\n                  }\r\n\r\n                  $scope.dataadv.googleAnalytics = $scope.showLinksGoogleAnalytics;\r\n                  restService.saveAdvanceOptions($scope.idMail, $scope.dataadv).then(function (data) {\r\n                    notificationService.primary(\"La informaciÃ³n del mail ha sido actualizada correctamente.\");\r\n                    window.location.href = fullUrlBase + templateBase + '/create#/shippingdate/' + $scope.idMail;\r\n                  });\r\n                }\r\n                \r\n                $scope.statusAttached = function (type) {\r\n                  if(type == 'attachment'){\r\n                    if($scope.fileadjuntpdf.files.length > 0){\r\n                      $('#cancelDialog').addClass('dialog--open');\r\n                      $scope.isModal = 'customizedpdf';\r\n                    }\r\n                  }\r\n                  if (type == 'customizedpdf'){\r\n                    if ($scope.fileadjunt.length > 0) {\r\n                      $('#cancelDialog').addClass('dialog--open');\r\n                      $scope.isModal = 'attachment';\r\n                    }\r\n                  }\r\n                }\r\n                \r\n                $scope.closeModal = function (){\r\n                  if($scope.isModal == 'attachment'){\r\n                    $('.nav-tabs a[href=\"/#htab1\"]').tab('show');\r\n                  }\r\n                  if($scope.isModal == 'customizedpdf'){\r\n                    $('.nav-tabs a[href=\"/#htab2\"]').tab('show');\r\n                  }\r\n                  $('.dialog').removeClass('dialog--open');\r\n                }\r\n                \r\n                $scope.saveAdjunt = function (){\r\n                  if($scope.isModal == 'attachment'){\r\n                    //$scope.fileadjunt = [];\r\n                    for(var i = 0; i<$scope.fileadjunt.length; i++){\r\n                      restService.deleteAttached($scope.fileadjunt[i].idMailattachment).then(function () {\r\n                        $scope.attach();\r\n                      });\r\n                    }\r\n                    $('.nav-tabs a[href=\"/#htab2\"]').tab('show');\r\n                    $('.dialog').removeClass('dialog--open');\r\n                  }\r\n                  if($scope.isModal == 'customizedpdf'){\r\n                    document.getElementById('filelist').innerHTML = '';\r\n                    $scope.uploader = [];\r\n                    if($scope.result.files.length){\r\n                      restService.deleteCustomizedpdf($scope.idMail).then(function () {\r\n                        $scope.attachpdf();\r\n                      });\r\n                    }\r\n                    $('#next').hide('slow');\r\n                    $('#gogo').hide('slow');\r\n                    $('#resume').hide('slow');\r\n                    $('#buttons').hide('slow');\r\n                    $('#htab3').show('slow');\r\n                    $('#filelist').show('slow');\r\n                    $('#container').show('slow');\r\n\r\n                    $('.nav-tabs a[href=\"/#htab1\"]').tab('show');\r\n                    $('.dialog').removeClass('dialog--open');\r\n                  }\r\n                }\r\n                \r\n                $scope.deleteAll = function (idMail) {\r\n                  restService.deleteCustomizedpdf(idMail).then(function () {\r\n                    //$scope.attachpdf();\r\n                    $scope.fileadjuntpdf = {'files':[]};\r\n                    $('#next').hide('slow');\r\n                    $('#gogo').hide('slow');\r\n                    $('#resume').hide('slow');\r\n                    $('#buttons').show('slow');\r\n                    $('#htab3').show('slow');\r\n                    $('#filelist').show('slow');\r\n                    $('#container').show('slow');\r\n\r\n                    document.getElementById('filelist').innerHTML = '';\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          ])\r\n          .controller('mailStructureEditorController', ['$scope', 'restService', 'notificationService', '$rootScope', '$stateParams', function ($scope, restService, notificationService, $rootScope, $stateParams) {\r\n              $scope.initial = 0;\r\n              $scope.page = 1;\r\n              $scope.filter = \"\";\r\n              $scope.search = function () {\r\n                $scope.getAll();\r\n              };\r\n              $scope.forward = function () {\r\n                $scope.initial += 1;\r\n                $scope.page += 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.fastforward = function () {\r\n                $scope.initial = ($scope.mailstructure.total_pages - 1);\r\n                $scope.page = $scope.mailstructure.total_pages;\r\n                $scope.getAll();\r\n              };\r\n              $scope.backward = function () {\r\n                $scope.initial -= 1;\r\n                $scope.page -= 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.fastbackward = function () {\r\n                $scope.initial = 0;\r\n                $scope.page = 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.getAll = function () {\r\n                restService.getAllMailStructure($scope.initial, $scope.filter).then(function (data) {\r\n                  $scope.mailstructure = data;\r\n                });\r\n              };\r\n              $scope.getAll();\r\n            }]);\r\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n(function () {\r\n  angular.module('mail.directives', [])\r\n          .directive('fileModel', [\"$parse\", function ($parse) {\r\n              return {\r\n                restrict: 'A',\r\n                link: function (scope, element, attrs) {\r\n                  var model = $parse(attrs.fileModel);\r\n                  var modelSetter = model.assign;\r\n\r\n                  element.bind('change', function () {\r\n                    scope.$apply(function () {\r\n                      modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                  });\r\n                }\r\n              };\r\n            }])\r\n          .filter('trustedhtml', function ($sce) {\r\n            return function (value, type) {\r\n              return $sce.trustAs(type || 'html', value);\r\n            }\r\n          }\r\n          )\r\n          .directive('fb', ['$FB', function ($FB) {\r\n              return {\r\n                restrict: \"E\",\r\n                replace: true,\r\n                template: \"<div id='fb-root'></div>\",\r\n                compile: function (tElem, tAttrs) {\r\n                  return {\r\n                    post: function (scope, iElem, iAttrs, controller) {\r\n                      var fbAppId = iAttrs.appId || '';\r\n\r\n                      var fb_params = {\r\n                        appId: iAttrs.appId || \"\",\r\n                        cookie: iAttrs.cookie || true,\r\n                        status: iAttrs.status || true,\r\n                        xfbml: iAttrs.xfbml || true\r\n                      };\r\n\r\n                      // Setup the post-load callback\r\n                      window.fbAsyncInit = function () {\r\n                        $FB._init(fb_params);\r\n\r\n                        if ('fbInit' in iAttrs) {\r\n                          iAttrs.fbInit();\r\n                        }\r\n                      };\r\n\r\n                      (function (d, s, id, fbAppId) {\r\n                        var js, fjs = d.getElementsByTagName(s)[0];\r\n                        if (d.getElementById(id))\r\n                          return;\r\n                        js = d.createElement(s);\r\n                        js.id = id;\r\n                        js.async = true;\r\n                        js.src = \"//connect.facebook.net/en_US/all.js\";\r\n                        fjs.parentNode.insertBefore(js, fjs);\r\n                      }(document, 'script', 'facebook-jssdk', fbAppId));\r\n                    }\r\n                  }\r\n                }\r\n              };\r\n            }]);\r\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL21haWwvZGlyZWN0aXZlcy5qcz9jZjk1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLENBQUMiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuKGZ1bmN0aW9uICgpIHtcclxuICBhbmd1bGFyLm1vZHVsZSgnbWFpbC5kaXJlY3RpdmVzJywgW10pXHJcbiAgICAgICAgICAuZGlyZWN0aXZlKCdmaWxlTW9kZWwnLCBbXCIkcGFyc2VcIiwgZnVuY3Rpb24gKCRwYXJzZSkge1xyXG4gICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICByZXN0cmljdDogJ0EnLFxyXG4gICAgICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycykge1xyXG4gICAgICAgICAgICAgICAgICB2YXIgbW9kZWwgPSAkcGFyc2UoYXR0cnMuZmlsZU1vZGVsKTtcclxuICAgICAgICAgICAgICAgICAgdmFyIG1vZGVsU2V0dGVyID0gbW9kZWwuYXNzaWduO1xyXG5cclxuICAgICAgICAgICAgICAgICAgZWxlbWVudC5iaW5kKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgIG1vZGVsU2V0dGVyKHNjb3BlLCBlbGVtZW50WzBdLmZpbGVzWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfV0pXHJcbiAgICAgICAgICAuZmlsdGVyKCd0cnVzdGVkaHRtbCcsIGZ1bmN0aW9uICgkc2NlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAodmFsdWUsIHR5cGUpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gJHNjZS50cnVzdEFzKHR5cGUgfHwgJ2h0bWwnLCB2YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIClcclxuICAgICAgICAgIC5kaXJlY3RpdmUoJ2ZiJywgWyckRkInLCBmdW5jdGlvbiAoJEZCKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHJlc3RyaWN0OiBcIkVcIixcclxuICAgICAgICAgICAgICAgIHJlcGxhY2U6IHRydWUsXHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogXCI8ZGl2IGlkPSdmYi1yb290Jz48L2Rpdj5cIixcclxuICAgICAgICAgICAgICAgIGNvbXBpbGU6IGZ1bmN0aW9uICh0RWxlbSwgdEF0dHJzKSB7XHJcbiAgICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zdDogZnVuY3Rpb24gKHNjb3BlLCBpRWxlbSwgaUF0dHJzLCBjb250cm9sbGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICB2YXIgZmJBcHBJZCA9IGlBdHRycy5hcHBJZCB8fCAnJztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICB2YXIgZmJfcGFyYW1zID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHBJZDogaUF0dHJzLmFwcElkIHx8IFwiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvb2tpZTogaUF0dHJzLmNvb2tpZSB8fCB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IGlBdHRycy5zdGF0dXMgfHwgdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeGZibWw6IGlBdHRycy54ZmJtbCB8fCB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIC8vIFNldHVwIHRoZSBwb3N0LWxvYWQgY2FsbGJhY2tcclxuICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5mYkFzeW5jSW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJEZCLl9pbml0KGZiX3BhcmFtcyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJ2ZiSW5pdCcgaW4gaUF0dHJzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaUF0dHJzLmZiSW5pdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoZCwgcywgaWQsIGZiQXBwSWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGpzLCBmanMgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZC5nZXRFbGVtZW50QnlJZChpZCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBqcyA9IGQuY3JlYXRlRWxlbWVudChzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAganMuaWQgPSBpZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAganMuYXN5bmMgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBqcy5zcmMgPSBcIi8vY29ubmVjdC5mYWNlYm9vay5uZXQvZW5fVVMvYWxsLmpzXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZqcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqcywgZmpzKTtcclxuICAgICAgICAgICAgICAgICAgICAgIH0oZG9jdW1lbnQsICdzY3JpcHQnLCAnZmFjZWJvb2stanNzZGsnLCBmYkFwcElkKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfV0pO1xyXG59KSgpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvYW5ndWxhci9tYWlsL2RpcmVjdGl2ZXMuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n(function () {\r\n  angular.module('mail.services', [])\r\n          .factory('restService', ['$http', '$q', 'notificationService', function ($http, $q, notificationService) {\r\n\r\n              function getContactlist() {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getcontactlist';\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getMailFilters() {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getmailfilters';\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getSegment() {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getsegment';\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function countContact(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/countcontact';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function addAddressees(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/addaddressees';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          if (data.type) {\r\n                            notificationService.warning(data.message);\r\n                          } else {\r\n                            notificationService.error(data.message);\r\n                          }\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n              \r\n              function only(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/only';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          if (data.type) {\r\n                            notificationService.warning(data.message);\r\n                          } else {\r\n                            notificationService.error(data.message);\r\n                          }\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n              \r\n              function getlisttimezone() {\r\n                var deferred = $q.defer();\r\n                $http.get(fullUrlBase + 'mail/timezone/')\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getemailsend() {\r\n                var deferred = $q.defer();\r\n                $http.get(fullUrlBase + 'mail/emailsender/')\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n              \r\n              function getReplyTo() {\r\n                var deferred = $q.defer();\r\n                $http.get(fullUrlBase + 'mail/replyto/')\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function addBasicInformation(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'mail/basicinformation/';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function editBasicInformation(idMail, data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'mail/editbasicinformation/' + idMail;\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function saveAdvanceOptions(idMail, data) {\r\n\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/saveadvanceoptions/' + idMail;\r\n                console.log(data);\r\n                $http.put(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getemailname() {\r\n                var deferred = $q.defer();\r\n                $http.get(fullUrlBase + 'mail/emailname/')\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function addEmailName(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'mail/addemailname/';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function addEmailSender(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'mail/addemailsender/';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n              \r\n              function addReplyTo(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'mail/addreplyto/';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function findMail(idMail) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/findmail/' + idMail;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n//              console.log(data.message);\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function findEmailSender(idEmailsender) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/findemailsender/' + idEmailsender;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function findMailAttachment(idEmail) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/findmailattachment/' + idEmail;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function findEmailName(idEmailname) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/findemailname/' + idEmailname;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n              \r\n              function findReplyto(idReplyto) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/findreplyto/' + idReplyto;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getAllMail(page, filter) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getallmail/' + page;\r\n                //console.log(filter);\r\n                $http.post(url, filter)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getContentMail(idMail) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getcontentmail/' + idMail;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getMailCategory() {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getmailcategory';\r\n                console.log(url);\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function addContentEditor(idMail, data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'mail/contenteditor/' + idMail;\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getMailCategoryByIdMail(idMail) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getmailcategoryidmail/' + idMail;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function findMailCategory(idMailcategory) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/findmailcategory/' + idMailcategory;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function deleteMail(idMail) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/deletemail/' + idMail;\r\n                $http.delete(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function addPlaintext(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/updateplainttext';\r\n                $http.put(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getAllMailStructure(page, name) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/mailstructure/getall/' + page;\r\n                $http.post(url, name)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function sendDataGoogleAnalitics(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/addgoogleanalitics';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getAllGallery(page) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/gallery/' + page;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function addAdjunt(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/addadjunt';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getAllAttachment(idMail) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getallattachment/' + idMail;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function sendDataComfirmationEmail(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/sendconfirmationmail';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data.message);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function sendScheduleDateEmail(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/sendscheduledateemail';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function saveMailAsMailTemplate(data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/mailtemplate/savemailtemp';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              function sendTestMail(data) {\r\n                var defered = $q.defer();\r\n                var url = fullUrlBase + \"api/sendmail/testmail\";\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          defered.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defered.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return defered.promise;\r\n              }\r\n\r\n              function previewMailTemplateContent(id) {\r\n                var deferred = $q.defer();\r\n                var url = 'api/mail/preview/' + id;\r\n                $http.post(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n              function getMailContentJSON(id) {\r\n                var deferred = $q.defer();\r\n                var url = 'api/mail/getmailcontentjson/' + id;\r\n                $http.post(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function deleteAttached(id) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/deleteattached/' + id;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getSaxs() {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/saxs/getall';\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getThumbnailMail(idMail) {\r\n                var defered = $q.defer();\r\n                var url = fullUrlBase + \"api/sendmail/getthumbnail/\" + idMail;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          defered.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defered.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return defered.promise;\r\n              }\r\n\r\n              function saveCategory(data) {\r\n                var url = fullUrlBase + 'api/mailcategory/savemailcategoryinmail';\r\n                var deferred = $q.defer();\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function changeTestMail(idMail, data) {\r\n                var url = fullUrlBase + \"api/sendmail/changetest\";\r\n                var deferred = $q.defer();\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function cancelMail(idMail) {\r\n                var url = fullUrlBase + 'api/mail/cancelmail/' + idMail;\r\n                var deferred = $q.defer();\r\n                $http.delete(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getLinksByMail(idMail) {\r\n                var url = fullUrlBase + 'api/sendmail/getlinksbymail/' + idMail;\r\n                var deferred = $q.defer();\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              function getMailTemplateCategory() {\r\n                var deferred = $q.defer();\r\n                $http.get(fullUrlBase + 'api/mailtemplate/getmailtemplatecategory')\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n              function sendTesterMails(data, idMail) {\r\n                var url = fullUrlBase + 'api/sendmail/sendtester/' + idMail;\r\n                var defer = $q.defer();\r\n                var promise = defer.promise;\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (err) {\r\n                          defer.reject(err.message);\r\n                          notificationService.error(err.message);\r\n                        });\r\n\r\n                return promise;\r\n              }\r\n\r\n              function getMd5publish(data) {\r\n                var url = fullUrlBase + 'api/mail/getmdgpublish/', data;\r\n                var defer = $q.defer();\r\n                var promise = defer.promise;\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (err) {\r\n                          defer.reject(err.message);\r\n                          notificationService.error(err.message);\r\n                        });\r\n\r\n                return promise;\r\n              }\r\n              \r\n              function downloadMailPreview(idMail) {\r\n                var defered = $q.defer();\r\n                var url = fullUrlBase + \"api/sendmail/downloadmailpreview/\" + idMail;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          defered.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defered.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return defered.promise;\r\n              }\r\n\r\n              function  getTableResults(id) {\r\n                //console.log(\"esta llegando aqui service\"); return;\r\n                var url = fullUrlBase + 'mail/structurename/'+id;\r\n                var defer = $q.defer();\r\n                var promise = defer.promise;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (err) {\r\n                          defer.reject(err.message);\r\n                          notificationService.error(err.message);\r\n                        });\r\n                return promise;\r\n              }\r\n              \r\n              function deleteCustomizedpdf(id){\r\n                var url = fullUrlBase + 'mail/deletedall/'+id;\r\n                console.log(url);\r\n                var defer = $q.defer();\r\n                var promise = defer.promise;\r\n                $http.get(url)\r\n                  .success(function (data) {\r\n                    defer.resolve(data);\r\n                  })\r\n                  .error(function (err) {\r\n                    defer.reject(err.message);\r\n                    notificationService.error(err.message);\r\n                  });\r\n                return promise;\r\n              }\r\n              \r\n              function getAllAttachmentpdf(idMail) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/getallattachmentpdf/' + idMail;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data);\r\n                        });\r\n                return deferred.promise;\r\n              }\r\n\r\n              return {\r\n                getContactlist: getContactlist,\r\n                getSegment: getSegment,\r\n                countContact: countContact,\r\n                addAddressees: addAddressees,\r\n                getlisttimezone: getlisttimezone,\r\n                getemailname: getemailname,\r\n                getemailsend: getemailsend,\r\n                addBasicInformation: addBasicInformation,\r\n                findMail: findMail,\r\n                getAllMail: getAllMail,\r\n                addEmailName: addEmailName,\r\n                addEmailSender: addEmailSender,\r\n                editBasicInformation: editBasicInformation,\r\n                getContentMail: getContentMail,\r\n                getMailCategory: getMailCategory,\r\n                addContentEditor: addContentEditor,\r\n                getMailCategoryByIdMail: getMailCategoryByIdMail,\r\n                deleteMail: deleteMail,\r\n                addPlaintext: addPlaintext,\r\n                getAllMailStructure: getAllMailStructure,\r\n                getAllGallery: getAllGallery,\r\n                addAdjunt: addAdjunt,\r\n                getAllAttachment: getAllAttachment,\r\n                sendDataGoogleAnalitics: sendDataGoogleAnalitics,\r\n                findEmailSender: findEmailSender,\r\n                findEmailName: findEmailName,\r\n                findMailCategory: findMailCategory,\r\n                sendDataComfirmationEmail: sendDataComfirmationEmail,\r\n                findMailAttachment: findMailAttachment,\r\n                sendScheduleDateEmail: sendScheduleDateEmail,\r\n                saveMailAsMailTemplate: saveMailAsMailTemplate,\r\n                sendTestMail: sendTestMail,\r\n                previewMailTemplateContent: previewMailTemplateContent,\r\n                getMailContentJSON: getMailContentJSON,\r\n                deleteAttached: deleteAttached,\r\n                getSaxs: getSaxs,\r\n                saveAdvanceOptions: saveAdvanceOptions,\r\n                getThumbnailMail: getThumbnailMail,\r\n                saveCategory: saveCategory,\r\n                cancelMail: cancelMail,\r\n                changeTestMail: changeTestMail,\r\n                getMailFilters: getMailFilters,\r\n                getLinksByMail: getLinksByMail,\r\n                getMailTemplateCategory: getMailTemplateCategory,\r\n                sendTesterMails: sendTesterMails,\r\n                getMd5publish : getMd5publish,\r\n                downloadMailPreview: downloadMailPreview,\r\n                getReplyTo: getReplyTo,\r\n                addReplyTo: addReplyTo,\r\n                findReplyto: findReplyto,\r\n                getTableResults: getTableResults,\r\n                only: only,\r\n                deleteCustomizedpdf: deleteCustomizedpdf,\r\n                getAllAttachmentpdf: getAllAttachmentpdf\r\n              };\r\n            }])\r\n          .service(\"incomplete\", function () {\r\n            var varincomplete = false;\r\n            this.setincomplete = function (incomple) {\r\n              varincomplete = incomple;\r\n            };\r\n            this.getincomplete = function () {\r\n              return varincomplete;\r\n            };\r\n          })\r\n          .service(\"wizard\", function () {\r\n            var describe = false;\r\n            var addressees = false;\r\n            var content = false;\r\n            var advanceoptions = false;\r\n            var shippingdate = false;\r\n\r\n            this.setdescribe = function (incomple) {\r\n              describe = incomple;\r\n            };\r\n            this.getdescribe = function () {\r\n              return describe;\r\n            };\r\n\r\n            this.setaddressees = function (incomple) {\r\n              addressees = incomple;\r\n            };\r\n            this.getaddressees = function () {\r\n              return addressees;\r\n            };\r\n\r\n            this.setcontent = function (incomple) {\r\n              content = incomple;\r\n            };\r\n            this.getcontent = function () {\r\n              return content;\r\n            };\r\n\r\n            this.setadvanceoptions = function (incomple) {\r\n              advanceoptions = incomple;\r\n            };\r\n            this.getadvanceoptions = function () {\r\n              return advanceoptions;\r\n            };\r\n\r\n            this.setshippingdate = function (incomple) {\r\n              shippingdate = incomple;\r\n            };\r\n            this.getshippingdate = function () {\r\n              return shippingdate;\r\n            };\r\n\r\n          })\r\n          .factory('notificationService', function () {\r\n            function error(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-remove-circle', 'danger');\r\n            }\r\n\r\n            function success(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-ok-circle', 'success');\r\n            }\r\n\r\n            function warning(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'warning');\r\n            }\r\n\r\n            function notice(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'notice');\r\n            }\r\n\r\n            function primary(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'primary');\r\n            }\r\n\r\n            return {\r\n              error: error,\r\n              success: success,\r\n              warning: warning,\r\n              notice: notice,\r\n              primary: primary\r\n            };\r\n          })\r\n          .factory('$FB', ['$rootScope', function ($rootScope) {\r\n              var fbLoaded = false;\r\n              // Our own customisations\r\n              var _fb = {\r\n                loaded: fbLoaded,\r\n                _init: function (params) {\r\n                  if (window.FB) {\r\n                    // FIXME: Ugly hack to maintain both window.FB\r\n                    // and our AngularJS-wrapped $FB with our customisations\r\n                    angular.extend(window.FB, _fb);\r\n                    angular.extend(_fb, window.FB);\r\n                    // Set the flag\r\n                    _fb.loaded = true;\r\n                    // Initialise FB SDK\r\n                    window.FB.init(params);\r\n                    if (!$rootScope.$$phase) {\r\n                      $rootScope.$apply();\r\n                    }\r\n                  }\r\n                }\r\n\r\n              }\r\n              return _fb;\r\n            }]);\r\n\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ })
/******/ ]);