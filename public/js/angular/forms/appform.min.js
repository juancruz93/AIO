/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
'use strict';(function(){var app=angular.module('appFormSigma',['ngSanitize','builder','builder.components','validator.rules','ui.bootstrap','angularSpectrumColorpicker']);app.constant("contantForm",{message:{Term:"Por favor aceptar los terminos y condiciones para poder continuar con el registro.",Acept:"El registro se guardo de forma exitosa.",Valid:"Se esta validando el registro, esto podria demorar un segundo.",},title:{Term:"Terminos y condiciones",Acept:"Correcto",Valid:"Se esta realizando validaciones",}});app.config(['$validatorProvider',function($validatorProvider){$validatorProvider.register('required',{invoke:'watch',validator:/.+/,error:'El campo es requerido.'});$validatorProvider.register('number',{invoke:'watch',validator:/^[-+]?[0-9]*[\.]?[0-9]*$/,error:'El campo solo pude ingresar numeros.'});$validatorProvider.register('email',{invoke:'blur',validator:/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,error:'El formato del correo no es valido.'});$validatorProvider.register('numberEnteros',{invoke:'blur',validator:/^[0-9]+$/,error:'Solo se es permitido numeros enteros'});$validatorProvider.register('fecha',{invoke:'blur',validator:/.+/,error:'El formato de la fecha no es valido.'});return $validatorProvider.register('url',{invoke:'blur',validator:/((([A-Za-z]{3,9}:(?:\/\/)?)(?:[-;:&=\+\$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&;%@.\w_]*)#?(?:[\w]*))?)/,error:'El formato de la url no es valido.'})}]);app.service('serviceFormSigma',['$http','$q',function($http,$q){this.getForm=function(idForm){var defer=$q.defer();var url=fullUrlBaseSigmaDomain+'api/forms/getcontentform/'+idForm;$http.get(url).success(function(data){defer.resolve(data)}).error(function(data){defer.reject(data)});return defer.promise}
this.sendForm=function(idForm,data){var defer=$q.defer();var url=fullUrlBaseSigmaDomain+"api/contact/addcontactform/"+idForm;$http.post(url,data).success(function(data){defer.resolve(data)}).error(function(data){defer.resolve(data)});return defer.promise}
this.converArrayToObj=function(data){var defer=$q.defer();var objReturn={};for(var i in data){var value=data[i].value;var name=data[i].id;var component=data[i].component;if(component=="encabezado"||component=="button"){continue}
if(component=="dateInput"){var date=new Date(value);var month,day;if(date.getMonth()+1<10){month=date.getMonth()+1;month="0"+month.toString()}else{month=date.getMonth()+1}
if(date.getDate()<10){day="0"+date.getDate().toString()}else{day=date.getDate()}
value=date.getFullYear()+"-"+month+"-"+day}
if(component=="checkbox"){value=value.split(",")}
if(name=="indicative"){var startOfSection=value.indexOf("+");var startOfValue=value.indexOf('+',startOfSection)+1;var endOffValue=value.indexOf(')',startOfValue);value=value.substring(startOfValue,endOffValue)}
objReturn[name]=value}
defer.resolve(objReturn);return defer.promise}}]);app.controller('controllerFormSigma',['$scope','serviceFormSigma','$builder','$validator','$q','$window','contantForm',function($scope,serviceFormSigma,$builder,$validator,$q,$window,contantForm){$scope.complet=!1;$scope.input=[];$scope.getForm=function(idForm){serviceFormSigma.getForm(idForm).then(function(data){var newElementConfirmation={};newElementConfirmation.component="confirmation";newElementConfirmation.label=HB;newElementConfirmation.description="";newElementConfirmation.editable=!0;newElementConfirmation.id="confirmation";newElementConfirmation.index=9999;newElementConfirmation.options=['Si, Acepto.'];$scope.dataContent=JSON.parse(data.content);newElementConfirmation.objExt=$scope.dataContent.form[1].objExt;$scope.dataContent.form.splice($scope.dataContent.form.length-1,0,newElementConfirmation);$builder.setForm('sigmaForm',$scope.dataContent.form);$scope.complet=!0})}
$scope.sendData=function(idForm){$("#submitButton").prop('disabled',!0);$scope.coverDateToString().then(function(data){$validator.validate($scope,'sigmaForm').success(function(){serviceFormSigma.converArrayToObj($scope.input).then(function(data){if(data.confirmation==""){swal(contantForm.title.Term,contantForm.message.Term,"error");$("#submitButton").prop('disabled',!1);return!1}
swal(contantForm.title.Valid,contantForm.message.Valid,"warning");serviceFormSigma.sendForm(idForm,data).then(function(data){$("#sigmaForm")[0].reset();if(data.url!=""&&data.url!=null){$window.location.href=data.url}
swal(contantForm.title.Acept,contantForm.message.Acept,"success");$("#submitButton").prop('disabled',!1)})})}).error(function(){$("#submitButton").prop('disabled',!1)})})}
$scope.coverDateToString=function(){var defer=$q.defer();var objReturn={};for(var i in $scope.input){var value=$scope.input[i].value;var name=$scope.input[i].id;var component=$scope.input[i].component;if(component=="encabezado"&&component=="button"){continue}
if(component=="dateInput"){var date=new Date(value);var month,day;if(date.getMonth()+1<10){month=date.getMonth()+1;month="0"+month.toString()}else{month=date.getMonth()+1}
if(date.getDate()<10){day="0"+date.getDate().toString()}else{day=date.getDate()}
$scope.input[i].value=date.getFullYear()+"-"+month+"-"+day}}
defer.resolve($scope.input);return defer.promise}}])}).call(this)

