/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(1);\r\n__webpack_require__(2);\r\n__webpack_require__(3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2F1dG9tYXRpY2NhbXBhaWduL21haW4uanM/MGY1YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQkFBTyxDQUFDLENBQVU7QUFDbEIsbUJBQU8sQ0FBQyxDQUFrQjtBQUMxQixtQkFBTyxDQUFDLENBQWUiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vYXBwLmpzJyk7XHJcbnJlcXVpcmUoJy4vY29udHJvbGxlcnMuanMnKTtcclxucmVxdWlyZSgnLi9zZXJ2aWNlcy5qcycpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvYW5ndWxhci9hdXRvbWF0aWNjYW1wYWlnbi9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('automaticcampaign', ['ui.router', 'automaticcampaign.controllers', 'automaticcampaign.services', 'ngMaterial', 'flowChart', 'ui.bootstrap', 'mgcrea.ngStrap', 'ui.select', 'ngSanitize', 'angularMoment', 'moment-picker'])\r\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\r\n        $stateProvider\r\n          .state('index', {\r\n            url: \"/\",\r\n            templateUrl: fullUrlBase + templateBase + '/list',\r\n            controller: 'listController'\r\n          })\r\n          .state('create', {\r\n            url: \"/create\",\r\n            templateUrl: fullUrlBase + templateBase + '/create',\r\n            controller: 'createController'\r\n          })\r\n          .state('edit', {\r\n            url: \"/edit/:idautomaticcampaign\",\r\n            templateUrl: fullUrlBase + templateBase + '/edit',\r\n            controller: 'editController'\r\n          })\r\n          .state('viewscheme', {\r\n            url: \"/viewscheme/:idautomaticcampaign\",\r\n            templateUrl: fullUrlBase + templateBase + \"/viewscheme\",\r\n            controller: \"viewschemeController\"\r\n          });\r\n\r\n        $urlRouterProvider.otherwise(function ($injector, $location) {\r\n          var $state = $injector.get('$state');\r\n          $state.go('index');\r\n        });\r\n      }]);\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2F1dG9tYXRpY2NhbXBhaWduL2FwcC5qcz9mZDA4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1AsQ0FBQyIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcclxuICBhbmd1bGFyLm1vZHVsZSgnYXV0b21hdGljY2FtcGFpZ24nLCBbJ3VpLnJvdXRlcicsICdhdXRvbWF0aWNjYW1wYWlnbi5jb250cm9sbGVycycsICdhdXRvbWF0aWNjYW1wYWlnbi5zZXJ2aWNlcycsICduZ01hdGVyaWFsJywgJ2Zsb3dDaGFydCcsICd1aS5ib290c3RyYXAnLCAnbWdjcmVhLm5nU3RyYXAnLCAndWkuc2VsZWN0JywgJ25nU2FuaXRpemUnLCAnYW5ndWxhck1vbWVudCcsICdtb21lbnQtcGlja2VyJ10pXHJcbiAgICAuY29uZmlnKFsnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywgZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcclxuICAgICAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAgICAgLnN0YXRlKCdpbmRleCcsIHtcclxuICAgICAgICAgICAgdXJsOiBcIi9cIixcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6IGZ1bGxVcmxCYXNlICsgdGVtcGxhdGVCYXNlICsgJy9saXN0JyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogJ2xpc3RDb250cm9sbGVyJ1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5zdGF0ZSgnY3JlYXRlJywge1xyXG4gICAgICAgICAgICB1cmw6IFwiL2NyZWF0ZVwiLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogZnVsbFVybEJhc2UgKyB0ZW1wbGF0ZUJhc2UgKyAnL2NyZWF0ZScsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdjcmVhdGVDb250cm9sbGVyJ1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5zdGF0ZSgnZWRpdCcsIHtcclxuICAgICAgICAgICAgdXJsOiBcIi9lZGl0LzppZGF1dG9tYXRpY2NhbXBhaWduXCIsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBmdWxsVXJsQmFzZSArIHRlbXBsYXRlQmFzZSArICcvZWRpdCcsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdlZGl0Q29udHJvbGxlcidcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuc3RhdGUoJ3ZpZXdzY2hlbWUnLCB7XHJcbiAgICAgICAgICAgIHVybDogXCIvdmlld3NjaGVtZS86aWRhdXRvbWF0aWNjYW1wYWlnblwiLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogZnVsbFVybEJhc2UgKyB0ZW1wbGF0ZUJhc2UgKyBcIi92aWV3c2NoZW1lXCIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IFwidmlld3NjaGVtZUNvbnRyb2xsZXJcIlxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoZnVuY3Rpb24gKCRpbmplY3RvciwgJGxvY2F0aW9uKSB7XHJcbiAgICAgICAgICB2YXIgJHN0YXRlID0gJGluamVjdG9yLmdldCgnJHN0YXRlJyk7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2luZGV4Jyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1dKTtcclxufSkoKTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9qcy9hbmd1bGFyL2F1dG9tYXRpY2NhbXBhaWduL2FwcC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('automaticcampaign.controllers', [])\r\n          .filter('getGmtById', function () {\r\n            return function (input, id) {\r\n              var i = 0,\r\n                      len = input.length;\r\n              for (; i < len; i++) {\r\n                if (input[i].gmt == id) {\r\n                  return input[i];\r\n                }\r\n              }\r\n              return null;\r\n            }\r\n          })\r\n          .controller('createController', ['$scope', '$rootScope', '$q', 'notificationService', 'restServices', 'moment', '$filter', '$window', '$location', '$state', function ($scope, $rootScope, $q, notificationService, restServices, moment, $filter, $window, $location, $state) {\r\n              $('#datetimepickerStart').datetimepicker({\r\n                format: 'yyyy-MM-dd hh:mm',\r\n                language: 'es',\r\n                startDate: new Date()\r\n              })\r\n                      .on('changeDate', function (ev) {\r\n                        $scope.applyTextGmt();\r\n                        $scope.$apply();\r\n                      });\r\n              $('#datetimepickerEnd').datetimepicker({\r\n                format: 'yyyy-MM-dd hh:mm',\r\n                language: 'es',\r\n                startDate: new Date()\r\n              })\r\n                      .on('changeDate', function (ev) {\r\n                        $scope.applyTextGmt();\r\n                        $scope.$apply();\r\n                      });\r\n              $scope.showTextGmtStart = false;\r\n              $scope.showTextGmtEnd = false;\r\n              var idMax = 10;\r\n              $scope.formCampaign = {};\r\n              $scope.getServices = function () {\r\n                restServices.getservices().then(function (data) {\r\n                  $scope.services = data;\r\n                  $scope.items = [{\r\n                      class: 'item-success-inverted-no-hover small-text text-center',\r\n                      name: 'Servicio',\r\n                      icon: false,\r\n                      iconClass: \"fa fa-envelope-o\"\r\n                    }];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    if (data[i].service == \"sms\") {\r\n                      $scope.items.push({\r\n                        class: 'small-text text-center cursor-pointer',\r\n                        name: 'Sms',\r\n                        theme: 'service',\r\n                        method: 'sms',\r\n                        templatepopover: fullUrlBase + \"flowchart/popoversms\",\r\n                        titlepopover: 'Configurar sms',\r\n                        disabled: false,\r\n                        icon: true,\r\n                        iconClass: \"fa fa-mobile fa-2x\",\r\n                        image: fullUrlBase + \"images/automatic/SMSA-01.jpg\"\r\n                      });\r\n                    }\r\n                    if (data[i].service == \"email marketing\") {\r\n                      $scope.items.push({\r\n                        class: 'small-text text-center cursor-pointer',\r\n                        name: 'Mail',\r\n                        theme: 'service',\r\n                        method: 'email',\r\n                        templatepopover: fullUrlBase + \"flowchart/popovermail\",\r\n                        titlepopover: 'Configurar correo',\r\n                        disabled: false,\r\n                        icon: true,\r\n                        iconClass: \"fa fa-envelope-o fa-2x\",\r\n                        image: fullUrlBase + \"images/automatic/correoa-01.jpg\"\r\n                      });\r\n                    }\r\n                    /*if (data[i].service == \"survey\") {\r\n                     $scope.items.push({\r\n                     class: 'small-text text-center cursor-pointer',\r\n                     name: 'Encuestas',\r\n                     theme: 'service',\r\n                     method: 'survey',\r\n                     templatepopover: fullUrlBase + \"flowchart/popoversurvey\",\r\n                     titlepopover: 'Configurar survey',\r\n                     disabled: false,\r\n                     icon: true,\r\n                     iconClass: \"fa fa-address-book-o fa-2x\",\r\n                     image: fullUrlBase + \"images/general/forms.png\"\r\n                     });\r\n                     }*/\r\n                  }\r\n                  $scope.items.push({\r\n                    class: 'item-primary-inverted-no-hover small-text text-center',\r\n                    name: 'Operadores',\r\n                    icon: false,\r\n                    iconClass: \"fa fa-envelope-o\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Tiempo',\r\n                    theme: 'operator',\r\n                    method: 'time',\r\n                    templatepopover: fullUrlBase + \"flowchart/popovertime\",\r\n                    titlepopover: 'Operador por tiempo',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-clock-o fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/tiempoa-01.jpg\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Accion',\r\n                    theme: 'operator',\r\n                    method: 'actions',\r\n                    templatepopover: fullUrlBase + \"flowchart/popoveraction\",\r\n                    titlepopover: 'Operador por accion',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-cogs fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/accion-01.jpg\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Clicks',\r\n                    theme: 'operator',\r\n                    method: 'clicks',\r\n                    templatepopover: fullUrlBase + \"flowchart/popoverclick\",\r\n                    titlepopover: 'Operador por click',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-link fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/click-01.jpg\"\r\n                  });\r\n                  restServices.validateService($scope.chartViewModel.data, data);\r\n                }).catch(function (data) {\r\n                  $scope.services = data;\r\n                  $scope.items = [{\r\n                      class: 'item-success-inverted-no-hover small-text text-center  text-center',\r\n                      name: 'Servicio',\r\n                      icon: false,\r\n                      iconClass: \"fa fa-envelope-o\"\r\n                    }];\r\n                  $scope.items.push({\r\n                    class: 'item-primary-inverted-no-hover small-text text-center  text-center',\r\n                    name: 'Operadores',\r\n                    icon: false,\r\n                    iconClass: \"fa fa-envelope-o\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Tiempo',\r\n                    theme: 'operator',\r\n                    method: 'time',\r\n                    templatepopover: fullUrlBase + \"flowchart/popovertime\",\r\n                    titlepopover: 'Operador por tiempo',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-clock-o fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/tiempoa-01.jpg\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Accion',\r\n                    theme: 'operator',\r\n                    method: 'actions',\r\n                    templatepopover: fullUrlBase + \"flowchart/popoveraction\",\r\n                    titlepopover: 'Operador por accion',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-cogs fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/accion-01.jpg\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Clicks',\r\n                    theme: 'operator',\r\n                    method: 'clicks',\r\n                    templatepopover: fullUrlBase + \"flowchart/popoverclick\",\r\n                    titlepopover: 'Operador por click',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-link fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/click-01.jpg\"\r\n                  });\r\n                });\r\n              }\r\n\r\n\r\n              var chartDataModel = {\r\n                nodes: [{\r\n                    name: \"Destinatario(s)\",\r\n                    id: 0,\r\n                    x: 170,\r\n                    y: 25,\r\n                    width: 100,\r\n                    image: fullUrlBase + \"images/automatic/destinatariosa-01.jpg\",\r\n                    theme: \"primary\",\r\n                    method: \"primary\",\r\n                    templatepopover: fullUrlBase + \"flowchart/popoversegment\",\r\n                    titlepopover: \"Selecciona a quien quiere enviar esta campaña automática.\",\r\n                    outputConnectors: [{\r\n                        name: \"\"\r\n                      }],\r\n                    sendData: {}\r\n                  }],\r\n                connections: []\r\n              };\r\n\r\n              $scope.getIdMax = function () {\r\n                var idMax = 0;\r\n                for (var i = 0; i < $scope.chartViewModel.nodes.length; i++) {\r\n                  var idNode = $scope.chartViewModel.nodes[i].getId();\r\n                  if (idNode > idMax) {\r\n                    idMax = idNode;\r\n                  }\r\n                }\r\n                return idMax;\r\n              }\r\n\r\n              $scope.addNewNode = function (item) {\r\n                if (typeof item.method == \"undefined\") {\r\n                  return;\r\n                }\r\n\r\n                //          if (item.disabled) {\r\n                //            return;\r\n                //          }\r\n                //          var themePre = $scope.chartViewModel.nodes[$scope.chartViewModel.nodes.length - 1].getTheme();\r\n                //          if (item.theme == \"service\") {\r\n                //            for (var i = 0; i < $rootScope.items.length; i++) {\r\n                //              if ($rootScope.items[i].theme == \"service\") {\r\n                //                $rootScope.items[i].disabled = true;\r\n                //                $rootScope.items[i].class += \" disabled text-center cursor-pointer\";\r\n                //              } else if ($rootScope.items[i].theme == \"operator\") {\r\n                //                $rootScope.items[i].disabled = false;\r\n                //                $rootScope.items[i].class = \"small-text text-center cursor-pointer\";\r\n                //              }\r\n                //            }\r\n                //          } else {\r\n                //            for (var i = 0; i < $rootScope.items.length; i++) {\r\n                //              if ($rootScope.items[i].theme == \"operator\") {\r\n                //                $rootScope.items[i].disabled = true;\r\n                //                $rootScope.items[i].class += \" disabled text-center cursor-pointer\";\r\n                //              } else if ($rootScope.items[i].theme == \"service\") {\r\n                //                $rootScope.items[i].disabled = false;\r\n                //                $rootScope.items[i].class = \"small-text text-center cursor-pointer\";\r\n                //              }\r\n                //            }\r\n                //          }\r\n                var newNodeDataModel = {\r\n                  name: item.name,\r\n                  id: $scope.getIdMax() + 1,\r\n                  x: 10,\r\n                  y: 50,\r\n                  width: 100,\r\n                  theme: item.theme,\r\n                  method: item.method,\r\n                  image: item.image,\r\n                  templatepopover: item.templatepopover,\r\n                  titlepopover: item.titletemplate,\r\n                  inputConnectors: [{\r\n                      name: \"\"\r\n                    }],\r\n                  outputConnectors: [{\r\n                      name: \"\"\r\n                    }],\r\n                  sendData: {}\r\n                };\r\n                if (item.method == \"actions\" || item.method == \"clicks\" || item.method == \"links\") {\r\n                  newNodeDataModel.outputConnectors.push({\r\n                    name: \"\"\r\n                  });\r\n                }\r\n                $scope.chartViewModel.addNode(newNodeDataModel);\r\n              };\r\n              $scope.createAutomaticCampaign = function (option) {\r\n                restServices.validateJsonAutomaticCampaign($scope.chartViewModel.data, $scope.services).then(function (objData) {\r\n                  $scope.optionCreate = option;\r\n                  if (option == 1) {\r\n                    if (typeof $scope.idCampaign != \"undefined\") {\r\n                      restServices.updateAutomaticCampaignConfiguration($scope.chartViewModel.data, $scope.idCampaign).then(function (data) {\r\n                        notificationService.primary(data.message);\r\n                      });\r\n                    } else {\r\n                      restServices.createAutomaticCampaignDraft($scope.chartViewModel.data).then(function (data) {\r\n                        notificationService.success(data.message);\r\n                        $scope.idCampaign = data.idCampaign;\r\n                      });\r\n                    }\r\n                  } else {\r\n                    $('#createAutomaticCampaign').addClass('dialog--open');\r\n                  }\r\n\r\n                });\r\n              }\r\n\r\n              $scope.toReturn = function () {\r\n                $state.go('index');\r\n              }\r\n\r\n              $scope.insCampaign = function () {\r\n                $scope.formCampaign.startDate = angular.copy($scope.dateGmtStart);\r\n                $scope.formCampaign.endDate = angular.copy($scope.dateGmtEnd);\r\n                restServices.validateFormCampaign($scope.formCampaign).then(function (data) {\r\n                  var objSend = {\r\n                    formCampaign: data,\r\n                    objCampaign: $scope.chartViewModel.data\r\n                  };\r\n                  if (typeof $scope.idCampaign == \"undefined\") {\r\n                    restServices.createAutomaticCampaign(objSend).then(function (data) {\r\n                      notificationService.success(data.message);\r\n                      $('#createAutomaticCampaign').removeClass('dialog--open');\r\n                      $state.go('index');\r\n                    });\r\n                  } else {\r\n                    restServices.updateAutomaticCampaignAll(objSend, $scope.idCampaign).then(function (data) {\r\n                      notificationService.primary(data.message);\r\n                      $('#createAutomaticCampaign').removeClass('dialog--open');\r\n                      $state.go('index');\r\n                    });\r\n                  }\r\n                  //\r\n                });\r\n              }\r\n\r\n              $scope.getallcategory = function () {\r\n                restServices.getallcategory().then(function (data) {\r\n                  $scope.listCategory = data;\r\n                });\r\n                restServices.getGmt().then(function (data) {\r\n                  $scope.listZonaHoraria = data;\r\n                  var filter = $filter('getGmtById')($scope.listZonaHoraria, \"-0500\");\r\n                  $scope.formCampaign.gmt = filter.gmt;\r\n                });\r\n              }\r\n              $scope.getallcategory();\r\n              $scope.applyTextGmt = function () {\r\n                if ($(\"#datestartCampaign\").val() != '') {\r\n                  $scope.showTextGmtStart = true;\r\n                } else {\r\n                  $scope.showTextGmtStart = false;\r\n                  $scope.textGmtStart = '';\r\n                }\r\n                if ($(\"#dateendCampaign\").val() != '') {\r\n                  $scope.showTextGmtEnd = true;\r\n                } else {\r\n                  $scope.showTextGmtEnd = false;\r\n                  $scope.textGmtEnd = '';\r\n                }\r\n                if ($scope.showTextGmtStart) {\r\n                  var StartUnix = moment($(\"#datestartCampaign\").val()).utc().valueOf();\r\n                  $scope.dateGmtStart = moment(StartUnix).utcOffset($scope.formCampaign.gmt).format('YYYY-MM-DD HH:mm');\r\n                  //            console.log(StartUnix,$scope.formCampaign.gmt);\r\n                }\r\n                if ($scope.showTextGmtEnd) {\r\n                  var EndUnix = moment($(\"#dateendCampaign\").val()).utc().valueOf();\r\n                  $scope.dateGmtEnd = moment(EndUnix).utcOffset($scope.formCampaign.gmt).format('YYYY-MM-DD HH:mm');\r\n                  //            console.log(EndUnix,$scope.formCampaign.gmt);\r\n                }\r\n              }\r\n\r\n              $scope.chartViewModel = new flowchart.ChartViewModel(chartDataModel);\r\n              $scope.getServices();\r\n            }])\r\n          .controller('editController', ['$scope', '$rootScope', '$q', '$stateParams', 'restServices', 'notificationService', '$window', '$location', '$state', function ($scope, $rootScope, $q, $stateParams, restServices, notificationService, $window, $location, $state) {\r\n              $('#datetimepickerStart').datetimepicker({\r\n                format: 'yyyy-MM-dd hh:mm',\r\n                language: 'es',\r\n                startDate: new Date()\r\n              })\r\n                      .on('changeDate', function (ev) {\r\n                        $scope.applyTextGmt();\r\n                        $scope.$apply();\r\n                      });\r\n              $('#datetimepickerEnd').datetimepicker({\r\n                format: 'yyyy-MM-dd hh:mm',\r\n                language: 'es',\r\n                startDate: new Date()\r\n              })\r\n                      .on('changeDate', function (ev) {\r\n                        $scope.applyTextGmt();\r\n                        $scope.$apply();\r\n                      });\r\n              $scope.campaign = {};\r\n              $scope.formCampaign = {};\r\n              $scope.complet = false;\r\n              if (typeof $stateParams.idautomaticcampaign == \"undefined\") {\r\n                $state.go('index');\r\n              }\r\n\r\n              $scope.idautomaticcampaign = $stateParams.idautomaticcampaign;\r\n              $scope.getautomaticcampaign = function () {\r\n                restServices.editAutomaticCampaign($scope.idautomaticcampaign).then(function (data) {\r\n                  //            console.log(data);\r\n                  $scope.campaign = data.data.campaign;\r\n                  $scope.setFormCampaing(data.data.configuration);\r\n                  $scope.validStatus($scope.campaign);\r\n                  $scope.initTextGmt();\r\n                }).catch(function (data) {\r\n                  //            console.log(data.data.configuration);\r\n                  if (data.data.configuration == null) {\r\n                    $state.go('index');\r\n                  }\r\n                  $scope.campaign = data.data.campaign;\r\n                  $scope.errorCampaign = true;\r\n                  $scope.msgErrorCampaign = data.message;\r\n                  $scope.setFormCampaing(data.data.configuration);\r\n                  $scope.validStatus($scope.campaign);\r\n                  $scope.initTextGmt();\r\n                });\r\n              }\r\n\r\n\r\n              $scope.getautomaticcampaign();\r\n              $scope.validStatus = function (campaign) {\r\n                if (campaign.status == 'confirmed') {\r\n                  $('#updateStatusCampaign').addClass('dialog--open');\r\n                }\r\n              }\r\n\r\n              $scope.closeModalStatus = function () {\r\n                $state.go('index');\r\n              }\r\n\r\n              $scope.toReturn = function () {\r\n                $state.go('index');\r\n              }\r\n\r\n              $scope.updateStatusCampaign = function () {\r\n                restServices.updateStatusCampaign($scope.idautomaticcampaign).then(function (data) {\r\n                  notificationService.primary(data.message);\r\n                  $('#updateStatusCampaign').removeClass('dialog--open');\r\n                });\r\n              }\r\n\r\n              $scope.setFormCampaing = function (configuration) {\r\n                $scope.formCampaign = angular.copy($scope.campaign);\r\n                //          $scope.formCampaign.status = ($scope.campaign.status == 1);\r\n                $(\"#datestartCampaign\").val($scope.campaign.startDate);\r\n                $(\"#dateendCampaign\").val($scope.campaign.endDate);\r\n                $scope.chartViewModel = new flowchart.ChartViewModel(configuration);\r\n                //          var themePre = $scope.chartViewModel.nodes[$scope.chartViewModel.nodes.length - 1].getTheme();\r\n                //          if (themePre == \"service\") {\r\n                //            for (var i = 0; i < $scope.items.length; i++) {\r\n                //              if ($scope.items[i].theme == \"service\") {\r\n                //                $scope.items[i].disabled = true;\r\n                //                $scope.items[i].class += \" disabled\";\r\n                //              } else if ($scope.items[i].theme == \"operator\") {\r\n                //                $scope.items[i].disabled = false;\r\n                //                $scope.items[i].class = \"small-text\";\r\n                //              }\r\n                //            }\r\n                //          } else {\r\n                //            for (var i = 0; i < $scope.items.length; i++) {\r\n                //              if ($scope.items[i].theme == \"operator\") {\r\n                //                $scope.items[i].disabled = true;\r\n                //                $scope.items[i].class += \" disabled\";\r\n                //              } else if ($scope.items[i].theme == \"service\") {\r\n                //                $scope.items[i].disabled = false;\r\n                //                $scope.items[i].class = \"small-text\";\r\n                //              }\r\n                //            }\r\n                //          }\r\n                $scope.complet = true;\r\n                $scope.getServices();\r\n              }\r\n\r\n              $scope.getServices = function () {\r\n                restServices.getservices().then(function (data) {\r\n                  $scope.services = data;\r\n                  $scope.items = [{\r\n                      class: 'item-success-inverted-no-hover small-text text-center',\r\n                      name: 'Servicio',\r\n                      icon: false,\r\n                      iconClass: \"fa fa-envelope-o\"\r\n                    }];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    if (data[i].service == \"sms\") {\r\n                      $scope.items.push({\r\n                        class: 'small-text text-center cursor-pointer',\r\n                        name: 'Sms',\r\n                        theme: 'service',\r\n                        method: 'sms',\r\n                        templatepopover: fullUrlBase + \"flowchart/popoversms\",\r\n                        titlepopover: 'Configurar sms',\r\n                        disabled: false,\r\n                        icon: true,\r\n                        iconClass: \"fa fa-mobile fa-2x\",\r\n                        image: fullUrlBase + \"images/automatic/SMSA-01.jpg\"\r\n                      });\r\n                    }\r\n                    if (data[i].service == \"email marketing\") {\r\n                      $scope.items.push({\r\n                        class: 'small-text text-center cursor-pointer',\r\n                        name: 'Mail',\r\n                        theme: 'service',\r\n                        method: 'email',\r\n                        templatepopover: fullUrlBase + \"flowchart/popovermail\",\r\n                        titlepopover: 'Configurar correo',\r\n                        disabled: false,\r\n                        icon: true,\r\n                        iconClass: \"fa fa-envelope-o fa-2x\",\r\n                        image: fullUrlBase + \"images/automatic/correoa-01.jpg\"\r\n                      });\r\n                    }\r\n                  }\r\n                  $scope.items.push({\r\n                    class: 'item-primary-inverted-no-hover small-text text-center',\r\n                    name: 'Operadores',\r\n                    icon: false,\r\n                    iconClass: \"fa fa-envelope-o\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Tiempo',\r\n                    theme: 'operator',\r\n                    method: 'time',\r\n                    templatepopover: fullUrlBase + \"flowchart/popovertime\",\r\n                    titlepopover: 'Operador por tiempo',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-clock-o fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/tiempoa-01.jpg\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Accion',\r\n                    theme: 'operator',\r\n                    method: 'actions',\r\n                    templatepopover: fullUrlBase + \"flowchart/popoveraction\",\r\n                    titlepopover: 'Operador por accion',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-cogs fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/accion-01.jpg\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Clicks',\r\n                    theme: 'operator',\r\n                    method: 'clicks',\r\n                    templatepopover: fullUrlBase + \"flowchart/popoverclick\",\r\n                    titlepopover: 'Operador por click',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-link fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/click-01.jpg\"\r\n                  });\r\n                  restServices.validateService($scope.chartViewModel.data, data);\r\n                }).catch(function (data) {\r\n                  $scope.services = data;\r\n                  $scope.items = [{\r\n                      class: 'item-success-inverted-no-hover small-text text-center  text-center',\r\n                      name: 'Servicio',\r\n                      icon: false,\r\n                      iconClass: \"fa fa-envelope-o\"\r\n                    }];\r\n                  $scope.items.push({\r\n                    class: 'item-primary-inverted-no-hover small-text text-center  text-center',\r\n                    name: 'Operadores',\r\n                    icon: false,\r\n                    iconClass: \"fa fa-envelope-o\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Tiempo',\r\n                    theme: 'operator',\r\n                    method: 'time',\r\n                    templatepopover: fullUrlBase + \"flowchart/popovertime\",\r\n                    titlepopover: 'Operador por tiempo',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-clock-o fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/tiempoa-01.jpg\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Accion',\r\n                    theme: 'operator',\r\n                    method: 'actions',\r\n                    templatepopover: fullUrlBase + \"flowchart/popoveraction\",\r\n                    titlepopover: 'Operador por accion',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-cogs fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/accion-01.jpg\"\r\n                  });\r\n                  $scope.items.push({\r\n                    class: 'small-text  text-center cursor-pointer',\r\n                    name: 'Clicks',\r\n                    theme: 'operator',\r\n                    method: 'clicks',\r\n                    templatepopover: fullUrlBase + \"flowchart/popoverclick\",\r\n                    titlepopover: 'Operador por click',\r\n                    disabled: true,\r\n                    icon: true,\r\n                    iconClass: \"fa fa-link fa-2x\",\r\n                    image: fullUrlBase + \"images/automatic/click-01.jpg\"\r\n                  });\r\n                });\r\n              }\r\n\r\n              $scope.getIdMax = function () {\r\n                var idMax = 0;\r\n                for (var i = 0; i < $scope.chartViewModel.nodes.length; i++) {\r\n                  var idNode = $scope.chartViewModel.nodes[i].getId();\r\n                  if (idNode > idMax) {\r\n                    idMax = idNode;\r\n                  }\r\n                }\r\n                return idMax;\r\n              }\r\n\r\n              /*        $scope.disabledItem = function () {\r\n               //          var themePre = $scope.chartViewModel.nodes[$scope.chartViewModel.nodes.length - 1].getTheme();\r\n               //          if (themePre == \"service\") {\r\n               //            for (var i = 0; i < $rootScope.items.length; i++) {\r\n               //              if ($rootScope.items[i].theme == \"service\") {\r\n               //                $rootScope.items[i].disabled = true;\r\n               //                $rootScope.items[i].class += \" disabled text-center cursor-pointer\";\r\n               //              } else if ($rootScope.items[i].theme == \"operator\") {\r\n               //                $rootScope.items[i].disabled = false;\r\n               //                $rootScope.items[i].class = \"small-text text-center cursor-pointer\";\r\n               //              }\r\n               //            }\r\n               //          } else {\r\n               //            for (var i = 0; i < $rootScope.items.length; i++) {\r\n               //              if ($rootScope.items[i].theme == \"operator\") {\r\n               //                $rootScope.items[i].disabled = true;\r\n               //                $rootScope.items[i].class += \" disabled text-center cursor-pointer\";\r\n               //              } else if ($rootScope.items[i].theme == \"service\") {\r\n               //                $rootScope.items[i].disabled = false;\r\n               //                $rootScope.items[i].class = \"small-text text-center cursor-pointer\";\r\n               //              }\r\n               //            }\r\n               //          }\r\n               //        }\r\n               \r\n               //        $scope.items = [{class: 'item-success-inverted-no-hover small-text', name: 'Servicio'},\r\n               //          {class: 'small-text', name: 'Sms', theme: 'service', method: 'sms', templatepopover: fullUrlBase + \"flowchart/popoversms\", titlepopover: 'Configurar sms', disable: false},\r\n               //          {class: 'small-text', name: 'Mail', theme: 'service', method: 'email', templatepopover: fullUrlBase + \"flowchart/popovermail\", titlepopover: 'Configurar correo', disable: false},\r\n               //          {class: 'item-primary-inverted-no-hover small-text', name: 'Operadores'},\r\n               //          {class: 'small-text disabled', name: 'Tiempo', theme: 'operator', method: 'time', templatepopover: fullUrlBase + \"flowchart/popovertime\", titlepopover: 'Operador por tiempo', disable: true},\r\n               //          {class: 'small-text disabled', name: 'Accion', theme: 'operator', method: 'actions', templatepopover: fullUrlBase + \"flowchart/popoveraction\", titlepopover: 'Operador por accion', disable: true}];*/\r\n\r\n              $scope.getallcategory = function () {\r\n                restServices.getallcategory().then(function (data) {\r\n                  $scope.listCategory = data;\r\n                });\r\n                restServices.getGmt().then(function (data) {\r\n                  $scope.listZonaHoraria = data;\r\n                });\r\n              }\r\n              $scope.getallcategory();\r\n\r\n              $scope.addNewNode = function (item) {\r\n                if (typeof item.method == \"undefined\") {\r\n                  return;\r\n                }\r\n                var newNodeDataModel = {\r\n                  name: item.name,\r\n                  id: $scope.getIdMax() + 1,\r\n                  x: 10,\r\n                  y: 50,\r\n                  width: 100,\r\n                  theme: item.theme,\r\n                  method: item.method,\r\n                  image: item.image,\r\n                  templatepopover: item.templatepopover,\r\n                  titlepopover: item.titletemplate,\r\n                  inputConnectors: [{\r\n                      name: \"\"\r\n                    }],\r\n                  outputConnectors: [{\r\n                      name: \"\"\r\n                    }],\r\n                  sendData: {}\r\n                };\r\n                if (item.method == \"actions\" || item.method == \"clicks\" || item.method == \"links\") {\r\n                  newNodeDataModel.outputConnectors.push({\r\n                    name: \"\"\r\n                  });\r\n                }\r\n                $scope.chartViewModel.addNode(newNodeDataModel);\r\n              };\r\n              $scope.updateAutomaticCampaign = function (option) {\r\n                restServices.validateJsonAutomaticCampaign($scope.chartViewModel.data, $scope.services).then(function (objData) {\r\n                  $scope.optionCreate = option;\r\n                  if (option == 1) {\r\n                    restServices.updateAutomaticCampaignConfiguration($scope.chartViewModel.data, $scope.idautomaticcampaign).then(function (data) {\r\n                      notificationService.primary(data.message);\r\n                      $('#updateAutomaticCampaign').removeClass('dialog--open');\r\n                    });\r\n                  } else {\r\n                    restServices.validateFormCampaign($scope.formCampaign).then(function (data) {\r\n                      var objSend = {\r\n                        formCampaign: data,\r\n                        objCampaign: $scope.chartViewModel.data\r\n                      };\r\n                      restServices.updateAutomaticCampaignAll(objSend, $scope.idautomaticcampaign).then(function (data) {\r\n                        notificationService.primary(data.message);\r\n                        $state.go('index');\r\n                      });\r\n                    }).catch(function () {\r\n                      $scope.opeModalUpdateCampaign();\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n\r\n              $scope.uptCampaign = function () {\r\n                $scope.formCampaign.startDate = angular.copy($scope.dateGmtStart);\r\n                $scope.formCampaign.endDate = angular.copy($scope.dateGmtEnd);\r\n                restServices.validateFormCampaign($scope.formCampaign).then(function (data) {\r\n                  restServices.updateAutomaticCampaign(data, $scope.idautomaticcampaign).then(function (data) {\r\n                    //notificationService.primary(data.message);\r\n                    $scope.updateAutomaticCampaign(1);\r\n                    //$('#updateAutomaticCampaign').removeClass('dialog--open');\r\n                    $state.go('index');\r\n                  });\r\n                });\r\n              }\r\n\r\n              $scope.initTextGmt = function () {\r\n                $scope.showTextGmtStart = true;\r\n                $scope.showTextGmtEnd = true;\r\n                var StartUnix = moment($(\"#datestartCampaign\").val()).utc().valueOf();\r\n                $scope.dateGmtStart = moment(StartUnix).format('YYYY-MM-DD HH:mm');\r\n                var EndUnix = moment($(\"#dateendCampaign\").val()).utc().valueOf();\r\n                $scope.dateGmtEnd = moment(EndUnix).format('YYYY-MM-DD HH:mm');\r\n              }\r\n\r\n              $scope.applyTextGmt = function () {\r\n                if ($(\"#datestartCampaign\").val() != '') {\r\n                  $scope.showTextGmtStart = true;\r\n                } else {\r\n                  $scope.showTextGmtStart = false;\r\n                  $scope.textGmtStart = '';\r\n                }\r\n                if ($(\"#dateendCampaign\").val() != '') {\r\n                  $scope.showTextGmtEnd = true;\r\n                } else {\r\n                  $scope.showTextGmtEnd = false;\r\n                  $scope.textGmtEnd = '';\r\n                }\r\n                if ($scope.showTextGmtStart) {\r\n                  var StartUnix = moment($(\"#datestartCampaign\").val()).valueOf();\r\n                  $scope.dateGmtStart = moment(StartUnix).utcOffset($scope.formCampaign.gmt).format('YYYY-MM-DD HH:mm');\r\n                }\r\n                if ($scope.showTextGmtEnd) {\r\n                  var EndUnix = moment($(\"#dateendCampaign\").val()).valueOf();\r\n                  $scope.dateGmtEnd = moment(EndUnix).utcOffset($scope.formCampaign.gmt).format('YYYY-MM-DD HH:mm');\r\n                }\r\n\r\n              }\r\n\r\n              $scope.opeModalUpdateCampaign = function () {\r\n                $('#updateAutomaticCampaign').addClass('dialog--open');\r\n              }\r\n\r\n            }])\r\n          .controller('listController', ['$scope', 'restServices', '$q', '$interval', function ($scope, restServices, $q, $interval) {\r\n              $scope.initial = 0;\r\n              $scope.page = 1;\r\n              $scope.filter = {};\r\n              $scope.listAutomaticCampaign = {};\r\n              $scope.forward = function () {\r\n                $scope.initial += 1;\r\n                $scope.page += 1;\r\n                $scope.listautocamp();\r\n              };\r\n              $scope.fastforward = function () {\r\n                $scope.initial = ($scope.listAutomaticCampaign.total_pages - 1);\r\n                $scope.page = $scope.listAutomaticCampaign.total_pages;\r\n                $scope.listautocamp();\r\n              };\r\n              $scope.backward = function () {\r\n                $scope.initial -= 1;\r\n                $scope.page -= 1;\r\n                $scope.listautocamp();\r\n              };\r\n              $scope.fastbackward = function () {\r\n                $scope.initial = 0;\r\n                $scope.page = 1;\r\n                $scope.listautocamp();\r\n              };\r\n              $scope.listautocamp = function () {\r\n                var data = {};\r\n                $scope.listAutomaticCampaign.items = [];\r\n                restServices.listcampaign($scope.initial, $scope.filter).then(function (data) {\r\n                  $scope.listAutomaticCampaign = data;\r\n                  for (var i = 0; i < $scope.listAutomaticCampaign.items.length; i++) {\r\n                    var configuration = $scope.listAutomaticCampaign.items[i].configuration.configuration;\r\n                    if (angular.isUndefined(configuration) || configuration == 'null') {\r\n                      continue;\r\n                    }\r\n                    $scope.objConfiguration(configuration, $scope.listAutomaticCampaign.items[i].idAutomaticCampaign).then(function (data) {\r\n                      $scope.listConfiguration = data;\r\n                    });\r\n                  }\r\n                });\r\n              };\r\n              var statusVerify = function () {\r\n                var data = {};\r\n                restServices.listcampaign($scope.initial, data).then(function (data) {\r\n\r\n                  data.items.forEach(function (item, index) {\r\n                    if ($scope.listAutomaticCampaign.items[index].status != item.status) {\r\n                      $scope.listAutomaticCampaign.items[index].status = item.status;\r\n                    }\r\n                  });\r\n                  //$scope.mail = data;\r\n                });\r\n              };\r\n\r\n              $scope.openModal = function (idAutomaticCampaign) {\r\n                $scope.idAutCampaign = idAutomaticCampaign;\r\n                $('#cancelDialog').addClass('dialog--open');\r\n              };\r\n\r\n              $scope.closeModal = function () {\r\n                $('#cancelDialog').removeClass('dialog--open');\r\n              };\r\n\r\n              $scope.cancelCampaign = function () {\r\n                restServices.cancelAutomaticCampaign($scope.idAutCampaign).then(function (res) {\r\n                  slideOnTop(res.message, 3000, 'glyphicon glyphicon-remove-circle', 'info');\r\n                  $scope.listautocamp();\r\n                });\r\n                $scope.closeModal();\r\n              }\r\n\r\n              $interval(statusVerify, 60000);\r\n              $scope.countContacts = function (type, idAutomaticCampaign, lista) {\r\n                var data = {\r\n                  type: type,\r\n                  segment: lista,\r\n                  contactlist: lista\r\n                };\r\n                restServices.countContact(data).then(function (data) {\r\n                  for (var j = 0; j < $scope.listAutomaticCampaign.items.length; j++) {\r\n                    if (parseInt($scope.listAutomaticCampaign.items[j].idAutomaticCampaign) == parseInt(idAutomaticCampaign)) {\r\n                      $scope.listAutomaticCampaign.items[j].quantitytarget = data;\r\n                    }\r\n                  }\r\n                });\r\n              };\r\n              $scope.objConfiguration = function (Configuration, idAutomaticCampaign) {\r\n                var defer = $q.defer();\r\n                var objConfiguration = JSON.parse(Configuration);\r\n                var arrReturn = [];\r\n                for (var i = 0; i < objConfiguration.nodes.length; i++) {\r\n                  var node = objConfiguration.nodes[i];\r\n                  var str = \"\";\r\n                  if (node.method == \"primary\") {\r\n                    str = node.sendData.list.name + \" : \";\r\n                    var type = \"\";\r\n                    for (var j = 0; j < node.sendData.selecteds.length; j++) {\r\n                      if (node.sendData.list.id == 1) {\r\n                        type = \"contactlist\";\r\n                        $scope.countContacts(type, idAutomaticCampaign, node.sendData.selecteds);\r\n                        str += node.sendData.selecteds[j].name + \"(\" + node.sendData.selecteds[j].idContactlist + \"),\";\r\n                      } else {\r\n                        type = \"segment\";\r\n                        $scope.countContacts(type, idAutomaticCampaign, node.sendData.selecteds);\r\n                        str += node.sendData.selecteds[j].name + \"(\" + node.sendData.selecteds[j].idSegment + \"),\";\r\n                      }\r\n                    }\r\n\r\n                    str = str.substring(0, str.length - 1);\r\n                    arrReturn.push({\r\n                      step: i,\r\n                      detail: str,\r\n                      method: node.method,\r\n                      methodAlias: \"Destinatarios\"\r\n                    });\r\n                  }\r\n                  if (node.method == \"sms\") {\r\n                    str = \"La plantilla de sms : \" + node.sendData.smstemplate.name + \" con la categoria: \" + node.sendData.smscategory.name;\r\n                    arrReturn.push({\r\n                      step: i,\r\n                      detail: str,\r\n                      method: node.method,\r\n                      methodAlias: \"Sms\"\r\n                    });\r\n                  }\r\n                  if (node.method == \"email\") {\r\n                    str = \"Plantilla de correo : \" + node.sendData.mailtemplate.name + \" con la categoria: \" + node.sendData.mailcategory.name;\r\n                    arrReturn.push({\r\n                      step: i,\r\n                      detail: str,\r\n                      method: node.method,\r\n                      methodAlias: \"Correo\"\r\n                    });\r\n                  }\r\n                  if (node.method == \"time\") {\r\n                    str = node.sendData.text;\r\n                    arrReturn.push({\r\n                      step: i,\r\n                      detail: str,\r\n                      method: node.method,\r\n                      methodAlias: \"Tiempo\"\r\n                    });\r\n                  }\r\n                  if (node.method == \"actions\") {\r\n                    str = node.sendData.text;\r\n                    arrReturn.push({\r\n                      step: i,\r\n                      detail: str,\r\n                      method: node.method,\r\n                      methodAlias: \"Acción\"\r\n                    });\r\n                  }\r\n                }\r\n                for (var j = 0; j < $scope.listAutomaticCampaign.items.length; j++) {\r\n                  if (parseInt($scope.listAutomaticCampaign.items[j].idAutomaticCampaign) == parseInt(idAutomaticCampaign)) {\r\n                    $scope.listAutomaticCampaign.items[j].listConfiguration = arrReturn;\r\n                  }\r\n                }\r\n                defer.resolve(arrReturn);\r\n                return defer.promise;\r\n              }\r\n\r\n              $scope.search = function () {\r\n                $scope.listautocamp();\r\n              }\r\n\r\n              $scope.searchcategory = function () {\r\n                $scope.listautocamp();\r\n              };\r\n\r\n              $scope.getCategory = function () {\r\n                restServices.getallcategory().then(function (data) {\r\n                  $scope.automaCategory = data;\r\n                });\r\n              }\r\n\r\n              $scope.$watch('[filter.dateinitial,filter.dateend]', function () {\r\n//              if((angular.isDefined($scope.filter.dateinitial) && $scope.filter.dateinitial != \"\") && (angular.isDefined($scope.filter.dateend) && $scope.filter.dateend != \"\")){\r\n                $scope.listautocamp();\r\n//              }\r\n              });\r\n\r\n              $scope.listautocamp();\r\n              $scope.getCategory();\r\n            }])\r\n          .controller('viewschemeController', ['$scope', '$stateParams', 'restServices', '$q', '$interval', function ($scope, $stateParams, restServices, $q, $interval) {\r\n              $scope.idautomaticcampaign = $stateParams.idautomaticcampaign;\r\n              $scope.getautomaticcampaign = function () {\r\n                restServices.getScheme($scope.idautomaticcampaign).then(function (data) {\r\n                  $scope.campaign = data.data.campaign;\r\n                  $scope.setFormCampaing(data.data.configuration);\r\n                }).catch(function (data) {\r\n                  if (data.data.configuration == null) {\r\n                    $state.go('index');\r\n                  }\r\n                  $scope.campaign = data.data.campaign;\r\n                  $scope.errorCampaign = true;\r\n                  $scope.msgErrorCampaign = data.message;\r\n                  $scope.setFormCampaing(data.data.configuration);\r\n                });\r\n              }\r\n\r\n              $scope.getautomaticcampaign();\r\n\r\n              $scope.setFormCampaing = function (configuration) {\r\n                $scope.formCampaign = angular.copy($scope.campaign);\r\n                $(\"#datestartCampaign\").val($scope.campaign.startDate);\r\n                $(\"#dateendCampaign\").val($scope.campaign.endDate);\r\n                $scope.chartViewModel = new flowchart.ChartViewModel(configuration);\r\n                $scope.complet = true;\r\n              }\r\n            }]);\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('automaticcampaign.services', [])\r\n\r\n          .service('restServices', ['$http', '$q', 'notificationService', 'moment', function ($http, $q, notificationService, moment) {\r\n\r\n              this.createAutomaticCampaign = function (data) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/save\";\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.cancelAutomaticCampaign = function (data) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/cancelautomaticcampaign\";\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.getservices = function () {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/saxs/getall\";\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          if (data.length == 0) {\r\n                            notificationService.error(\"No tienes servicios disponibles, para adquirir uno por favor contacta a soporte.\");\r\n                            defer.reject(data);\r\n                          }\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.getallcategory = function () {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacampcateg/allcategory\";\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          if (data.length == 0) {\r\n                            //notificationService.error(\"No se encontraron categorias para la campaña.\");\r\n                            defer.reject(data);\r\n                          }\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.getGmt = function () {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"mail/timezone/\";\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.editAutomaticCampaign = function (idAutomaticCampaign) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/getautomaticcampaign/\" + idAutomaticCampaign;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.updateAutomaticCampaignAll = function (data, idAutomaticCampaign) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/updatecampaignall/\" + idAutomaticCampaign;\r\n                $http.put(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.updateAutomaticCampaign = function (data, idAutomaticCampaign) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/updatecampaign/\" + idAutomaticCampaign;\r\n                $http.put(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.updateAutomaticCampaignConfiguration = function (data, idAutomaticCampaign) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/updatecampaignconfiguration/\" + idAutomaticCampaign;\r\n                $http.put(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.createAutomaticCampaignDraft = function (data) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/savedraft\";\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.updateStatusCampaign = function (data) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/updatestatus/\" + data;\r\n                var objSend = {status: 'draft'};\r\n                $http.put(url, objSend)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n\r\n              this.listcampaign = function (page, data) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/list/\" + page;\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                        });\r\n                return defer.promise;\r\n              }  \r\n\r\n              this.validateJsonAutomaticCampaign = function (chartViewModel, services) {\r\n                var defer = $q.defer();\r\n                if (chartViewModel.connections <= 0) {\r\n                  notificationService.error(\"No se encontro ninguna conexion en la campaña.\");\r\n                  defer.reject();\r\n                }\r\n                if (chartViewModel.nodes.length < 3) {\r\n                  notificationService.error(\"El numero de nodos debe ser mayor a 3.\");\r\n                  defer.reject();\r\n                }\r\n                if (chartViewModel.nodes.length > 61) {\r\n                  notificationService.error(\"El numero de nodos debe ser mayor a 60.\");\r\n                  defer.reject();\r\n                }\r\n//          if (chartViewModel.nodes[chartViewModel.nodes.length - 1].theme == \"operator\") {\r\n//            notificationService.error(\"La campaña no puede terminar en un nodo operador.\");\r\n//            defer.reject();\r\n//          }\r\n                if ((chartViewModel.nodes.length - 1) != chartViewModel.connections.length) {\r\n                  notificationService.error(\"las conexiones no coinciden con los nodos, por favor revisar.\");\r\n                  defer.reject();\r\n                }\r\n                for (var i = 0; i < chartViewModel.nodes.length; i++) {\r\n                  if (jQuery.isEmptyObject(chartViewModel.nodes[i].sendData) || chartViewModel.nodes[i].sendData.textTitle == \"\") {\r\n                    notificationService.error(\"Ningun nodo debe estar vacio, por favor revisar.\");\r\n                    defer.reject();\r\n                  }\r\n                }\r\n                for (var i = 0; i < chartViewModel.connections.length; i++) {\r\n                  if (chartViewModel.connections[i].class == \"negation\") {\r\n                    if (jQuery.isEmptyObject(chartViewModel.connections[i].sendData)) {\r\n                      notificationService.error(\"Hay relaciones que no pueden estar vacias, por favor revisar.\");\r\n                      defer.reject();\r\n                    }\r\n                  }\r\n                }\r\n                this.validateService(chartViewModel, services).catch(function () {\r\n                  notificationService.error(\"Ningun nodo debe estar vacio, por favor revisar.\");\r\n                  defer.reject();\r\n                });\r\n\r\n                defer.resolve(true);\r\n                return defer.promise;\r\n              }\r\n\r\n              this.validateFormCampaign = function (formCampaign) {\r\n                var defer = $q.defer();\r\n                var startDate = moment(formCampaign.startDate).utc('-0500').add(30, 'minutes').format('YYYY-MM-DD HH:mm');\r\n                var now = moment().utc('-0500').format('YYYY-MM-DD HH:mm');\r\n                if (formCampaign.startDate == \"\" || formCampaign.startDate == null) {\r\n                  notificationService.error(\"El campo de fecha inicial es obligatorio.\");\r\n                  defer.reject();\r\n                }\r\n\r\n                if (formCampaign.gmt == \"\" || formCampaign.gmt == null) {\r\n                  notificationService.error(\"El campo de gmt es obligatorio.\");\r\n                  defer.reject();\r\n                }\r\n                if (startDate < now) {\r\n                  notificationService.error(\"La fecha inicial no debe ser menor a la fecha actual\");\r\n                  defer.reject();\r\n                }\r\n                if (formCampaign.campaignCategory == \"\" || typeof formCampaign.campaignCategory == \"undefined\" || formCampaign.campaignCategory == null) {\r\n                  notificationService.error(\"El campo de categoria de campaña es obligatorio.\");\r\n                  defer.reject();\r\n                }\r\n                if (formCampaign.descriptionCampaign == \"\" || typeof formCampaign.descriptionCampaign == \"undefined\" || formCampaign.descriptionCampaign == null) {\r\n                  formCampaign.descriptionCampaign = '';\r\n                }\r\n                if (formCampaign.nameCampaign == \"\" || typeof formCampaign.nameCampaign == \"undefined\" || typeof formCampaign.nameCampaign == null) {\r\n                  notificationService.error(\"El campo de nombre de campaña es obligatorio.\");\r\n                  defer.reject();\r\n                }\r\n\r\n\r\n                defer.resolve(formCampaign);\r\n                return defer.promise;\r\n              }\r\n\r\n              this.validateService = function (chartViewModel, services) {\r\n                var defer = $q.defer();\r\n                if (services.length == 0) {\r\n                  notificationService.error(\"La campaña tiene servicios que no estan habilitados, por favor contactar a soporte.\");\r\n                  defer.reject();\r\n                }\r\n                if (services.length < 2) {\r\n                  for (var i = 0; i < chartViewModel.nodes.length; i++) {\r\n                    if (chartViewModel.nodes[i].theme == \"service\") {\r\n                      if (services[0].service != chartViewModel.nodes[i].method) {\r\n                        notificationService.error(\"La campaña tiene servicios que no estan habilitados, por favor contactar a soporte.\");\r\n                        defer.reject();\r\n                      }\r\n                    }\r\n                  }\r\n                  defer.resolve();\r\n                } else {\r\n                  defer.resolve();\r\n                }\r\n                return defer.promise;\r\n              }\r\n\r\n              this.countContact = function (data) {\r\n                var deferred = $q.defer();\r\n                var url = fullUrlBase + 'api/sendmail/countcontact';\r\n                $http.post(url, data)\r\n                        .success(function (data) {\r\n                          deferred.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          deferred.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n\r\n                return deferred.promise;\r\n              }\r\n\r\n              this.getScheme = function (idAutomaticCampaign) {\r\n                var defer = $q.defer();\r\n                var url = fullUrlBase + \"api/automacamp/getscheme/\" + idAutomaticCampaign;\r\n                $http.get(url)\r\n                        .success(function (data) {\r\n                          defer.resolve(data);\r\n                        })\r\n                        .error(function (data) {\r\n                          defer.reject(data);\r\n                          notificationService.error(data.message);\r\n                        });\r\n                return defer.promise;\r\n              }\r\n            }])\r\n          .factory('notificationService', function () {\r\n            function error(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-remove-circle', 'danger');\r\n            }\r\n\r\n            function success(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-ok-circle', 'success');\r\n            }\r\n\r\n            function warning(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'warning');\r\n            }\r\n\r\n            function notice(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'notice');\r\n            }\r\n\r\n            function primary(message) {\r\n              slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'primary');\r\n            }\r\n\r\n            return {\r\n              error: error,\r\n              success: success,\r\n              warning: warning,\r\n              notice: notice,\r\n              primary: primary\r\n            };\r\n          })\r\n          .factory('setData', function () {\r\n            var obj = {};\r\n            var data = {};\r\n\r\n            obj.getData = function () {\r\n              return data;\r\n            }\r\n\r\n            obj.setData = function (objData) {\r\n              data = objData;\r\n            }\r\n\r\n            return obj;\r\n          })\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ })
/******/ ]);