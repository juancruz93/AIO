/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(1);\r\n__webpack_require__(2);\r\n__webpack_require__(3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL3Ntc3R3b3dheS9tYWluLmpzPzY5NzEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUJBQU8sQ0FBQyxDQUFVO0FBQ2xCLG1CQUFPLENBQUMsQ0FBa0I7QUFDMUIsbUJBQU8sQ0FBQyxDQUFlIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL2FwcC5qcycpO1xyXG5yZXF1aXJlKCcuL2NvbnRyb2xsZXJzLmpzJyk7XHJcbnJlcXVpcmUoJy4vc2VydmljZXMuanMnKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2pzL2FuZ3VsYXIvc21zdHdvd2F5L21haW4uanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("angular.module('smstwoway', ['ui.router', 'smstwoway.controllers', 'smstwoway.services', 'ui.select', \"ngSanitize\", 'moment-picker'])\r\n        .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\r\n            $stateProvider\r\n                    .state('toolstwoway', {\r\n                      url: \"/tools\",\r\n                      templateUrl: fullUrlBase + templateBase + '/toolstwoway',\r\n                      controller: 'tools'\r\n                    })\r\n                    .state('indextwoway', {\r\n                      url: \"/\",\r\n                      templateUrl: fullUrlBase + templateBase + '/list',\r\n                      controller: 'main'\r\n                    })\r\n                    .state('showlotetwoway', {\r\n                      url: \"/showlotetwoway\",\r\n                      templateUrl: fullUrlBase + templateBase + '/showlotetwoway',\r\n                      controller: 'showlotetwoway'\r\n                    })\r\n                    .state('create', {\r\n                      url: \"/speedsent\",\r\n                      templateUrl: fullUrlBase + templateBase + '/speedsent',\r\n                      controller: 'speedsent'\r\n                    })\r\n                    .state('csvsent', {\r\n                      url: \"/createcsv\",\r\n                      templateUrl: fullUrlBase + templateBase + '/createcsv',\r\n                      controller: 'csv'\r\n                    })\r\n                    .state('createdcontact', {\r\n                      url: \"/createdcontact\",\r\n                      templateUrl: fullUrlBase + templateBase + '/createdcontact',\r\n                      controller: 'createdcontact'\r\n                    })\r\n                    .state('editCsv', {\r\n                      url: \"/editcsv/:idSmsTwoway\",\r\n                      templateUrl: fullUrlBase + templateBase + '/createcsv',\r\n                      controller: 'csv'\r\n                    })\r\n                    .state('editsmstwowaycontact', {\r\n                      url: \"/editsmstwowaycontact/:idSmsTwoway\",\r\n                      templateUrl: fullUrlBase + templateBase + '/createdcontact',\r\n                      controller: 'createdcontact'\r\n                    })\r\n                    .state('editspeedsent', {\r\n                      url: \"/editspeedsent/:idSmsTwoway\",\r\n                      templateUrl: fullUrlBase + templateBase + '/speedsent',\r\n                      controller: 'speedsent'\r\n                    });\r\n\r\n            $urlRouterProvider.otherwise('/');\r\n          }])\r\n        .constant('contantSmstwoway', {\r\n          urlPeticion: {\r\n            getCategory: fullUrlBase + '/api/smscategory/getall',\r\n            getTimezone: fullUrlBase + 'mail/timezone/',\r\n            indexLoteTwoway: fullUrlBase + 'api/smstwoway/getallsmstwoway/',\r\n            createLoteTwoway: fullUrlBase + 'api/smstwoway/createsmslotetwoway',\r\n            editLoteTwoway: fullUrlBase + 'api/smstwoway/editsmslotetwowaysend',\r\n            getsegments: fullUrlBase + 'api/sendmail/getsegment',\r\n            getcontactlist: fullUrlBase + 'api/sendmail/getcontactlist',\r\n            createCsvTwoway: fullUrlBase + 'api/smstwoway/createcsv',\r\n            changeStatusTwoway: fullUrlBase + 'api/smstwoway/changestatus/',\r\n            countContact: fullUrlBase + 'api/sms/countcontact',\r\n            listSmsTemplate: fullUrlBase + 'api/smstemplate/listfull',\r\n            saveSmstowwayContact: fullUrlBase + 'api/smstwoway/savesmstowwaycontact',\r\n            indexSmsTwoway: fullUrlBase + 'smstwoway',\r\n            changeDataEditAll: fullUrlBase + 'api/smstwoway/getalledit/',\r\n            getInfoTwoway: fullUrlBase + 'api/smstwoway/getone',\r\n            getInforEdit: fullUrlBase + 'api/smstwoway/getalleditcontact',\r\n            calcelEdit: fullUrlBase + 'api/smstwoway/changestatusedit',\r\n            editcsv: fullUrlBase + 'api/smstwoway/editcsv',\r\n            getavalaiblecountry: fullUrlBase + 'api/smstwoway/getavalaiblecountry'\r\n\r\n          },\r\n          error: {\r\n            messages: {\r\n              msgNameSent: \"Debes ingresar un nombre de envio de SMS doble via\",\r\n              msgCategory: \"Por favor ingrese una categoria\",\r\n              msgTimezone: \"Por favor ingrese una zona horaria\",\r\n              msgDateTime: \"Debes ingresar una fecha y hora de envio\",\r\n              msgDestinataries: \"Debes ingresar al menos un destinatario\",\r\n              msgIndicative: \"Indicativo no valido\",\r\n              msgValidatePuntoYComa: \"Recuerde que los datos de cada destinatario deben estar separados por punto y coma ';' y los destinatarios por un salto de línea (enter)\",\r\n              msgValidatePhone: \"Numero de destinatario invalido.\",\r\n              msgValidateInvalidCharacters: \"El mensaje no permite estos caracteres: ñ Ñ á é í ó ú Á É Í Ó Ú ´\",\r\n              msgMaxCharacters: \"El mensaje para cada destinatario es de maximo 160 caracteres.\",\r\n              msgMaxDestinataries: \"Solo se puede ingresar 500 destinatarios\",\r\n              msgEmailEmpty: \"Por favor ingrese el email\",\r\n              msgEmailEmpty2: \"No se encontro ningun correo electronico\",\r\n              msgMaxEmail: \"Solo se puede ingresar un máximo de 8 correos electrónicos\",\r\n              msgIntervalos: \"Por favor ingrese la cantidad de envio por intervalos\",\r\n              msgSentTime: \"Por favor ingrese tiempo de envio\",\r\n              msgTimeFormat: \"Por favor ingrese el formato de envio\",\r\n              msgTypeResponseNotClicked: \"Debe agregar tipos de respuesta y homologaciones de las mismas para sus envios de SMS doble via.\",\r\n              msgTypeResponseEmpty: \"Los campos de respuesta y homologacion no pueden estar vacios.\",\r\n              msgTypeResponseMinLength: \"El minimo de respuestas con sus respectivas homologaciones es 2\",\r\n              msgTypeResponseHomologateMinLength: \"El maximo de homologaciones es 10\",\r\n              msgBlankSpaces: \"La respuesta y/o homologación no puede contener tildes, ni ñ ni espacios en blanco.\",\r\n              msgLoadCsv: \"Debe adjuntar un archivo con extension .csv\",\r\n              msgEnvioExitoso: \"El envío se realizó correctamente!\",\r\n              msgEnvioNoExitoso: \"No se pudo realizar el envio, intente de nuevo\",\r\n              msgCsv: \"Por favor seleccione un archivo CSV,intente de nuevo\",\r\n              msgInvalidMail1: \"El correo \",\r\n              msgInvalidMail2: \" no es valido.\",\r\n            }\r\n          },\r\n          values: {\r\n            messages: {\r\n              msgMaxDestinatariesValue:500,\r\n              msgMaxPhoneDigits: 10,\r\n              msgMaxCharacters: 160,\r\n              msgMinTypeResponseValue: 2,\r\n              msgMaxHomologateContentValue: 10,\r\n              msgMaxEmailValue: 8,\r\n              initValueZero: 0,\r\n              initValueOne: 1,\r\n            }\r\n          },\r\n          misc: {\r\n            idSubaccount: idSubaccount,\r\n            arrBoolean: [\"true\", \"false\", \"TRUE\", \"FALSE\", 0, 1, \"0\", \"1\"],\r\n            limitTypeResponse: 5,\r\n            minTypeResponse: 2,\r\n            typeResponseInit: [{response:\"si\",homologate:\"confirmado,acepto,ok\"},{response:\"no\",homologate:\"cancelado,negativo\"}],\r\n            timeZn: \"-0500\",\r\n            minValue: 'minute',\r\n            minName: \"Minuto(s)\", \r\n            hourValue: 'hour',\r\n            hourName: \"Hora(s)\",\r\n            dayValue: 'day',\r\n            dayName: \"Día(s)\",\r\n            weekValue: 'week',\r\n            weekName: \"Semana(s)\",\r\n            monthValue:'month',\r\n            monthName: \"Mes(es)\",\r\n          },\r\n          classToogle: {\r\n            danger: \"danger\",\r\n            error: \"error\",\r\n            warning: \"warning\",\r\n            success: \"success\",\r\n            notice: \"notice\",\r\n            info: \"info\",\r\n          },\r\n          milliSeconds: {\r\n            threeThousand: 3000,\r\n            fourThousand: 4000,\r\n\r\n          },\r\n          slideOnTop: {\r\n            classSlide: \"glyphicon glyphicon-info-sign\",\r\n            classSlideRemoveCircle: \"glyphicon glyphicon-remove-circle\",\r\n            classSlideOkCircle: \"glyphicon glyphicon-ok-circle\",\r\n            classSlideExclamationSign: \"glyphicon glyphicon-exclamation-sign\",\r\n          },\r\n          title:{\r\n            editsmscontac:\"Editar SMS doble vía por contacto o segmentos.\",\r\n            createdsmscontac:\"Crear SMS doble vía por contacto o segmentos.\",\r\n          },\r\n          patterns:{\r\n            accentsMsgDestinataries: /[ñÑáéíóúÁÉÍÓÚ´]/,\r\n            blankSpacesResponseAndHomologate:/\\s/,\r\n            accentsResponseAndHomologate:/[ñÑáéíóúÁÉÍÓÚ¿¡´]/,\r\n            verifyCorrectEmail: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n          },\r\n          cases: {\r\n            contact: 'contact',\r\n            csv: 'csv',\r\n            speedSent: 'lote',\r\n            \r\n            draft: 'draft',\r\n            scheduled: 'scheduled',\r\n            pending: 'pending',\r\n            sending: 'sending',\r\n            sent: 'sent',\r\n            paused: 'paused',\r\n            canceled: 'canceled',\r\n            undelivered: 'undelivered'\r\n          },\r\n          statusType:{\r\n            contact: \"Contacto\",\r\n            csv: \"Csv\",\r\n            sentSpeed: \"Envío rapido\"\r\n          },\r\n          restricts: {\r\n            letterRestrict: 'A'\r\n          },\r\n          atSym: {\r\n            symbolAt: '@'\r\n          },\r\n          classSt:{\r\n            colorDraft: 'color-draft',\r\n            colorScheduled: 'color-scheduled',\r\n            colorPending: 'color-pending',\r\n            colorSending: 'color-sending',\r\n            colorSent:'color-sent',\r\n            colorPaused:'color-paused',\r\n            colorCanceled1:'color-canceled', \r\n            colorCanceled2:'color-canceled', \r\n          },\r\n          smsTranslate:{\r\n            borrador: \"Borrador\",\r\n            programado: \"Programado\",\r\n            pendiente: \"Pendiente\",\r\n            enProcesoDeEnvio: \"En proceso de envío\",\r\n            enviado: \"Enviado\",\r\n            pausado: \"Pausado\",\r\n            cancelado: \"Cancelado\",\r\n            noEnviado: \"No enviado\",\r\n          },\r\n          sckts:{\r\n            stopSmsTwoway: 'stop-sms-twoway',\r\n            pausedSmsTwoway: 'paused-sms-twoway',\r\n            resumeSmsTwoway: 'resume-sms-twoway',\r\n            refreshViewSmsTwoWay:'refresh-view-sms-two-way',\r\n            processSmsTwoWay: 'process-sms-twoway'\r\n          },\r\n          funcNode:{\r\n            canc:\"canceled\",\r\n            paus: \"paused\",\r\n            sche: \"scheduled\"\r\n          },\r\n          casesNode:{\r\n            cancela: 'cancel',\r\n            pau: 'pause',\r\n            contin: 'continue',\r\n          },\r\n          caseResponseNode:{\r\n            caseOne: '1',\r\n            caseTwo: '2',\r\n            caseThree: '3'\r\n          },\r\n          toggleSmsTwoway:{\r\n            toggOn: 'Si', \r\n            toggOff: 'No',\r\n            toggOnStyle: 'success', \r\n            toggOffStyle: 'danger',\r\n            toggSize: 'small'\r\n          },\r\n          dTPicker:{\r\n            frmt: 'yyyy-MM-dd hh:mm:ss',\r\n            lng: 'es',\r\n          },\r\n          routing:{\r\n            smstwowayRoute: \"smstwoway/\",\r\n            goState: 'indextwoway'\r\n          },\r\n          statusLoadingCsv:{\r\n            preload: \"preload\",\r\n            validations: \"validations\",\r\n            load: \"load\",\r\n            finish: \"finish\"\r\n          },\r\n          clType:{\r\n            typeContactList: 'contactlist',\r\n            typeSegment: 'segment'\r\n          },\r\n          equalFR:{\r\n            equalFileRead: \"=\"\r\n          },\r\n          csvProcess:{\r\n            csvPorc: 20\r\n          },\r\n          valueSenitizeCsv:{\r\n            valuSC: \"1\"\r\n          }\r\n        });\r\n\r\nangular.element(document).ready(function () {\r\n  angular.bootstrap(document, ['smstwoway']);\r\n})\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("angular.module('smstwoway.controllers', [])\r\n        .filter('propsFilter', function () {\r\n          return function (items, props) {\r\n            var out = [];\r\n\r\n            if (angular.isArray(items)) {\r\n              var keys = Object.keys(props);\r\n\r\n              items.forEach(function (item) {\r\n                var itemMatches = false;\r\n\r\n                for (var i = 0; i < keys.length; i++) {\r\n                  var prop = keys[i];\r\n                  var text = props[prop].toLowerCase();\r\n                  if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {\r\n                    itemMatches = true;\r\n                    break;\r\n                  }\r\n                }\r\n\r\n                if (itemMatches) {\r\n                  out.push(item);\r\n                }\r\n              });\r\n            } else {\r\n              // Let the output be the input untouched\r\n              out = items;\r\n            }\r\n\r\n            return out;\r\n          };\r\n        })\r\n        .filter('split', function () {\r\n          return function (input, splitChar) {\r\n            // do some bounds checking here to ensure it has that index\r\n            return input.split(splitChar);\r\n          }\r\n        })\r\n        .directive('typeSms', function ($compile, contantSmstwoway) {\r\n          return{\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n              //console.log(attr);\r\n              var template = \"Tipo: {{statusType}}\";\r\n              switch (attr.typeSms) {\r\n                case contantSmstwoway.cases.contact:\r\n                  scope.statusType = contantSmstwoway.statusType.contact;\r\n                  break;\r\n                case contantSmstwoway.cases.csv:\r\n                  scope.statusType = contantSmstwoway.statusType.csv;\r\n                  break;\r\n                case contantSmstwoway.cases.speedSent:\r\n                  scope.statusType = contantSmstwoway.statusType.sentSpeed;\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n\r\n              element.html(template);\r\n              $compile(element.contents())(scope);\r\n            }\r\n          }\r\n        })\r\n        .directive('statusSms', function ($compile, contantSmstwoway) {\r\n          return{\r\n            scope: {statusSms: '@'},\r\n            restrict: 'A',\r\n            link: function (scope, element, attr) {\r\n              //console.log(scope);\r\n              var template = \"Estado: <span class='{{classStatus}}'>{{tralateSms}}<span>\";\r\n              scope.chaneStatus = function () {\r\n                switch (scope.statusSms) {\r\n                  case contantSmstwoway.cases.draft:\r\n                    scope.classStatus = contantSmstwoway.classSt.colorDraft;\r\n                    scope.tralateSms = contantSmstwoway.smsTranslate.borrador;\r\n                    break;\r\n                  case contantSmstwoway.cases.scheduled:\r\n                    scope.classStatus = contantSmstwoway.classSt.colorScheduled;\r\n                    scope.tralateSms = contantSmstwoway.smsTranslate.programado;\r\n                    break;\r\n                  case contantSmstwoway.cases.pending:\r\n                    scope.classStatus = contantSmstwoway.classSt.colorPending;\r\n                    scope.tralateSms = contantSmstwoway.smsTranslate.pendiente;\r\n                    break;\r\n                  case contantSmstwoway.cases.sending:\r\n                    scope.classStatus = contantSmstwoway.classSt.colorSending;\r\n                    scope.tralateSms = contantSmstwoway.smsTranslate.enProcesoDeEnvio;\r\n                    break;\r\n                  case contantSmstwoway.cases.sent:\r\n                    scope.classStatus = contantSmstwoway.classSt.colorSent;\r\n                    scope.tralateSms = contantSmstwoway.smsTranslate.enviado;\r\n                    break;\r\n                  case contantSmstwoway.cases.paused:\r\n                    scope.classStatus = contantSmstwoway.classSt.colorPaused;\r\n                    scope.tralateSms = contantSmstwoway.smsTranslate.pausado;\r\n                    break;\r\n                  case contantSmstwoway.cases.canceled:\r\n                    scope.classStatus = contantSmstwoway.classSt.colorCanceled1;\r\n                    scope.tralateSms = contantSmstwoway.smsTranslate.cancelado;\r\n                    break;\r\n                  case contantSmstwoway.cases.undelivered:\r\n                    scope.classStatus = contantSmstwoway.classSt.colorCanceled2;\r\n                    scope.tralateSms = contantSmstwoway.smsTranslate.noEnviado;\r\n                    break;\r\n\r\n                  default:\r\n                    break;\r\n                }\r\n              }\r\n              scope.$watch('statusSms', function (v) {\r\n                scope.chaneStatus();\r\n                element.html(template);\r\n                $compile(element.contents())(scope);\r\n              });\r\n              scope.chaneStatus();\r\n              element.html(template);\r\n              $compile(element.contents())(scope);\r\n            }\r\n          }\r\n        })\r\n        .factory('socket', function ($rootScope) {\r\n          return {\r\n            on: function (eventName, callback) {\r\n              socket.on(eventName, function () {\r\n                var args = arguments;\r\n                $rootScope.$apply(function () {\r\n                  callback.apply(socket, args);\r\n                });\r\n              });\r\n            },\r\n            emit: function (eventName, data, callback) {\r\n              socket.emit(eventName, data, function () {\r\n                var args = arguments;\r\n                $rootScope.$apply(function () {\r\n                  if (callback) {\r\n                    callback.apply(socket, args);\r\n                  }\r\n                });\r\n              })\r\n            }\r\n          }\r\n        })\r\n        .directive(\"fileread\", [function (contantSmstwoway) {\r\n            return {\r\n              scope: {\r\n                fileread: contantSmstwoway.equalFR.equalFileRead\r\n              },\r\n              link: function (scope, element, attributes) {\r\n                element.bind(\"change\", function (changeEvent) {\r\n                  var reader = new FileReader();\r\n                  reader.onload = function (loadEvent) {\r\n                    scope.$apply(function () {\r\n                      scope.fileread = loadEvent.target.result;\r\n                    });\r\n                  }\r\n                  reader.readAsDataURL(changeEvent.target.files[0]);\r\n                });\r\n              }\r\n            }\r\n          }])\r\n        .directive('fileModel', ['$parse', function ($parse, contantSmstwoway) {\r\n            return {\r\n              restrict: 'A',\r\n              link: function (scope, element, attrs) {\r\n                var model = $parse(attrs.fileModel);\r\n                var modelSetter = model.assign;\r\n\r\n                element.bind('change', function () {\r\n                  scope.$apply(function () {\r\n                    modelSetter(scope, element[0].files[0]);\r\n                  });\r\n                });\r\n              }\r\n            };\r\n          }])\r\n        .controller('tools', ['$scope', function ($scope) {}])\r\n        .controller('main', ['$scope', '$state', 'contantSmstwoway', 'restservices', '$q', 'notificationService', 'socket', function ($scope, $state, contantSmstwoway, restservices, $q, notificationService, socket) {\r\n            /**\r\n             * aray de los sockets que se usan en nod.js\r\n             */\r\n            $scope.sockets = {\r\n              cancelSent: function () {\r\n                socket.emit(contantSmstwoway.sckts.stopSmsTwoway, {idSmsTwoway: $scope.node.idSmsTwoway, func: contantSmstwoway.funcNode.canc});\r\n              },\r\n              pausedSent: function () {\r\n\r\n                socket.emit(contantSmstwoway.sckts.pausedSmsTwoway, {idSmsTwoway: $scope.node.idSmsTwoway, func: contantSmstwoway.funcNode.paus});\r\n              },\r\n              resumenSent: function () {\r\n                socket.emit(contantSmstwoway.sckts.resumeSmsTwoway, {idSmsTwoway: $scope.node.idSmsTwoway, func: contantSmstwoway.funcNode.sche});\r\n              },\r\n              executeFunction: function () {\r\n                // switch ($scope.node.status) {\r\n                //   case contantSmstwoway.casesNode.cancel:\r\n                //     $scope.sockets.cancelSent();\r\n                //     break;\r\n                //   case contantSmstwoway.casesNode.pau:\r\n                //     $scope.sockets.pausedSent();\r\n                //     break;\r\n                //   case contantSmstwoway.casesNode.contin:\r\n                //     $scope.sockets.resumenSent();\r\n                //     break;\r\n                // }\r\n                restservices.changestatus($scope.node.idSmsTwoway, $scope.node.status).then(function () {\r\n                  $scope.functions.clseModal();\r\n                  $scope.services.getInitial();\r\n                });\r\n              }\r\n            }\r\n\r\n            $scope.validateDate = function (data) {\r\n              restservices.validateDate(data).then(function () {}).catch(function () {})\r\n            }\r\n\r\n            /**\r\n             * llamado al soked que escucha las respuestas de nod.js\r\n             */\r\n            socket.on(contantSmstwoway.sckts.refreshViewSmsTwoWay, function (data) {\r\n              for (i in $scope.misc.smstwoway.items) {\r\n                if ($scope.misc.smstwoway.items[i].idSmsTwoway == data.idSms) {\r\n                  $scope.misc.smstwoway.items[i].status = data.status;\r\n                }\r\n              }\r\n            });\r\n\r\n            socket.on(contantSmstwoway.sckts.processSmsTwoWay, function (data) {\r\n              $scope.functions.responseNode(data);\r\n            });\r\n            /**\r\n             * array de funciones que se utilizan en el front net \r\n             */\r\n            $scope.functions = {\r\n              searchcategory: function () {\r\n                if ($scope.data.filter.category.length >= contantSmstwoway.values.messages.initValueOne) {\r\n                  $scope.services.getInitial();\r\n                } else {\r\n                  $scope.services.getInitial();\r\n                }\r\n              },\r\n              getCategory: function () {\r\n                restservices.getCategory().then(function (data) {\r\n                  $scope.smsCategory = data;\r\n                });\r\n              },\r\n              setAll: function (data) {\r\n                $scope.misc.smstwoway = data;\r\n              },\r\n              forward: function () {\r\n\r\n                $scope.misc.initial += contantSmstwoway.values.messages.initValueOne;\r\n                $scope.misc.page += contantSmstwoway.values.messages.initValueOne;\r\n                $scope.services.getInitial();\r\n              },\r\n              fastforward: function () {\r\n\r\n                $scope.misc.initial = ($scope.misc.smstwoway.total_pages - contantSmstwoway.values.messages.initValueOne);\r\n                $scope.misc.page = $scope.misc.smstwoway.total_pages;\r\n                $scope.services.getInitial();\r\n              },\r\n              backward: function () {\r\n\r\n                $scope.misc.initial -= contantSmstwoway.values.messages.initValueOne;\r\n                $scope.misc.page -= contantSmstwoway.values.messages.initValueOne;\r\n                $scope.services.getInitial();\r\n              },\r\n              fastbackward: function () {\r\n\r\n                $scope.misc.initial = contantSmstwoway.values.messages.initValueZero;\r\n                $scope.misc.page = contantSmstwoway.values.messages.initValueOne;\r\n                $scope.services.getInitial();\r\n              },\r\n              search: function () {\r\n                $scope.services.getInitial();\r\n              },\r\n              initVariable: function () {\r\n                $scope.data = {};\r\n                $scope.node = {};\r\n                $scope.misc = {};\r\n                $scope.misc.initial = 0;\r\n                $scope.misc.page = 1;\r\n                $scope.data.filter = {category: []};\r\n              },\r\n              openModal: function (id, status) {\r\n                $scope.node.status = status;\r\n                $scope.node.idSmsTwoway = id;\r\n                $('#cancelDialog').addClass('dialog--open');\r\n              },\r\n              clseModal: function () {\r\n                $('#cancelDialog').removeClass('dialog--open');\r\n              },\r\n              responseNode: function (data) {\r\n                if (data.response) {\r\n                  $scope.functions.clseModal();\r\n                  switch (data.type) {\r\n                    case contantSmstwoway.caseResponseNode.caseOne:\r\n                      notificationService.warning(data.response);\r\n                      break;\r\n                    case contantSmstwoway.caseResponseNode.caseTwo:\r\n                      notificationService.info(data.response);\r\n                      break;\r\n                    case contantSmstwoway.caseResponseNode.caseThree:\r\n                      notificationService.success(data.response);\r\n                      break;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            /**\r\n             * array de funciones que haran peticiones al services\r\n             */\r\n            $scope.services = {\r\n              getInitial: function () {\r\n                var arrInitialPeticion = [restservices.getAllSmsTwoway($scope.misc.initial, $scope.data.filter)];\r\n                $q.all(arrInitialPeticion).then(function (data) {\r\n                  $scope.functions.setAll(data[0].data);\r\n                }).catch(function (error) {\r\n                  notificationService.error(error.message);\r\n                })\r\n              }\r\n            };\r\n            /**\r\n             * observador para filtros de fecha\r\n             */\r\n            $scope.$watch('[data.filter.dateinitial,data.filter.dateend]', function () {\r\n\r\n              if (angular.isDefined($scope.data.filter.dateinitial) & angular.isDefined($scope.data.filter.dateend)) {\r\n                //console.log($scope.data.filter);\r\n                $scope.services.getInitial();\r\n              }\r\n            });\r\n            //ELIMINAR SMS2WAY\r\n            $scope.cancelSms2way = function (status) {\r\n              restservices.changestatus($scope.node.idSmsTwoway, status).then(function () {\r\n                $scope.functions.clseModal();\r\n                $scope.services.getInitial();\r\n              });\r\n\r\n            };\r\n            $scope.functions.initVariable();\r\n            $scope.functions.getCategory();\r\n            $scope.services.getInitial();\r\n\r\n\r\n          }])\r\n        .controller('speedsent', ['$scope', '$state', 'contantSmstwoway', 'restservices', 'notificationService', '$q', '$window', '$stateParams', 'misc', function ($scope, $state, contantSmstwoway, restservices, notificationService, $q, $window, $stateParams, misc) {\r\n\r\n            //Carga JQuery\r\n            $('.toggle-sms-two-way').bootstrapToggle({\r\n              on: contantSmstwoway.toggleSmsTwoway.toggOn,\r\n              off: contantSmstwoway.toggleSmsTwoway.toggOff,\r\n              onstyle: contantSmstwoway.toggleSmsTwoway.toggOnStyle,\r\n              offstyle: contantSmstwoway.toggleSmsTwoway.toggOffStyle,\r\n              size: contantSmstwoway.toggleSmsTwoway.toggSize\r\n            });\r\n            $.fn.datetimepicker.defaults = {\r\n              maskInput: false,\r\n              pickDate: true,\r\n              pickTime: true,\r\n              startDate: new Date()\r\n            };\r\n            $('.datetimepicker').datetimepicker({\r\n              format: contantSmstwoway.dTPicker.frmt,\r\n              language: contantSmstwoway.dTPicker.lng\r\n            });\r\n\r\n            //Universal functions\r\n            $scope.functions = {\r\n              addResponse: function () {\r\n                $scope.data.typeResponse.push({});\r\n              },\r\n              deleteResponse: function (index) {\r\n                console.log(index);\r\n                $scope.data.typeResponse.splice(index, 1);\r\n              },\r\n              validate: function () {\r\n                if ($stateParams.idSmsTwoway) {\r\n                  $scope.data.idSmsTwoway = $stateParams.idSmsTwoway;\r\n                }\r\n                misc.validationGeneral($scope.data).then(function () {\r\n                  var breaks = (angular.isDefined($scope.data.receiver)) ? $scope.data.receiver.split('\\n') : [];\r\n                  if (!$scope.data.receiver) {\r\n                    slideOnTop(contantSmstwoway.error.messages.msgDestinataries, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                    return;\r\n                  } else if ($scope.data.receiver) {\r\n                    $scope.misc.smsCount = breaks.length;\r\n                    for (var i = 0; i < breaks.length; i++) {\r\n                      if (!breaks[i].includes(\";\")) {\r\n                        slideOnTop(contantSmstwoway.error.messages.msgValidatePuntoYComa, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                        return;\r\n                      }\r\n                      var smscontent = breaks[i].split(\";\");\r\n                      if (!Number(smscontent[0])) {\r\n                        slideOnTop(contantSmstwoway.error.messages.msgIndicative, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                        return;\r\n                      }\r\n\r\n                      if (!Number(smscontent[1])) {\r\n                        slideOnTop(contantSmstwoway.error.messages.msgValidatePhone, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                        return;\r\n                      }\r\n                      if (angular.isUndefined(smscontent[2]) || smscontent[2].length <= 0 || smscontent[2].length > contantSmstwoway.values.messages.msgMaxCharacters) {\r\n                        slideOnTop(contantSmstwoway.error.messages.msgMaxCharacters, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                        return;\r\n                      }\r\n//                      else {\r\n//                        var patternAccents = contantSmstwoway.patterns.accentsMsgDestinataries;\r\n//                        if (patternAccents.test(smscontent[2])) {\r\n//                          slideOnTop(contantSmstwoway.error.messages.msgValidateInvalidCharacters, contantSmstwoway.milliSeconds.fourThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.warning);\r\n//                          return;\r\n//                        }\r\n//                      }\r\n                    }\r\n                    if (breaks.length > contantSmstwoway.values.messages.msgMaxDestinatariesValue) {\r\n                      slideOnTop(contantSmstwoway.error.messages.msgMaxDestinataries, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                      return;\r\n                    }\r\n                  }\r\n                  openModal();\r\n                }).catch(function (message) {\r\n                  slideOnTop(message, 3000, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                })\r\n\r\n              },\r\n              initVariable: function () {\r\n                //Universal Data\r\n                $scope.data = {};\r\n                //set misc\r\n                $scope.misc = {};\r\n                //set Response array \r\n                $scope.data.typeResponse = contantSmstwoway.misc.typeResponseInit;\r\n                //set default gmt(bogota)\r\n                $scope.data.gmt = contantSmstwoway.misc.timeZn;\r\n                //set arrayNumber misc\r\n                $scope.misc.numberSending = new Array(60);\r\n                //set Limit typeResponse\r\n                $scope.misc.limitTypeResponse = contantSmstwoway.misc.limitTypeResponse;\r\n                //set min typeResponse\r\n                $scope.misc.minTypeResponse = contantSmstwoway.misc.minTypeResponse;\r\n                //set timeFormats \r\n                $scope.misc.timeFormats = [{\r\n                    value: contantSmstwoway.misc.minValue,\r\n                    name: contantSmstwoway.misc.minName\r\n                  },\r\n                  {\r\n                    value: contantSmstwoway.misc.hourValue,\r\n                    name: contantSmstwoway.misc.hourName\r\n                  },\r\n                  {\r\n                    value: contantSmstwoway.misc.dayValue,\r\n                    name: contantSmstwoway.misc.dayName\r\n                  },\r\n                  {\r\n                    value: contantSmstwoway.misc.weekValue,\r\n                    name: contantSmstwoway.misc.weekName\r\n                  },\r\n                  {\r\n                    value: contantSmstwoway.misc.monthValue,\r\n                    name: contantSmstwoway.misc.monthName\r\n                  }\r\n                ];\r\n              },\r\n\r\n              setCategory: function (data) {\r\n                for(i=0; i< data.length; i++){\r\n                  if(data[i][\"idSmsCategory\"] == $scope.data.category){\r\n                    $scope.data.category = data[i];\r\n                  }\r\n                }\r\n                $scope.misc.listCategory = data;\r\n              },\r\n              setTimezone: function (data) {\r\n                for(i=0; i< data.length; i++){\r\n                  if(data[i][\"gmt\"] == $scope.data.gmt){\r\n                    $scope.data.gmt = data[i];\r\n                  }\r\n                }\r\n                $scope.misc.listTimezone = data;\r\n              },\r\n            };\r\n            //Functions RestServices\r\n            $scope.restServicesFunction = {\r\n              getAllSmsTwoway: function (data) {\r\n                $scope.misc.listSmsTwoway = data;\r\n              },\r\n              getInitial: function () {\r\n                $scope.functions.initVariable();\r\n                $scope.restServicesFunction.getAllEdit();\r\n                var arrInitialPeticion = [restservices.getCategory(), restservices.getlisttimezone()];\r\n                $q.all(arrInitialPeticion).then(function (data) {\r\n                  $scope.functions.setCategory(data[0]);\r\n                  $scope.functions.setTimezone(data[1].data);\r\n                }).catch(function (error) {})\r\n              },\r\n              setSmsTwoway: function (data) {\r\n                $scope.data.smstwoway = data;\r\n              },\r\n              createLoteTwoway: function () {\r\n                $scope.data.response = JSON.stringify({\r\n                  typeResponse: $scope.data.typeResponse\r\n                });\r\n                restservices.create($scope.data).then(function (data) {\r\n                  closeModal();\r\n                  var route = $window.myBaseURL + contantSmstwoway.routing.smstwowayRoute;\r\n                  $window.location.href = route;\r\n                  slideOnTop(contantSmstwoway.error.messages.msgEnvioExitoso, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.success);\r\n                }).catch(function (res) {\r\n                  slideOnTop(res.message, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                });\r\n              },\r\n              getAllEdit: function () {\r\n                if ($stateParams.idSmsTwoway) {\r\n                  restservices.getDataAll($stateParams.idSmsTwoway).then(function (data) {\r\n                    $scope.data = data;\r\n                    $scope.data.category = data[\"category\"];\r\n                    $scope.data.gmt = data[\"gmt\"];\r\n                    $scope.data.typeResponse = data.typeResponse.typeResponse;\r\n                  }).catch(function (data) {\r\n                  })\r\n                }\r\n              },\r\n              cancel: function () {\r\n                if ($stateParams.idSmsTwoway) {\r\n                  restservices.cancelEdit($stateParams.idSmsTwoway).then(function (data) {\r\n                    var route = $window.myBaseURL + contantSmstwoway.routing.smstwowayRoute;\r\n                    $window.location.href = route;\r\n                  }).catch(function (data) {\r\n                  })\r\n                } else {\r\n                  var route = $window.myBaseURL + contantSmstwoway.routing.smstwowayRoute;\r\n                  $window.location.href = route;\r\n                }\r\n              },\r\n\r\n            }\r\n            $scope.restServicesFunction.getInitial();\r\n          }])\r\n        .controller('createdcontact', ['$scope', '$state', 'contantSmstwoway', 'restservices', '$q', '$window', '$stateParams', function ($scope, $state, contantSmstwoway, restservices, $q, $window, $stateParams) {\r\n            console.log(\"contact\");\r\n            //Carga JQuery\r\n            $('.toggle-sms-two-way').bootstrapToggle({\r\n              on: contantSmstwoway.toggleSmsTwoway.toggOn,\r\n              off: contantSmstwoway.toggleSmsTwoway.toggOff,\r\n              onstyle: contantSmstwoway.toggleSmsTwoway.toggOnStyle,\r\n              offstyle: contantSmstwoway.toggleSmsTwoway.toggOffStyle,\r\n              size: contantSmstwoway.toggleSmsTwoway.toggSize\r\n            });\r\n            $.fn.datetimepicker.defaults = {\r\n              maskInput: false,\r\n              pickDate: true,\r\n              pickTime: true,\r\n              startDate: new Date()\r\n            };\r\n            $('.datetimepicker').datetimepicker({\r\n              format: contantSmstwoway.dTPicker.frmt,\r\n              language: contantSmstwoway.dTPicker.lng\r\n            });\r\n\r\n            $scope.countContactsApproximate = {};\r\n\r\n            $scope.functions = {\r\n              countContacts: function () {\r\n\r\n                var type = '';\r\n                if ($scope.data.listSelected == 1) {\r\n                  type = contantSmstwoway.clType.typeContactList;\r\n                } else {\r\n                  type = contantSmstwoway.clType.typeSegment;\r\n                }\r\n                if (angular.isUndefined($scope.data.arrAddressee) || $scope.data.arrAddressee == 0) {\r\n                  $scope.countContactsApproximate.counts = 0;\r\n                  return;\r\n                }\r\n                var data = {\r\n                  type: type,\r\n                  segment: $scope.data.arrAddressee,\r\n                  contactlist: $scope.data.arrAddressee\r\n                };\r\n                $scope.restServicesFunction.getCountContac(data);\r\n              },\r\n              addTag: function (tag) {\r\n\r\n                if (tangular.isUndefined($scope.data.message)) {\r\n                  $scope.data.message = \"\";\r\n                  $scope.data.message += tag;\r\n                } else {\r\n                  $scope.data.message += \" \" + tag;\r\n                }\r\n\r\n                $scope.functions.validateInLine();\r\n              },\r\n              smstemplate: function (data) {\r\n                $scope.restServicesFunction.getSmsTemplate();\r\n              },\r\n              timeSender: function () {\r\n                for (var i = 1; i <= 60; i++) {\r\n                  $scope.timeSender[i] = i;\r\n                }\r\n                console.log($scope.timeSender);\r\n              },\r\n              addResponse: function () {\r\n                $scope.data.typeResponse.push({});\r\n              },\r\n              deleteResponse: function (index) {\r\n                console.log(index);\r\n                $scope.data.typeResponse.splice(index, 1);\r\n              },\r\n              validate: function () {\r\n\r\n                $scope.error = 0;\r\n                $scope.success = 0;\r\n                var flag = true;\r\n                $scope.arrError = [{}];\r\n                try {\r\n                  if (!$scope.data.sentNow || $scope.data.sentNow == false) {\r\n                    if ($scope.data.timezone == \"\" || angular.isUndefined($scope.data.timezone) || !$scope.data.timezone) {\r\n                      throw(\"Debe seleccionar una zona horaria.\");\r\n                    }\r\n                    if (document.getElementById(\"datesend\").value == \"undefined\" || document.getElementById(\"datesend\").value == \"\") {\r\n                      throw(\"Debe agregar una fecha y hora de envio.\");\r\n                    }\r\n                  }\r\n                  if ($scope.data.email) {\r\n                    var email = $scope.data.email.split(\",\");\r\n                    if (email.length == 0) {\r\n                      throw(\"No se encontro ningun correo electronico.\");\r\n                    }\r\n                    if (email.length > 8) {\r\n                      throw(\"Solo se puede ingresar un máximo de 8 correos electrónicos\");\r\n                    }\r\n                    for (var i = 0; i < email.length; i++) {\r\n                      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                      email[i] = email[i].trim();\r\n                      if (!email[i].match(re)) {\r\n                        throw(\"El correo \" + email[i] + \" no es valido.\");\r\n                      }\r\n                    }\r\n                  }\r\n                  if (!$scope.data.idSmsCategory) {\r\n                    throw(\"Debes seleccionar una categoria\");\r\n                  }\r\n                  if (angular.isUndefined($scope.data.listSelected)) {\r\n                    throw(\"Debe seleccionar una lista de destinatarios\");\r\n                  }\r\n                  if (angular.isUndefined($scope.data.arrAddressee) || $scope.data.arrAddressee == 0) {\r\n                    throw (\"Debe seleccionar al menos un segmento o lista de contacto.\");\r\n                  }\r\n                  var re = /[Ã±Ã‘Ã¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÂ¿Â¡Â´]/;\r\n                  if (angular.isUndefined($scope.data.message) || $scope.data.message.length < 2) {\r\n                    throw (\"El mensaje es obligatorio y debe ser mayor a dos caracteres.\");\r\n                  }\r\n                  if (re.test($scope.data.message)) {\r\n                    throw (\"Hay caracteres no válidos en el mensaje\");\r\n                  }\r\n                  if ($scope.data.typeResponse.length == 0) {\r\n                    throw (\"Debe agregar minimo una respuesta con su respectiva homologacion.\");\r\n                  } else {\r\n                    for (var key in $scope.data.typeResponse) {\r\n                      if ((!$scope.data.typeResponse[key].homologate || $scope.data.typeResponse[key].homologate == \"\") || (!$scope.data.typeResponse[key].response || $scope.data.typeResponse[key].response == \"\")) {\r\n                        throw (\"Debe agregar minimo una respuesta con su respectiva homologacion.\");\r\n                      } else {\r\n                        break;\r\n                      }\r\n                    }\r\n                  }\r\n                  $scope.functions.openModal();\r\n                } catch ($err) {\r\n                  slideOnTop($err, 3000, \"glyphicon glyphicon-info-sign\", \"danger\");\r\n                }\r\n              },\r\n              openPreview: function () {\r\n                $(\"#preview\").addClass('dialog--open');\r\n              },\r\n              closePreview: function () {\r\n                $(\"#preview\").removeClass('dialog--open');\r\n              },\r\n              validateInLine: function () {\r\n                $scope.misc.invalidCharacters = false;\r\n                $scope.misc.existTags = false;\r\n                $scope.misc.taggedMessage = $scope.data.message;\r\n                $scope.misc.newMessage = $scope.data.message;\r\n                var re = /[Ã±Ã‘Ã¡Ã©Ã­Ã³ÃºÃÃ‰ÃÃ“ÃšÂ¿Â¡Â´]/;\r\n                var tags = /%%+[a-zA-Z0-9_]+%%/;\r\n                var count = 0;\r\n                if (re.test($scope.data.message)) {\r\n                  $scope.misc.invalidCharacters = true;\r\n                }\r\n                if (tags.test($scope.data.message)) {\r\n                  $scope.misc.existTags = true;\r\n                  $scope.misc.taggedMessage = \"\";\r\n                  $scope.misc.newMessage = \"\";\r\n\r\n                  var words = $scope.data.message.split(\" \");\r\n                  for (var cont = 0; cont < words.length; cont++) {\r\n                    var word = words[cont];\r\n                    var word2 = words[cont];\r\n                    if (word.substr(0, 2) == \"%%\" && (word.substr(-2) == \"%%\" || word.substr(-3) == \"%%,\" || word.substr(-3) == \"%%.\" || word.substr(-3) == \"%%;\")) {\r\n                      word = word.substr(2);\r\n                      word2 = \"\";\r\n                      word = \"<b><i>\" + word;\r\n                      if (word.substr(-2) == \"%%\") {\r\n                        word = word.substr(0, word.length - 2);\r\n                      } else if (word.substr(-3) == \"%%,\" || word.substr(-3) == \"%%.\" || word.substr(-3) == \"%%;\") {\r\n                        word = word.substr(0, word.length - 3);\r\n                      }\r\n                      word = word + \"</i></b>\";\r\n                      count = count + word.length;\r\n                    }\r\n                    $scope.misc.taggedMessage += word + \" \";\r\n                    $scope.misc.newMessage += word2 + \" \";\r\n                  }\r\n                }\r\n              },\r\n              openModal: function () {\r\n                $('.dialog').addClass('dialog--open');\r\n              },\r\n              closeModal: function () {\r\n                $('.dialog').removeClass('dialog--open');\r\n              },\r\n              createcontact: function () {\r\n                $scope.data.originalDate = angular.copy(document.getElementById(\"datesend\").value);\r\n                $scope.data.idSmsTwoway = $stateParams.idSmsTwoway;\r\n                var target = {};\r\n                if ($scope.data.listSelected == 1) {\r\n                  target = {type: 'contactlist', contactlists: $scope.data.arrAddressee};\r\n                } else {\r\n                  target = {type: 'segment', segment: $scope.data.arrAddressee};\r\n                }\r\n                $scope.data.receiver = target;\r\n                $scope.data.target = $scope.countContactsApproximate.counts;\r\n                $scope.restServicesFunction.createContact($scope.data);\r\n              },\r\n              setEdit: function () {\r\n                if ($stateParams.idSmsTwoway) {\r\n                  $scope.restServicesFunction.getEdit($stateParams.idSmsTwoway);\r\n                }\r\n              },\r\n              useTemplate: function () {\r\n                angular.forEach($scope.misc.listfullsmstemplate, function (value, key) {\r\n                  if (value.idSmsTemplate == $scope.data.idSmsTemplate) {\r\n                    $scope.functions.addTag(value.content);\r\n                  }\r\n                });\r\n              },\r\n              initializeVariables: function () {\r\n                //Universal Data\r\n                $scope.data = {};\r\n                $scope.data.gmt = \"-0500\";\r\n                //set misc\r\n                $scope.misc = {};\r\n                $scope.misc.listAddressee = [{id: 1, name: \"Lista de contactos\"}, {id: 2, name: \"Segmentos\"}];\r\n                //set Response array \r\n                $scope.data.typeResponse = [];\r\n                $scope.misc.timeFormats = [\r\n                  {value: 'minute', name: \"Minuto(s)\"},\r\n                  {value: 'hour', name: \"Hora(s)\"},\r\n                  {value: 'day', name: \"Día(s)\"},\r\n                  {value: 'week', name: \"Semana(s)\"},\r\n                  {value: 'month', name: \"Mes(es)\"}\r\n                ];\r\n                $scope.misc.arrAddressee = [];\r\n                $scope.viewTemplate = false;\r\n                $scope.timeSender = [];\r\n              },\r\n              changeTitle: function () {\r\n                if ($stateParams.idSmsTwoway) {\r\n                  $scope.misc.title = \"Editar SMS TWOWAY por contacto o segmentos.\";\r\n                } else {\r\n                  $scope.misc.title = \"Crear SMS TWOWAY por contacto o segmentos.\";\r\n                }\r\n              }\r\n            };\r\n            $scope.restServicesFunction = {\r\n              getDetinatary: function (list) {\r\n                $scope.misc.typeDestin = false;\r\n                $scope.showAddressee = false;\r\n                if (list == 1) {\r\n//                  let arrDestinatarylist = restservices.getcontactlist();\r\n                  restservices.getcontactlist().then(function (data) {\r\n                    $scope.showAddressee = true;\r\n                    $scope.misc.listAllAddressee = data;\r\n                  }).catch(function (error) {})\r\n                } else {\r\n//                  let arrDestinataryseg = restservices.getsegments();\r\n                  restservices.getsegments().then(function (data) {\r\n                    $scope.showAddressee = true;\r\n                    $scope.misc.listAllAddressee = data;\r\n                  }).catch(function (error) {})\r\n                }\r\n              },\r\n              setCategory: function (data) {\r\n                $scope.misc.listCategory = data;\r\n              },\r\n              getInitial: function () {\r\n                var arrInitialPeticion = [restservices.getCategory(), restservices.getlisttimezone()];\r\n                $q.all(arrInitialPeticion).then(function (data) {\r\n                  $scope.restServicesFunction.setCategory(data[0]);\r\n                  $scope.restServicesFunction.setTimezone(data[1].data);\r\n                }).catch(function (error) {})\r\n              },\r\n              setTimezone: function (data) {\r\n                $scope.misc.listTimezone = data;\r\n                $scope.data.timezone = \"-0500\";\r\n              },\r\n              getCountContac: function (data) {\r\n                restservices.countContact(data).then(function (data) {\r\n                  $scope.countContactsApproximate = data;\r\n                }).catch(function (error) {\r\n                })\r\n              },\r\n              getSmsTemplate: function () {\r\n                restservices.listfullsmstemplate().then(function (data) {\r\n                  $scope.misc.listfullsmstemplate = data;\r\n                }).catch(function (error) {\r\n\r\n                })\r\n              },\r\n              createContact: function (data) {\r\n\r\n                restservices.savesmstwowaycontact(data).then(function (data) {\r\n                  $scope.functions.closeModal();\r\n                  $window.location.href = contantSmstwoway.urlPeticion.indexSmsTwoway;\r\n                }).catch(function (error) {\r\n\r\n                })\r\n              },\r\n              getEdit: function (data) {\r\n                restservices.getEdit(data).then(function (data) {\r\n                  $scope.restServicesFunction.getDetinatary(data.listSelected);\r\n                  $scope.data = data;\r\n                  $scope.functions.countContacts();\r\n                }).catch(function (error) {\r\n\r\n                })\r\n              }\r\n            };\r\n\r\n            $scope.restServicesFunction.getInitial();\r\n            $scope.functions.setEdit();\r\n            $scope.functions.initializeVariables();\r\n            $scope.functions.changeTitle();\r\n          }])\r\n        .controller('csv', ['$scope', '$state', 'contantSmstwoway', 'restservices', '$q', 'socket', '$stateParams', 'notificationService', 'misc', function ($scope, $state, contantSmstwoway, restservices, $q, socket, $stateParams, notificationService, misc) {\r\n            $scope.validateCheckInternational = false;\r\n            //Carga JQuery\r\n            $('.toggle-sms-two-way').bootstrapToggle({\r\n              on: contantSmstwoway.toggleSmsTwoway.toggOn,\r\n              off: contantSmstwoway.toggleSmsTwoway.toggOff,\r\n              onstyle: contantSmstwoway.toggleSmsTwoway.toggOnStyle,\r\n              offstyle: contantSmstwoway.toggleSmsTwoway.toggOffStyle,\r\n              size: contantSmstwoway.toggleSmsTwoway.toggSize\r\n            });\r\n\r\n            $.fn.datetimepicker.defaults = {\r\n              maskInput: false,\r\n              pickDate: true,\r\n              pickTime: true,\r\n              startDate: new Date()\r\n            };\r\n\r\n            $('.datetimepicker').datetimepicker({\r\n              format: contantSmstwoway.dTPicker.frmt,\r\n              language: contantSmstwoway.dTPicker.lng\r\n            });\r\n\r\n            //Universal Data\r\n            $scope.data = {};\r\n            //set misc\r\n            $scope.misc = {};\r\n            $scope.misc.ProccessCsv = {};\r\n\r\n\r\n            //set SentNow\r\n            $scope.data.dateNow = false;\r\n\r\n            //set optionsAvanced\r\n            $scope.data.advancedoptions = false;\r\n\r\n            //set sendNotification\r\n            $scope.data.notification = false;\r\n\r\n            //set divideSendign\r\n            $scope.data.divide = false;\r\n\r\n            //set Response array \r\n            $scope.data.typeResponse = contantSmstwoway.misc.typeResponseInit;\r\n            //set default gmt(bogota)\r\n            $scope.data.gmt = contantSmstwoway.misc.timeZn;\r\n            //set Limit typeResponse\r\n            $scope.misc.limitTypeResponse = contantSmstwoway.misc.limitTypeResponse;\r\n            //set min typeResponse\r\n            $scope.misc.minTypeResponse = contantSmstwoway.misc.minTypeResponse;\r\n\r\n            //set arrayNumber misc\r\n            $scope.misc.numberSending = new Array(60);\r\n\r\n            //set timeFormats \r\n            $scope.misc.timeFormats = [\r\n              {value: contantSmstwoway.misc.minValue, name: contantSmstwoway.misc.minName},\r\n              {value: contantSmstwoway.misc.hourValue, name: contantSmstwoway.misc.hourName},\r\n              {value: contantSmstwoway.misc.dayValue, name: contantSmstwoway.misc.dayName},\r\n              {value: contantSmstwoway.misc.weekValue, name: contantSmstwoway.misc.weekName},\r\n              {value: contantSmstwoway.misc.monthValue, name: contantSmstwoway.misc.monthName}\r\n            ];\r\n            \r\n            $scope.ValidateCheckInter = function (){\r\n                if($scope.validateCheckInternational == true){\r\n                    slideOnTop(\"Lo sentimos, la cuenta no tiene habilitado envios internacionales, si deseas habilitarlo comunicate con soporte\", 3000, \"glyphicon glyphicon-info-sign\", \"danger\");    \r\n                $scope.data.international = false;\r\n                }\r\n                \r\n            }\r\n            //Universal functions\r\n            $scope.functions = {\r\n\r\n              optionsAvanced: function () {\r\n                if (!$scope.data.advancedoptions || angular.isUndefined($scope.data.advancedoptions)) {\r\n                  $scope.data.advancedoptions = true;\r\n                } else {\r\n                  $scope.data.advancedoptions = false;\r\n                }\r\n              },\r\n              sentNow: function () {\r\n                if (!$scope.data.dateNow || angular.isUndefined($scope.data.dateNow)) {\r\n                  $scope.data.dateNow = true;\r\n                } else {\r\n                  $scope.data.dateNow = false;\r\n                }\r\n              },\r\n              sendNotification: function () {\r\n                if (!$scope.data.notification || angular.isUndefined($scope.data.notification)) {\r\n                  $scope.data.notification = true;\r\n                } else {\r\n                  $scope.data.notification = false;\r\n                }\r\n              },\r\n              divideSending: function () {\r\n                if (!$scope.data.divide || angular.isUndefined($scope.data.divide)) {\r\n                  $scope.data.divide = true;\r\n                } else {\r\n                  $scope.data.divide = false;\r\n                }\r\n              },\r\n              addResponse: function () {\r\n                $scope.data.typeResponse.push({});\r\n              },\r\n              deleteResponse: function (index) {\r\n                console.log($scope.data.typeResponse);\r\n                $scope.data.typeResponse.splice(index, 1);\r\n              },\r\n              validate: function () {\r\n                misc.validationGeneral($scope.data).then(function (data) {\r\n                  if (angular.isUndefined($scope.data.csv) && angular.isUndefined($scope.data.idSmsTwoway)) {\r\n                    slideOnTop(contantSmstwoway.error.messages.msgCsv, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                    return;\r\n                  }\r\n                  if($scope.data.international == true && angular.isUndefined($scope.data.idcountry)){\r\n                    slideOnTop(\"Seleccione un pais para el envio internacional\", contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                    return;\r\n                  }\r\n                  $scope.functions.openModal();\r\n                }).catch(function (message) {\r\n                  slideOnTop(message, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                });\r\n              },\r\n              openModal: function () {\r\n                $('#ProcessCsv').addClass('dialog--open');\r\n              },\r\n              openModalEdit: function () {\r\n                $('#editCsv').addClass('dialog--open');\r\n              },\r\n              closeModalEdit: function () {\r\n                $('#editCsv').removeClass('dialog--open');\r\n              },\r\n              setDataEdit: function (data) {\r\n                $scope.misc.edit = true;\r\n                $scope.data.category = data[\"idSmsCategory\"];\r\n                $scope.data.gmt = data[\"gmt\"];\r\n                angular.forEach(data, function (value, key) {\r\n                  if (key == 'typeResponse') {\r\n                    var typeResponse = JSON.parse(value);\r\n                    $scope.data[key] = typeResponse.typeResponse;\r\n                  } else {\r\n                    $scope.data[key] = value;\r\n                  }\r\n                });\r\n              },\r\n              senitize: function (data, callback) {\r\n                angular.forEach(data, function (value, key) {\r\n                  if (contantSmstwoway.misc.arrBoolean.indexOf(value) >= 0) {\r\n                    data[key] = (value == contantSmstwoway.valueSenitizeCsv.valuSC) ? true : false;\r\n                  }\r\n                });\r\n                callback(data);\r\n              }\r\n            };\r\n            //Functions RestServices\r\n            $scope.restServicesFunction = {\r\n              getAllSmsTwoway: function (data) {\r\n                $scope.misc.listSmsTwoway = data;\r\n              },\r\n              getInitial: function () {\r\n                var arrInitialPeticion = [restservices.getCategory(), restservices.getlisttimezone()];\r\n                $q.all(arrInitialPeticion).then(function (data) {\r\n                  $scope.restServicesFunction.setCategory(data[0]);\r\n                  $scope.restServicesFunction.setTimezone(data[1].data);\r\n                }).catch(function (error) {})\r\n              },\r\n              setCategory: function (data) {\r\n                for(i=0; i< data.length; i++){\r\n                  if(data[i][\"idSmsCategory\"] == $scope.data.category){\r\n                    $scope.data.category = data[i];\r\n                  }\r\n                }\r\n                $scope.misc.listCategory = data;\r\n              },\r\n              setTimezone: function (data) {\r\n                for(i=0; i< data.length; i++){\r\n                  if(data[i][\"gmt\"] == $scope.data.gmt){\r\n                    $scope.data.gmt = data[i];\r\n                  }\r\n                }\r\n                $scope.misc.listTimezone = data;\r\n              },\r\n              setAvalaibleCountry: function (){\r\n                restservices.getAvalaibleCountry().then(function (data) {                  \r\n                  \r\n                  if(data.result != false){\r\n                    $scope.internationalcountries = data.result;\r\n                  }else{\r\n                    $scope.validateCheckInternational = true;\r\n                  }\r\n                }).catch(function () {\r\n\r\n                });\r\n              },\r\n              setSmsTwoway: function (data) {\r\n                $scope.data.smstwoway = data;\r\n              },\r\n              createLoteTwoway: function () {\r\n                if (!$stateParams.idSmsTwoway) {\r\n                  $scope.misc.initProcessUpload = true;\r\n                  $scope.misc.ProccessCsv.porc = contantSmstwoway.csvProcess.csvPorc;\r\n                  $scope.data.response = JSON.stringify({typeResponse: $scope.data.typeResponse});\r\n                  if(angular.isUndefined($scope.data.international)){\r\n                    $scope.data.international = false;\r\n                  }\r\n                  //if($scope.data.idcountry != '' || !angular.isUndefined($scope.data.idcountry)){\r\n//                    var tmp = $scope.data.idcountry;\r\n//                    //$scope.data.idcountry = null;\r\n//                    //$scope.data.idcountry; = tmp.idcountry;\r\n//                  }\r\n                  console.log(\"PASE POR AQUI\",$scope.data);   \r\n                  restservices.createcsv($scope.data).then(function (data) {\r\n\r\n                  }).catch(function (res) {\r\n                    $scope.misc.initProcessUpload = false;\r\n                    closeModal();\r\n                    slideOnTop(res.message, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n                  });\r\n                }else{\r\n                  console.log($scope.data);\r\n                  $scope.data.response = JSON.stringify({\r\n                  typeResponse: $scope.data.typeResponse\r\n                });\r\n                  restservices.editcsv($scope.data).then(function(data){\r\n                  closeModal();\r\n                  $state.go(contantSmstwoway.routing.goState);\r\n                  }).catch(function(res){\r\n                  slideOnTop(res.message, contantSmstwoway.milliSeconds.threeThousand, contantSmstwoway.slideOnTop.classSlide, contantSmstwoway.classToogle.danger);\r\n\r\n                    \r\n                  });\r\n                }\r\n\r\n              },\r\n              changeStatusCsv: function (status) {\r\n                var idSms = false;\r\n                if (angular.isDefined($scope.data.idSmsTwoway)) {\r\n                  idSms = $scope.data.idSmsTwoway;\r\n                } else {\r\n                  idSms = $scope.misc.idSms;\r\n                }\r\n                restservices.changestatus(idSms, status).then(function () {\r\n                  if (angular.isDefined($scope.data.idSmsTwoway)) {\r\n                    $scope.functions.closeModalEdit();\r\n                  } else {\r\n                    $state.go(contantSmstwoway.routing.goState);\r\n                  }\r\n                }).catch(function () {\r\n\r\n                });\r\n              },\r\n              getOneSms: function () {\r\n                restservices.getOne($scope.data.idSmsTwoway).then(function (data) {\r\n                  $scope.functions.senitize(data, $scope.functions.setDataEdit);\r\n//                  $scope.functions.setDataEdit(data);\r\n                }).catch(function (error) {\r\n                  notificationService.error(error.message);\r\n                  $state.go(contantSmstwoway.routing.goState);\r\n                });\r\n              },\r\n              cancel: function () {\r\n                if ($stateParams.idSmsTwoway) {\r\n                  restservices.cancelEdit($stateParams.idSmsTwoway).then(function (data) {\r\n                    var route = $window.myBaseURL + contantSmstwoway.routing.smstwowayRoute;\r\n                    $window.location.href = route;\r\n                  }).catch(function (data) {\r\n\r\n                  })\r\n                } else {\r\n                  var route = $window.myBaseURL + contantSmstwoway.routing.smstwowayRoute;\r\n                  $window.location.href = route;\r\n                }\r\n\r\n              },\r\n            }\r\n\r\n            $scope.socket = {\r\n              searchProcess: function (idSmsTwoway) {\r\n                socket.emit('search-sms-twoway', idSmsTwoway);\r\n              }\r\n            }\r\n            if (angular.isDefined($stateParams.idSmsTwoway) && $stateParams.idSmsTwoway != \"\") {\r\n              $scope.data.idSmsTwoway = $stateParams.idSmsTwoway;\r\n              $scope.functions.openModalEdit();\r\n              $scope.restServicesFunction.getOneSms();\r\n              $scope.restServicesFunction.getInitial();\r\n            } else {\r\n              $scope.restServicesFunction.getInitial();\r\n              $scope.restServicesFunction.setAvalaibleCountry();\r\n            }\r\n\r\n            socket.on('loading-csv-twoway', function (data) {\r\n              if (data.idSubaccount == contantSmstwoway.misc.idSubaccount) {\r\n                if (data.status == contantSmstwoway.statusLoadingCsv.preload) {\r\n                  $scope.misc.ProccessCsv.preload = {};\r\n                  $scope.misc.ProccessCsv.porc += contantSmstwoway.csvProcess.csvPorc;\r\n                }\r\n                if (data.status == contantSmstwoway.statusLoadingCsv.validations) {\r\n                  $scope.misc.ProccessCsv.porc += contantSmstwoway.csvProcess.csvPorc;\r\n                  $scope.misc.ProccessCsv.preload.data = data.data;\r\n                  $scope.misc.ProccessCsv.validations = {};\r\n                }\r\n                if (data.status == contantSmstwoway.statusLoadingCsv.load) {\r\n                  $scope.misc.ProccessCsv.porc += contantSmstwoway.csvProcess.csvPorc;\r\n                  $scope.misc.ProccessCsv.validations.data = data.data;\r\n                  $scope.misc.ProccessCsv.load = {};\r\n                }\r\n                if (data.status == contantSmstwoway.statusLoadingCsv.finish) {\r\n                  $scope.misc.ProccessCsv.porc += contantSmstwoway.csvProcess.csvPorc;\r\n                  $scope.misc.ProccessCsv.load.data = data.data;\r\n                  $scope.misc.ProccessCsv.finish = {};\r\n                  $scope.misc.idSms = data.id;\r\n                  $scope.misc.ProccessCsv.finish.message = data.message;\r\n                }\r\n              }\r\n            });\r\n\r\n            socket.on('process-sms-twoway', function (data) {\r\n              $scope.misc.hideSpinner = true;\r\n              $scope.misc.isProcess = false;\r\n            });\r\n\r\n          }]);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

eval("angular.module('smstwoway.services', [])\r\n        .service('restservices', ['$http', '$q', 'contantSmstwoway', 'notificationService', function ($http, $q, contantSmstwoway, notificationService) {\r\n            //Trae el total de registros de smstwoway para mostrarlas en el index de smstwoway\r\n            this.getAllSmsTwoway = function (page, filter) {\r\n              var deferred = $q.defer();\r\n\r\n              var url = contantSmstwoway.urlPeticion.indexLoteTwoway + page;\r\n              $http.post(url, filter)\r\n                      .then(function (data) {\r\n                        deferred.resolve(data);\r\n                      })\r\n                      .catch(function (data) {\r\n                        deferred.reject(data.data);\r\n                      });\r\n              return deferred.promise;\r\n            }\r\n            //Retorna listado de las categorias de SMS para filtrar por las mismas\r\n            this.getCategory = function () {\r\n              var defer = $q.defer();\r\n              var promise = defer.promise;\r\n\r\n              $http.get(contantSmstwoway.urlPeticion.getCategory)\r\n                      .then(function (data) {\r\n                        defer.resolve(data.data);\r\n                      })\r\n                      .catch(function (data) {\r\n                        defer.reject(data.data);\r\n                      });\r\n\r\n              return promise;\r\n            }\r\n            //Trae en el select de envio rapido y csv el listado de timezones\r\n            this.getlisttimezone = function () {\r\n              var defer = $q.defer();\r\n              var promise = defer.promise;\r\n\r\n              $http.get(contantSmstwoway.urlPeticion.getTimezone)\r\n                      .then(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .catch(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return promise;\r\n            }\r\n            this.create = function (data) {\r\n              var defer = $q.defer();\r\n              $http.post(contantSmstwoway.urlPeticion.createLoteTwoway, data)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return defer.promise;\r\n            };\r\n            this.edit = function (data) {\r\n              var defer = $q.defer();\r\n              $http.put(contantSmstwoway.urlPeticion.editLoteTwoway, data)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data.message);\r\n                      });\r\n\r\n              return defer.promise;\r\n            };\r\n\r\n            this.getcontactlist = function () {\r\n              var defer = $q.defer();\r\n              $http.get(contantSmstwoway.urlPeticion.getcontactlist)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return defer.promise;\r\n            };\r\n            this.getsegments = function () {\r\n              var defer = $q.defer();\r\n              $http.get(contantSmstwoway.urlPeticion.getsegments)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return defer.promise;\r\n            };\r\n            this.createcsv = function (data) {\r\n              var defer = $q.defer();\r\n              var config = {};\r\n              config.headers = {};\r\n              config.transformRequest = angular.identity;\r\n              config.headers['Content-Type'] = undefined;\r\n              var formData = new FormData();\r\n              for (var key in data) {\r\n                if (!(data[key] instanceof File)) {\r\n                  if (typeof data[key] == \"object\") {\r\n                    formData.append(key, JSON.stringify(data[key]));\r\n                  } else {\r\n                    formData.append(key, data[key]);\r\n                  }\r\n\r\n                } else {\r\n                  formData.append(key, data[key]);\r\n                }\r\n              }\r\n              $http.post(contantSmstwoway.urlPeticion.createCsvTwoway, formData, config)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return defer.promise;\r\n            };\r\n            this.countContact = function (data) {\r\n              var defer = $q.defer();\r\n\r\n              $http.post(contantSmstwoway.urlPeticion.countContact, data)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return defer.promise;\r\n            };\r\n            this.listfullsmstemplate = function () {\r\n              var defer = $q.defer();\r\n              $http.get(contantSmstwoway.urlPeticion.listSmsTemplate)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      });\r\n              return defer.promise;\r\n            }\r\n\r\n            this.savesmstwowaycontact = function (data) {\r\n              var defer = $q.defer();\r\n              $http.post(contantSmstwoway.urlPeticion.saveSmstowwayContact, data)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n              return defer.promise;\r\n            };\r\n            this.changestatus = function (id, status) {\r\n              var defer = $q.defer();\r\n              $http.post(contantSmstwoway.urlPeticion.changeStatusTwoway + id, {status: status})\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return defer.promise;\r\n            };\r\n            //Funcion que trae los datos al editar en el envio rapido\r\n            this.getDataAll = function (id) {\r\n              var defer = $q.defer();\r\n              $http.post(contantSmstwoway.urlPeticion.changeDataEditAll, id)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n              return defer.promise;\r\n            };\r\n            this.getOne = function (id) {\r\n              var defer = $q.defer();\r\n              $http.post(contantSmstwoway.urlPeticion.changeDataEditAll, id)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n              return defer.promise;\r\n            };\r\n\r\n            this.validateDate = function (id) {\r\n              var defer = $q.defer();\r\n              $http.post(contantSmstwoway.urlPeticion.getValidationDate, id)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n              return defer.promise;\r\n            };\r\n\r\n            this.getEdit = function (id) {\r\n              var defer = $q.defer();\r\n\r\n              $http.post(contantSmstwoway.urlPeticion.getInforEdit, id)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n              return defer.promise;\r\n            };\r\n\r\n            this.cancelEdit = function (id) {\r\n              var defer = $q.defer();\r\n\r\n              $http.post(contantSmstwoway.urlPeticion.calcelEdit, id)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n              return defer.promise;\r\n            };\r\n            this.editcsv = function (data) {\r\n              var defer = $q.defer();\r\n              $http.post(contantSmstwoway.urlPeticion.editcsv, data)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return defer.promise;\r\n\r\n            };\r\n            this.getAvalaibleCountry = function () {\r\n              var defer = $q.defer();\r\n              $http.post(contantSmstwoway.urlPeticion.getavalaiblecountry)\r\n                      .success(function (data) {\r\n                        defer.resolve(data);\r\n                      })\r\n                      .error(function (data) {\r\n                        defer.reject(data);\r\n                      });\r\n\r\n              return defer.promise;\r\n            };\r\n          }\r\n        ])\r\n        .factory('notificationService', function (contantSmstwoway) {\r\n          function error(message) {\r\n            slideOnTop(message, contantSmstwoway.milliSeconds.fourThousand, contantSmstwoway.slideOnTop.classSlideRemoveCircle, contantSmstwoway.classToogle.danger);\r\n          }\r\n\r\n          function success(message) {\r\n            slideOnTop(message, contantSmstwoway.milliSeconds.fourThousand, contantSmstwoway.slideOnTop.classSlideOkCircle, contantSmstwoway.classToogle.success);\r\n          }\r\n\r\n          function warning(message) {\r\n            slideOnTop(message, contantSmstwoway.milliSeconds.fourThousand, contantSmstwoway.slideOnTop.classSlideExclamationSign, contantSmstwoway.classToogle.warning);\r\n          }\r\n\r\n          function notice(message) {\r\n            slideOnTop(message, contantSmstwoway.milliSeconds.fourThousand, contantSmstwoway.slideOnTop.classSlideExclamationSign, contantSmstwoway.classToogle.notice);\r\n          }\r\n\r\n          function info(message) {\r\n            slideOnTop(message, contantSmstwoway.milliSeconds.fourThousand, contantSmstwoway.slideOnTop.classSlideExclamationSign, contantSmstwoway.classToogle.info);\r\n          }\r\n\r\n          return {\r\n            error: error,\r\n            success: success,\r\n            warning: warning,\r\n            notice: notice,\r\n            info: info\r\n          };\r\n        })\r\n        .factory('misc', function ($q, contantSmstwoway) {\r\n          return {\r\n            validationGeneral: function (data) {\r\n              var defer = $q.defer();\r\n              var promise = defer.promise;\r\n              var name = data.name;\r\n              var cat = (data.category) ? data.category : data.idSmsCategory;\r\n              var gmt = data.gmt;\r\n              var dtp = data.dtpicker = $('#dtpicker').val();\r\n              var sentNow = (data.sentNow) ? data.sentNow : data.dateNow;\r\n              var optionsAvanced = (data.optionsAvanced) ? data.optionsAvanced : data.advancedoptions;\r\n              var sendNotification = (data.sendNotification) ? data.sendNotification : data.notification;\r\n              var emailNotification = (data.emailNotification) ? data.emailNotification : data.email;\r\n\r\n              if (angular.isUndefined(name) || !name) {\r\n                defer.reject(contantSmstwoway.error.messages.msgNameSent);\r\n              }\r\n              if (angular.isUndefined(cat) || !cat) {\r\n                defer.reject(contantSmstwoway.error.messages.msgCategory);\r\n              }\r\n              if (!sentNow || sentNow != true) {\r\n                if (angular.isUndefined(gmt) || !gmt) {\r\n                  defer.reject(contantSmstwoway.error.messages.msgTimezone);\r\n                }\r\n                if (angular.isUndefined(dtp) || !dtp) {\r\n                  defer.reject(contantSmstwoway.error.messages.msgDateTime);\r\n                }\r\n              }\r\n              if (data.typeResponse.length == 0) {\r\n                defer.reject(contantSmstwoway.error.messages.msgTypeResponseNotClicked);\r\n              } else {\r\n                for (var key in data.typeResponse) {\r\n                  if ((!data.typeResponse[key].homologate || data.typeResponse[key].homologate == \"\") || (!data.typeResponse[key].response || data.typeResponse[key].response == \"\")) {\r\n                    defer.reject(contantSmstwoway.error.messages.msgTypeResponseEmpty);\r\n                  } else if (data.typeResponse.length < contantSmstwoway.values.messages.msgMinTypeResponseValue) {\r\n                    defer.reject(contantSmstwoway.error.messages.msgTypeResponseMinLength);\r\n                  } else if (data.typeResponse[key].response || data.typeResponse[key].homologate) {\r\n                    var homologatecontent = data.typeResponse[key].homologate.split(\",\");\r\n                    var patternBlankSpaces = contantSmstwoway.patterns.blankSpacesResponseAndHomologate;\r\n                    var patternAccents = contantSmstwoway.patterns.accentsResponseAndHomologate;\r\n                    if (patternAccents.test(data.typeResponse[key].response) || patternBlankSpaces.test(homologatecontent) || patternAccents.test(homologatecontent)) {\r\n                      defer.reject(contantSmstwoway.error.messages.msgBlankSpaces);\r\n                    }\r\n                    if (homologatecontent.length > contantSmstwoway.values.messages.msgMaxHomologateContentValue) {\r\n                      defer.reject(contantSmstwoway.error.messages.msgTypeResponseHomologateMinLength);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              if (optionsAvanced == true) {\r\n                if (sendNotification == true) {\r\n                  if (!emailNotification) {\r\n                    defer.reject(contantSmstwoway.error.messages.msgEmailEmpty);\r\n                  } else if (emailNotification) {\r\n                    var email = emailNotification.split(\",\");\r\n                    if (email.length == 0) {\r\n                      defer.reject(contantSmstwoway.error.messages.msgEmailEmpty2);\r\n                    }\r\n                    if (email.length > contantSmstwoway.values.messages.msgMaxEmailValue) {\r\n                      defer.reject(contantSmstwoway.error.messages.msgMaxEmail);\r\n                    }\r\n                    for (var i = 0; i < email.length; i++) {\r\n                      var re = contantSmstwoway.patterns.verifyCorrectEmail;\r\n                      email[i] = email[i].trim();\r\n                      if (!email[i].match(re)) {\r\n                        defer.reject(contantSmstwoway.error.messages.msgInvalidMail1 + email[i] + contantSmstwoway.error.messages.msgInvalidMail2);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                if (data.divideSending == true) {\r\n                  if (!data.quantity) {\r\n                    defer.reject(contantSmstwoway.error.messages.msgIntervalos);\r\n                  } else if (!data.sendingTime) {\r\n                    defer.reject(contantSmstwoway.error.messages.msgSentTime);\r\n                  } else if (!data.timeFormat) {\r\n                    defer.reject(contantSmstwoway.error.messages.msgTimeFormat);\r\n                  }\r\n                }\r\n              }\r\n              defer.resolve();\r\n              return promise;\r\n            }\r\n          }\r\n        });\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ })
/******/ ]);