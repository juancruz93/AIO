/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(1);\r\n__webpack_require__(2);\r\n__webpack_require__(3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2F1dG9yZXNwb25kZXIvbWFpbi5qcz9lMGYzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1CQUFPLENBQUMsQ0FBVTtBQUNsQixtQkFBTyxDQUFDLENBQWtCO0FBQzFCLG1CQUFPLENBQUMsQ0FBZSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9hcHAuanMnKTtcclxucmVxdWlyZSgnLi9jb250cm9sbGVycy5qcycpO1xyXG5yZXF1aXJlKCcuL3NlcnZpY2VzLmpzJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9qcy9hbmd1bGFyL2F1dG9yZXNwb25kZXIvbWFpbi5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("(function () {\r\n    angular.module('autoresponder', ['ui.router', 'autoresponder.controllers', 'autoresponder.services', 'ui.select', 'ngSanitize', 'ngMaterial', 'moment-picker'])\r\n        .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\r\n              $stateProvider\r\n                      .state('index', { \r\n                        url: \"/\",\r\n                        templateUrl: fullUrlBase + templateBase + '/list',\r\n                        controller: 'listController'\r\n                      })  \r\n                      .state('tools', {\r\n                        url: \"/tools\",\r\n                        templateUrl: fullUrlBase + templateBase + '/tools',\r\n                        controller: 'toolsController' \r\n                      })\r\n                      .state('birthday', {\r\n                        url: \"/birthday/:id\",\r\n                        templateUrl: fullUrlBase + templateBase + '/birthday',\r\n                        controller: 'birthdayController'\r\n                      })\r\n                      .state('birthdaysms', {\r\n                        url: \"/birthdaysms/:id\",\r\n                        templateUrl: fullUrlBase + templateBase + '/birthdaysms',\r\n                        controller: 'birthdaySmsController'\r\n                      })\r\n                      .state('edit', {\r\n                        url: \"/edit/:id\",\r\n                        templateUrl: fullUrlBase + templateBase + '/edit',\r\n                        controller: 'editController'\r\n                      });\r\n\r\n              $urlRouterProvider.otherwise('/')\r\n            }]);\r\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2F1dG9yZXNwb25kZXIvYXBwLmpzP2ZkYTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qjs7QUFFdkI7QUFDQSxhQUFhO0FBQ2IsQ0FBQyIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcclxuICAgIGFuZ3VsYXIubW9kdWxlKCdhdXRvcmVzcG9uZGVyJywgWyd1aS5yb3V0ZXInLCAnYXV0b3Jlc3BvbmRlci5jb250cm9sbGVycycsICdhdXRvcmVzcG9uZGVyLnNlcnZpY2VzJywgJ3VpLnNlbGVjdCcsICduZ1Nhbml0aXplJywgJ25nTWF0ZXJpYWwnLCAnbW9tZW50LXBpY2tlciddKVxyXG4gICAgICAgIC5jb25maWcoWyckc3RhdGVQcm92aWRlcicsICckdXJsUm91dGVyUHJvdmlkZXInLCBmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcikge1xyXG4gICAgICAgICAgICAgICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAgICAgICAgICAgICAgICAgICAuc3RhdGUoJ2luZGV4JywgeyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6IGZ1bGxVcmxCYXNlICsgdGVtcGxhdGVCYXNlICsgJy9saXN0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2xpc3RDb250cm9sbGVyJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgfSkgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgLnN0YXRlKCd0b29scycsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi90b29sc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogZnVsbFVybEJhc2UgKyB0ZW1wbGF0ZUJhc2UgKyAnL3Rvb2xzJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3Rvb2xzQ29udHJvbGxlcicgXHJcbiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgLnN0YXRlKCdiaXJ0aGRheScsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9iaXJ0aGRheS86aWRcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6IGZ1bGxVcmxCYXNlICsgdGVtcGxhdGVCYXNlICsgJy9iaXJ0aGRheScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdiaXJ0aGRheUNvbnRyb2xsZXInXHJcbiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgLnN0YXRlKCdiaXJ0aGRheXNtcycsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9iaXJ0aGRheXNtcy86aWRcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6IGZ1bGxVcmxCYXNlICsgdGVtcGxhdGVCYXNlICsgJy9iaXJ0aGRheXNtcycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdiaXJ0aGRheVNtc0NvbnRyb2xsZXInXHJcbiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgLnN0YXRlKCdlZGl0Jywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2VkaXQvOmlkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBmdWxsVXJsQmFzZSArIHRlbXBsYXRlQmFzZSArICcvZWRpdCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdlZGl0Q29udHJvbGxlcidcclxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvJylcclxuICAgICAgICAgICAgfV0pO1xyXG59KSgpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvYW5ndWxhci9hdXRvcmVzcG9uZGVyL2FwcC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("(function () {\r\n    angular.module('autoresponder.controllers', [])\r\n            .filter('propsFilter', function () {\r\n                return function (items, props) {\r\n                    var out = [];\r\n                    if (angular.isArray(items)) {\r\n                        var keys = Object.keys(props);\r\n                        items.forEach(function (item) {\r\n                            var itemMatches = false;\r\n                            for (var i = 0; i < keys.length; i++) {\r\n                                var prop = keys[i];\r\n                                var text = props[prop].toLowerCase();\r\n                                if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {\r\n                                    itemMatches = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (itemMatches) {\r\n                                out.push(item);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        out = items;\r\n                    }\r\n                    return out;\r\n                };\r\n            })\r\n            .controller('listController', ['$scope', 'RestServices', 'notificationService', function ($scope, RestServices, notificationService) {\r\n                    $scope.initial = 0;\r\n                    $scope.page = 1;\r\n\r\n                    $scope.forward = function () {\r\n                        $scope.initial += 1;\r\n                        $scope.page += 1;\r\n                        $scope.listAutoresponse();\r\n                    };\r\n                    $scope.fastforward = function () {\r\n                        $scope.initial = ($scope.list.total_pages - 1);\r\n                        $scope.page = $scope.list.total_pages;\r\n                        $scope.listAutoresponse();\r\n                    };\r\n                    $scope.backward = function () {\r\n                        $scope.initial -= 1;\r\n                        $scope.page -= 1;\r\n                        $scope.listAutoresponse();\r\n                    };\r\n                    $scope.fastbackward = function () {\r\n                        $scope.initial = 0;\r\n                        $scope.page = 1;\r\n                        $scope.listAutoresponse();\r\n                    };\r\n\r\n                    $scope.listAutoresponse = function () {\r\n                        RestServices.getAllAutoresponder($scope.initial, $scope.filter).then(function (res) {\r\n                            $scope.list = res;\r\n                        });\r\n                    };\r\n\r\n                    $scope.listAutoresponse();\r\n\r\n//-----------------------------------------------\r\n//Filtros\r\n                    $scope.filtername = function () {\r\n                        RestServices.getAllAutoresponder($scope.initial, $scope.filter).then(function (res) {\r\n                            $scope.list = res;\r\n                        });\r\n                    };\r\n\r\n//-----------------------------------------------\r\n//Eliminar\r\n                    $scope.confirmDelete = function (id) {\r\n                        $scope.idAutoresponder = id;\r\n                        openModal();\r\n                    };\r\n\r\n                    $scope.deleteAutoresponder = function () {\r\n                        RestServices.delete($scope.idAutoresponder).then(function (res) {\r\n                            notificationService.warning(res.message);\r\n                            $scope.listAutoresponse();\r\n                        });\r\n                        closeModal();\r\n                    };\r\n\r\n                    $scope.translationDays = function (day) {\r\n                        switch (day) {\r\n                            case 'Monday':\r\n                                day = 'Lunes';\r\n                                break;\r\n                            case 'Tuesday':\r\n                                day = 'Martes';\r\n                                break;\r\n                            case 'Wednesday':\r\n                                day = 'Miercoles';\r\n                                break;\r\n                            case 'Thursday':\r\n                                day = 'Jueves';\r\n                                break;\r\n                            case 'Friday':\r\n                                day = 'Viernes';\r\n                                break;\r\n                            case 'Saturday':\r\n                                day = 'Sabado';\r\n                                break;\r\n                            case 'Sunday':\r\n                                day = 'Domingo';\r\n                                break;\r\n                        }\r\n                        return day;\r\n                    };\r\n\r\n                    $scope.translateClass = function (type) {\r\n                        switch (type) {\r\n                            case 'sms':\r\n                                type = 'Mensaje de Texto';\r\n                                break;\r\n                            case 'mail':\r\n                                type = 'Correo Electronico';\r\n                                break;\r\n                        }\r\n                        return type;\r\n                    }\r\n\r\n                    $scope.previewAutoresponder = function (idAutoresponder) {\r\n                        $('#modal-body-preview').empty();\r\n                        htmlPreviewAutores(idAutoresponder);\r\n                    };\r\n                }])\r\n            .controller('birthdayController', ['$scope', 'RestServices', 'notificationService', '$window', '$stateParams', function ($scope, RestServices, notificationService, $window, $stateParams) {\r\n                    $scope.data = {};\r\n                    $scope.data.status = true;\r\n                    $scope.boolEditors = true;\r\n                    $scope.insertoption = false;\r\n                    $scope.countContactList=\"\";\r\n                    $scope.addressees = [];\r\n                    $scope.addressees.selectdContactlis = [];\r\n                    $scope.addressees.count = 0;\r\n                    $scope.customfield = [];\r\n                    $scope.idcontactlist;\r\n                    $scope.aligncenter = false;\r\n                    $scope.negrita = false;\r\n                    $scope.alignleft = false;\r\n                    $scope.alignright = false;\r\n                    $scope.align=\"\";                \r\n                    $scope.letra=\"\";\r\n                    $scope.services = [];              \r\n                    $scope.nombreletra;\r\n                    $scope.disabled2 = true;\r\n                    $scope.disabled = true;\r\n                    $scope.disabled3 = true;\r\n                    $scope.optionadvance=0;\r\n                    \r\n                    $scope.mixedField = \"\";//almacena el nombre del campo personalizado dinamicamente\r\n                    $scope.idCPmixed = 0;//obtiene el id del campo personalizado al crearlo dinamicamente\r\n                    $scope.resCP = \"\";//guarda la respuesta de la creacion del campo (campos de la tabla)\r\n                    $scope.selectCF = [];//VALORES DE MULTISELECT EVITANDO AUTOSORT\r\n                    $scope.tabs = [];//ARREGLO DE TBS DINAMICOS\r\n                    $scope.textAlign = \"left\";//ALINEACION DE TEXTO\r\n                    $scope.infoLeft = \"\";//CSS BOTON LEFT\r\n                    $scope.infoCenter = \"\";//CSS BOTON CENTER\r\n                    $scope.infoRight = \"\";//CSS BOTON RIGHT\r\n                    var OLDselectCF = [];\r\n                    var idcustomfield = [];\r\n\r\n                    $scope.setAlign = function (prm) {\r\n                        \r\n                        if(prm == 2 && $scope.insertoption == true){\r\n                            if ($('#insertoption').prop('checked')) {\r\n                                $scope.insertoption = true;\r\n                                $scope.optionadvance=1;\r\n                                //si el switch esta en on , se pone el campo en requerido\r\n                                $(\"#services\").attr(\"required\", true);\r\n                                if($scope.addressees.selectdContactlis !== undefined) {\r\n                                    \r\n                                    $scope.countContactList = $scope.addressees.selectdContactlis.length ;\r\n                                    if ($scope.countContactList === 1) {\r\n                                        $('#hiddecontent').css('display','none');\r\n                                        $scope.idcontactlist = $scope.addressees.selectdContactlis[0].idContactlist;\r\n                                        RestServices.findcustomfields($scope.idcontactlist).then(function (data) {\r\n                                            $scope.customfield = data;\r\n                                        }).catch(function (error) {\r\n                                            notificationService.error(error.message);\r\n                                            $scope.insertoption = false;\r\n                                        });\r\n                                        \r\n                                    }else {\r\n                                        $('#hiddecontent').css({\"display\": \"none\"});\r\n                                        notificationService.error(\"Estimado usuario sólo puedes elegir una lista de contacto para esta opción avanzada\");                                        \r\n                                        $scope.insertoption = false;\r\n                                        $scope.optionadvance=0;\r\n                                    }\r\n                                } else {\r\n                                    notificationService.error(\"Estimado usuario debes elegir una lista de contacto\");\r\n                                    $('#hiddecontent').css({\"display\": \"none\"});\r\n                                    $scope.insertoption = false;\r\n                                    $scope.optionadvance=0;\r\n                                }\r\n                                \r\n    \r\n                            }else{\r\n                              $scope.insertoption = false;\r\n                              $('#insertoption').prop('checked', false); \r\n                              $('#hiddecontent').css({\"display\": \"block\"});  \r\n                            }    \r\n                        }else{                            \r\n                            if($('#advancedoptions').prop('checked') == false) {\r\n                                $scope.insertoption = false;\r\n                                 $('#insertoption').prop('checked', false); \r\n                            } \r\n                        }                        \r\n                        \r\n                        if(prm == 2 && $scope.insertoption == false){//OCULTA DE NUEVO EL PANEL DE OPCIONES AVANZADAS Y SETEA TODO EN VACIO\r\n                            $scope.num=\"\";\r\n                            $scope.num2=\"\";\r\n                            $scope.num3=\"\";\r\n                            $scope.disabled = true;\r\n                            $scope.disabled3 = true;\r\n                            $scope.disabled2 = true;\r\n                            $('#selectcolor').val(\"\");\r\n                            $('#result1').css({\"color\": \"black\"});\r\n                            $('#result2').css({\"color\": \"black\"});\r\n                            $('#result3').css({\"color\": \"black\"});\r\n                            $('#result1').css({\"font-size\": \"14px\"});\r\n                            $('#result2').css({\"font-size\": \"14px\"});\r\n                            $('#result3').css({\"font-size\": \"14px\"});\r\n                            $scope.optionadvance=0;                          \r\n                            $('#result3').val(\"\");\r\n                            $('#result2').val(\"\");\r\n                            $('#result1').val(\"\");\r\n                            $('#services').val();\r\n                            $('#services').val(\"\");\r\n                            $('#optionspan').val();\r\n                            $('#hiddecontent').css({\"display\": \"none\"});\r\n                            $scope.selectCF=[];\r\n                            $scope.selectCF.length =0;\r\n                            $scope.negrita=false;\r\n                            $('#negrita').removeClass('info-inverted'); \r\n                            $('.alinear').css({\"text-align\": \"left\"});                            \r\n                            $('#check4').prop('checked', false);\r\n                            $('#check3').prop('checked', false);\r\n                            $('#alignright').removeClass('info-inverted');\r\n                            $('#alignright').addClass('default-inverted');\r\n                            $('#aligncenter').removeClass('info-inverted');\r\n                            $('#aligncenter').addClass('default-inverted');\r\n                            $scope.aligncenter = false;\r\n                            $scope.alignright = false;\r\n                            $('#alignleft').addClass('info-inverted');\r\n                            $scope.aligncenter = false;\r\n                            $scope.alignright = false;\r\n                            $all_LI = $(\"span.spanLC\").find(\"ul\").find(\"li\");\r\n                            $all_LI.remove();\r\n                            $scope.tabs = [];\r\n                            OLDselectCF = [];\r\n                            idcustomfield = [];\r\n                            $scope.selectCF = [];        \r\n                        }\r\n                    };\r\n                    //FUNCION PARA EXTRAER POSICION DE ARRELO QUE CONTIENE UN OBJETO\r\n                    function findWithAttr(array, attr, value) {\r\n                        for(var i = 0; i < array.length; i += 1) {\r\n                            if(array[i][attr] === value) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    }\r\n                    //FUNCION PARA GUARDAR EL CAMPO PERSONALIZADO COMBINADO AUTOMATICAMENTE\r\n                    $scope.saveCP = function(name){\r\n                        var data = {\r\n                            id : $scope.idCPmixed,\r\n                            name : name,\r\n                            idContactList : $scope.idcontactlist\r\n                        };\r\n                        RestServices.addcustomfield(data).then(function (res) {\r\n                            $scope.idCPmixed = res.customfield.idCustomfield;\r\n                            $scope.resCP = res.customfield;\r\n                            //notificationService.success(res.message);\r\n                      }).catch(function (res) {\r\n                        $scope.btndisabled = false;\r\n                        notificationService.error(res.message);\r\n                      });\r\n                    };\r\n                                                          \r\n                    //Funcion escoger Campos personalizados (maximo 3)\r\n                    $scope.limitfields = function (num){//NUM ES 1 PARA CREACION Y 2 PARA EDICION, ESTO CON EL FIN DE CONTROLAR LA CREACION DE CFMIXED\r\n                        $scope.mixedField = \"\";\r\n                        var str = \"\", x = 0;\r\n                        \r\n                        if($scope.services){\r\n                            if($scope.services.length > 0){\r\n                                                   \r\n                                //VALIDAR EL NUMERO DE selectCF Y EL NUMERO DE TABS SI selectCF ES MENOR A TABS ELIMINAR EL TAB INDICADO SI NO AGREGAR\r\n                                if($scope.services.length < $scope.tabs.length){\r\n                                    \r\n                                    //BUSCAMOS LA DIFERENCIA ENTRE LOS CF SELECCINADOS Y LOS QUE ESTABAN ANTES\r\n                                    var difference = OLDselectCF.filter(z => !$scope.services.includes(z));\r\n                                    //EN CUSTOMFIELD (DATA DE SQL) BUSCAMOS EL NOMBRE SEGUN EL ID DEL CF Y LO ELIMINAMOS DE LOS TABS\r\n                                    var searchCustomfield = findWithAttr(idcustomfield,'idcustomfield',difference[0]);\r\n                                    $scope.tabs.splice(searchCustomfield, 1);\r\n                                    //TAMBIEN ELIMINAMOS LA POSICION DEL ARREGLO CON LOS CF\r\n                                    $scope.selectCF.splice(searchCustomfield, 1);\r\n                                    \r\n                                    //ACTUALIZAMOS LA VARIABLE VIEJA CON LA NUEVA INFO SELECCIONADA\r\n                                    OLDselectCF = $scope.services;\r\n                                    \r\n                                    //RECORREMOS LOS TABS PARA ACTUALIZAR CFMIXED\r\n                                    for(var i=0; i<$scope.tabs.length; i++){\r\n                                        str += $scope.tabs[i].nameService+\".\";\r\n                                    }\r\n                                    \r\n                                    //ENVIAMOS LAS VARIABLES DE CFMIXED\r\n                                    var concat = str.substring(0, str.length-1);\r\n                                    $scope.mixedField = \"%%\"+concat.toUpperCase()+\"%%\";\r\n                                    \r\n                                }else{\r\n                                    //AGREGAR EL ULTIMO SELECCIONADO PARA QUE EL SORT AUTOMATICO DEL MULTISELECT NO AFECTE EL ORDEN\r\n                                    var diff = $scope.services.filter(i => !$scope.selectCF.includes(i));\r\n                                    if(diff[0]){\r\n                                       $scope.selectCF.push(diff[0]); \r\n                                    }\r\n                                    idcustomfield = [];\r\n                                    //BUSCAMOS EN EL ARRELO CUSTOMFIELD EL ALTERNATIVE NAME SEGUN EL SELECCIONADO, AGREGAMOS EL NOMBRE EN CFMIXED\r\n                                    for(var i=0; i<$scope.selectCF.length; i++){\r\n                                        //VALIDAMOS LOS CAMPOS POR DEFECTOS QUE CONTIENEN LOS CONTACTOS\r\n                                        if($scope.selectCF[i] == 0){\r\n                                            str += \"NOMBRE\"+\".\";\r\n                                            idcustomfield.push({idcustomfield : \"0\"});\r\n                                        }else if($scope.selectCF[i] == 1){\r\n                                            str += \"APELLIDO\"+\".\";\r\n                                            idcustomfield.push({idcustomfield : \"1\"});\r\n                                        }else if($scope.selectCF[i] == 2){\r\n                                            str += \"FECHA_NACIMIENTO\"+\".\";\r\n                                            idcustomfield.push({idcustomfield : \"2\"});\r\n                                        }else{\r\n                                            x = findWithAttr($scope.customfield,'idCustomfield',$scope.selectCF[i]);\r\n                                            str += $scope.customfield[x].alternativename+\".\";\r\n                                            idcustomfield.push({idcustomfield : $scope.customfield[x].idCustomfield});\r\n                                        }\r\n                                        \r\n                                    }\r\n                                    \r\n                                    //BUSCAMOS LA DIFERENCIA ENTRE LA SELECCION VIEJA Y LA NUEVA \r\n                                    var difference = $scope.selectCF.filter(z => !OLDselectCF.includes(z));\r\n                                    \r\n                                    if(difference[0]){\r\n                                       //EN CUSTOMFIELD (DATA DE SQL) BUSCAMOS EL NOMBRE SEGUN EL ID DEL CF Y LO ENVIAMOS A LOS TABS\r\n                                        var searchCustomfield = findWithAttr($scope.customfield,'idCustomfield',difference[0]);\r\n                                        $scope.tabs.push({idcustomfield : diff[0], nameService:$scope.customfield[searchCustomfield].name, disabled: false});\r\n                                    }\r\n                                        \r\n                                    \r\n                                    //ACTUALIZAMOS LA VARIABLE VIEJA CON LA NUEVA INFO SELECCIONADA\r\n                                    OLDselectCF.push(diff[0]);\r\n                                    \r\n                                    //ENVIAMOS LAS VARIABLES DE CFMIXED\r\n                                    var concat = str.substring(0, str.length-1);\r\n                                    $scope.mixedField = \"%%\"+concat.toUpperCase()+\"%%\";\r\n                                }\r\n                                if(num == 1){\r\n                                    $scope.saveCP($scope.mixedField);\r\n                                }\r\n                            }else{\r\n                                //SI ENTRA AQUI ES PORQUE NO HAY NINGUN CF SELECCIONADO EN EL ELEMENTO SELECT ENTONCES VACIAMOS LAS VARIABLES DINAMICAS\r\n                                $scope.tabs = [];\r\n                                OLDselectCF = [];\r\n                                idcustomfield = [];\r\n                                $scope.selectCF = [];\r\n                            }\r\n                        }else{\r\n                            //SI ENTRA AQUI ES PORQUE NO HAY NINGUN CF SELECCIONADO EN EL ELEMENTO SELECT ENTONCES VACIAMOS LAS VARIABLES DINAMICAS\r\n                            $scope.tabs = [];\r\n                            OLDselectCF = [];\r\n                            idcustomfield = [];\r\n                            $scope.selectCF = [];\r\n                        }\r\n                         \r\n                    };\r\n                    \r\n                    //CAMBIAR TAMAÑO DE LA LETRA RECIBIENDO EL INDICE Y ATRIBUTOS DE INPUT EN ARREGLO DE TABS\r\n                    $scope.changeSize = function (index, value) {\r\n                        $scope.tabs[index].fontSize = value.selectedOption;\r\n                    };\r\n\r\n                    //CAMBIAR COLOR DE LA LETRA RECIBIENDO EL INDICE Y ATRIBUTOS DE INPUT EN ARREGLO DE TABS\r\n                    $scope.changeColor = function (index, value) {  \r\n                        $scope.tabs[index].color = value.selectColor;                \r\n                    };\r\n                                        \r\n                    //CAMBIAR ESTILO DE LA LETRA RECIBIENDO EL INDICE Y ATRIBUTOS DE INPUT EN ARREGLO DE TABS\r\n                    $scope.changeStyle = function (index, value) {                    \r\n\r\n                        if(value.bold){\r\n                            $scope.tabs[index].fontWeight = \"bold\";\r\n                            $scope.tabs[index].boldClass = \"info-inverted\";\r\n                        }else{\r\n                            $scope.tabs[index].fontWeight = \"\";\r\n                            $scope.tabs[index].boldClass = \"\";\r\n                        }\r\n                        \r\n                        if(value.italics){\r\n                            $scope.tabs[index].fontStyle = \"italic\";\r\n                            $scope.tabs[index].italicsClass = \"info-inverted\";\r\n                        }else{\r\n                            $scope.tabs[index].fontStyle = \"\";\r\n                            $scope.tabs[index].italicsClass = \"\";\r\n                        }\r\n                        \r\n                        if(value.underlined){\r\n                            $scope.tabs[index].textDecoration = \"underline\";\r\n                            $scope.tabs[index].underlinedClass = \"info-inverted\";\r\n                        }else{\r\n                            $scope.tabs[index].textDecoration = \"\";\r\n                            $scope.tabs[index].underlinedClass = \"\";\r\n                        }             \r\n                        \r\n                    };\r\n                    \r\n                    //CAMBIAR FUENTE DE LA LETRA RECIBIENDO EL INDICE Y ATRIBUTOS DE INPUT EN ARREGLO DE TABS\r\n                    $scope.changeFont = function (index, value){\r\n                        $scope.tabs[index].fontFamily = value.fontFamily; \r\n                    };\r\n                    \r\n                    //CAMBIAR ALINEACION DE LA LETRA RECIBIENDO EL INDICE Y ATRIBUTOS DE INPUT EN ARREGLO DE TABS\r\n                    $scope.alignText =  function (value){\r\n                        \r\n                        if(value.left){\r\n                            $scope.textAlign = \"left\";\r\n                            $scope.infoLeft = \"info-inverted\";\r\n                        }else if(value.center){\r\n                            $scope.textAlign = \"center\";\r\n                            $scope.infoCenter = \"info-inverted\";\r\n                        }else if(value.right){\r\n                            $scope.textAlign = \"right\";\r\n                            $scope.infoRight = \"info-inverted\";\r\n                        }else{\r\n                            $scope.textAlign = \"\";\r\n                            $scope.infoLeft = \"\";\r\n                            $scope.infoCenter = \"\";\r\n                            $scope.infoRight = \"\";\r\n                        }\r\n                        \r\n                    };\r\n                    $scope.serviceSelected = [];          \r\n                    if ($stateParams.id) {\r\n                        RestServices.getAutoresponder($stateParams.id).then(function (res) {\r\n                            $scope.data = res.autoresponder;\r\n                            $(\"#valueDatepicker\").val(res.autoresponder.time);\r\n                            $scope.data.senderNameSelect = res.autoresponder.idNameSender;\r\n                            $scope.data.senderMailSelect = res.autoresponder.idEmailsender;\r\n                            $scope.data.status = (res.autoresponder.status == 1);\r\n                            if (res.autoresponder.target) {\r\n                                $scope.addressees.showstep1 = false;\r\n                                var json = jQuery.parseJSON(res.autoresponder.target);\r\n                                $scope.addressees.count = res.autoresponder.quantitytarget;\r\n                                $scope.addressees.condition = json.condition;\r\n                                $scope.filters = json.filters;\r\n                                if (json.type == \"contactlist\") {\r\n                                    $scope.addressees.showContactlist = false;\r\n                                    $scope.addressees.selectdContactlis = json.contactlists;\r\n                                    $scope.getAllContactlist();\r\n\r\n                                } else if (json.type == \"segment\") {\r\n                                    $scope.addressees.showSegment = false;\r\n                                    $scope.addressees.selectdSegment = json.segment;\r\n                                    $scope.getAllSegment();\r\n                                }\r\n                            }\r\n\r\n                            //RECUPERAMOS LA INFORMACION DE OPTIONADVANCE\r\n                            if(res.autoresponder.optionAdvance == 1){\r\n                                $scope.optionadvance = res.autoresponder.optionAdvance;\r\n                                $scope.advancedoptions = true;\r\n                                $scope.insertoption = true;\r\n                                $('#advancedoptions').prop('checked', true);\r\n                                $('#insertoption').prop('checked', true);\r\n                                $scope.setAlign(2);\r\n                            }\r\n                            \r\n                            //RECUPERAMOS LA INFORMACION DE CUSTOMFIELDS Y LA RECORREMOS\r\n                            if(res.autoresponder.customFields){                            \r\n                                var obj= JSON.parse(res.autoresponder.customFields);\r\n\r\n                                Object.keys(obj).forEach(function (key) {\r\n                                    var value = obj[key];\r\n                                    var indiceCF =0;\r\n                                    \r\n                                    if(key == \"customFields\"){\r\n                                        var valueArrCF = value;\r\n                                        RestServices.findcustomfields($scope.idcontactlist).then(function (data) {\r\n                                            $scope.customfield = data;\r\n                                            for (var x=Object.keys(valueArrCF),i=0;i<x.length,keyCF=x[i],valueCF=valueArrCF[keyCF];i++){\r\n                                                \r\n                                                $scope.services.push(keyCF);\r\n                                                $scope.limitfields(2);\r\n                                                //INSERTAMOS LOS VALORES DE TABS DESPUES DE CREAR LA POSICION EN LA FUNCION limitfields\r\n                                                $scope.tabs[i].idcustomfield = keyCF;\r\n                                                $scope.tabs[i].fontSize = valueCF.fontSize;\r\n                                                $scope.tabs[i].color = valueCF.color;\r\n                                                $scope.tabs[i].fontWeight = valueCF.fontWeight;\r\n                                                $scope.tabs[i].fontStyle = valueCF.fontStyle;\r\n                                                $scope.tabs[i].textDecoration = valueCF.textDecoration;\r\n                                                $scope.tabs[i].fontFamily = valueCF.fontFamily;\r\n\r\n                                            }\r\n                                            \r\n                                            $(\"#services\").val($scope.services).trigger(\"change.select2\");\r\n                                                                            \r\n                                        }).catch(function (error) {\r\n                                            notificationService.error(error.message);\r\n                                            $scope.insertoption = false;\r\n                                        });\r\n                                        \r\n                                    }\r\n                                    \r\n                                    if(key == \"idCFmixed\"){\r\n                                        $scope.idCPmixed = value;\r\n                                    }\r\n                                    \r\n                                    if(key == \"textAlign\"){\r\n                                        \r\n                                        $scope.textAlign = value;\r\n\r\n                                        if(value == \"left\"){\r\n                                            $scope.textAlign = \"left\";\r\n                                            $scope.infoLeft = \"info-inverted\";\r\n                                        }else if(value == \"center\"){\r\n                                            $scope.textAlign = \"center\";\r\n                                            $scope.infoCenter = \"info-inverted\";\r\n                                        }else if(value == \"right\"){\r\n                                            $scope.textAlign = \"right\";\r\n                                            $scope.infoRight = \"info-inverted\";\r\n                                        }\r\n                                        \r\n                                    }\r\n                                    \r\n                                });\r\n                                \r\n                            }\r\n\r\n                            if (!res.autoresponder.autorespondercontent) {\r\n                                $scope.boolEditors = true;\r\n                            } else {\r\n                                $scope.boolEditors = false;\r\n                                htmlPreview($stateParams.id);\r\n                                $scope.getUrl = res.autoresponder.autorespondercontent.url;\r\n                            }\r\n                            \r\n                        });\r\n                    }\r\n\r\n\r\n                    $scope.addressees = {selectdContactlis: []};\r\n                    $scope.addressees = {selectdSegment: []};\r\n                    $scope.addressees.showSegment = true;\r\n                    $scope.addressees.showstep1 = true;\r\n                    $scope.addressees.showContactlist = true;\r\n\r\n\r\n                    $('#dateInitial').datetimepicker({\r\n                        format: 'hh:mm',\r\n                        language: 'es'\r\n                    }).on('changeDate', function (ev) {\r\n                        $scope.$apply();\r\n                    });\r\n                    \r\n                    $scope.saveAutoresponder = function () {/*************************************************************************/\r\n                        \r\n                        //VALIDAMOS QUE SE HAYA ELEGIDO UNA PLANTILLA ANTES DE GUARDAR LA AUTORESPUESTA\r\n                        if($scope.boolEditors == true){\r\n                            notificationService.error(\"Por favor seleccione una plantilla.\");\r\n                            return;\r\n                        }\r\n                        \r\n                        var template = $('#frame').contents().find('body').html();\r\n                        var patt = new RegExp($scope.mixedField);\r\n                        var searchSTR = patt.test(template);\r\n                        if(!searchSTR){\r\n                            notificationService.error(\"Por favor ingresa el nombre del campo personalizado en la plantilla.\");\r\n                            return;\r\n                        }\r\n                        \r\n                         \r\n                        if($scope.optionadvance != 0 ){\r\n                            \r\n                            if($scope.services.length >= 2){\r\n                                \r\n                                $scope.data.optionAdvance = $scope.optionadvance;\r\n                                \r\n                                if(!$scope.data.customFields){//ENTRA CUANDO ESTA CREANDO\r\n                                    $scope.data.customFields = [];\r\n                                }else{//ENTRA CUANDO ESTA EDITANDO\r\n                                    $scope.data.customFields = [];\r\n                                }\r\n                                \r\n                                //RECORREMOS EL ARREGLO DE TABS PARA EXTRAER LA INFO NECESARIA PARA EL JSON\r\n                                for(var i=0; i < $scope.tabs.length; i++){\r\n    \r\n                                    //SI EL TAMAÑO DE FUENTE NO FUE SELECCIONADO PONEMOS POR DEFECTO 12\r\n                                    if(!$scope.tabs[i].fontSize){\r\n                                        $scope.tabs[i].fontSize = \"12\";\r\n                                    }\r\n                                    //SI EL COLOR NO FUE SELECCIONADO PONEMOS POR DEFECTO NEGRO\r\n                                    if(!$scope.tabs[i].color){\r\n                                        $scope.tabs[i].color = \"#000000\";\r\n                                    }\r\n                                    //SI NEGRITA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontWeight){\r\n                                        $scope.tabs[i].fontWeight = \"unset\";\r\n                                    }\r\n                                    //SI CURSIVA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontStyle){\r\n                                        $scope.tabs[i].fontStyle = \"unset\";\r\n                                    }\r\n                                    //SI SUBRAYADO NO FUE SELECCIONADO PONEMOS POR DEFECTO NONE\r\n                                    if(!$scope.tabs[i].textDecoration){\r\n                                        $scope.tabs[i].textDecoration = \"none\";\r\n                                    }\r\n                                    //SI TIPO DE LETRA NO FUE SELECCIONADO PONEMOS POR DEFECTO INHERIT\r\n                                    if(!$scope.tabs[i].fontFamily){\r\n                                        $scope.tabs[i].fontFamily = \"inherit\";\r\n                                    }\r\n                                    //$scope.tabs[i].idcustomfield\r\n                                    $scope.data.customFields.push({\r\n                                            \r\n                                            idCF : $scope.tabs[i].idcustomfield,\r\n                                            fontSize: $scope.tabs[i].fontSize, \r\n                                            color: $scope.tabs[i].color, \r\n                                            fontWeight: $scope.tabs[i].fontWeight, \r\n                                            fontStyle: $scope.tabs[i].fontStyle,\r\n                                            textDecoration: $scope.tabs[i].textDecoration,\r\n                                            fontFamily: $scope.tabs[i].fontFamily\r\n                                            \r\n                                    });\r\n                                }\r\n                                $scope.data.textAlign = $scope.textAlign;\r\n                                                                \r\n                                if(!$scope.resCP && $scope.idCPmixed == 0){\r\n                                    $scope.data.idCFmix = \"\";\r\n                                }\r\n                                if(!$scope.resCP && $scope.idCPmixed != 0){\r\n                                    $scope.data.idCFmix = $scope.idCPmixed;\r\n                                }else{\r\n                                    $scope.data.idCFmix = $scope.resCP.idCustomfield;\r\n                                }   \r\n                            }else{\r\n                                notificationService.error(\"Para crear autrespuesta con opciones avanzadas debe seleccionar al menos 2 campos personalizados.\");\r\n                                return;\r\n                            }\r\n                            \r\n                        }else{\r\n                            $scope.data.customFields = null;\r\n                        }\r\n                        \r\n                         \r\n                        $scope.data.addressees = $scope.addressees; \r\n                        $scope.data.time = $(\"#valueDatepicker\").val();\r\n                        $scope.data.filters = $scope.filters;\r\n                        $scope.data.condition = $scope.addressees.condition;\r\n                        var idAutoresponder = $stateParams.id ? $stateParams.id : 0;\r\n\r\n                        RestServices.createAutoresponder($scope.data, idAutoresponder).then(function (res) {\r\n                            notificationService.success(res['message']);\r\n                            $window.location.href = fullUrlBase + templateBase + \"#/\";\r\n                        }).catch(function (error) {\r\n                            notificationService.error(error.message);\r\n                            return;\r\n                        });\r\n                    };\r\n\r\n                    $scope.clearSelect = function () {\r\n                        $scope.filters = [];\r\n                        $scope.addressees.count = 0;\r\n                        $scope.disabledContactlist = false;\r\n                        $scope.disabledSegment = false;\r\n                        $scope.addressees.selectdContactlis = \"\";\r\n                        $scope.addressees.selectdSegment = \"\";\r\n                        $scope.insertoption=false;\r\n                    };\r\n                    $scope.getContactlist = function () {\r\n                        $scope.addressees = {selectdSegment: []};\r\n                        $scope.segments = [];\r\n                        $scope.filters = [];\r\n                        $scope.contactlists = [];\r\n                        $scope.addressees.showstep1 = false;\r\n                        $scope.addressees.count = 0;\r\n                        $scope.addressees.showSegment = true;\r\n                        $scope.addressees.showContactlist = false;\r\n                        $scope.prueba = undefined;  \r\n                        $scope.getAllContactlist();\r\n                        $scope.getAllSegment();\r\n                    };\r\n                    $scope.getAllContactlist = function () {\r\n                        RestServices.getContactlist().then(function (data) {\r\n                            $scope.contactlists = data;\r\n                        });\r\n                    };\r\n                    $scope.getSegment = function () {\r\n                        $scope.addressees = {selectdContactlis: []};\r\n                        $scope.segments = [];\r\n                        $scope.contactlists = [];\r\n                        $scope.filters = [];\r\n                        $scope.addressees.showstep1 = false;\r\n                        $scope.addressees.count = 0;\r\n                        $scope.prueba = undefined;\r\n                        $scope.prueba2 = undefined;\r\n                        $scope.addressees.selectdContactlis = [];\r\n                        $scope.addressees.selectdSegment = [];\r\n                        $scope.addressees.showSegment = false;\r\n                        $scope.addressees.showContactlist = true;\r\n                        $scope.getAllSegment();\r\n                        $scope.getAllContactlist();\r\n                    };\r\n\r\n                    $scope.getAllSegment = function () {\r\n                        RestServices.getSegment().then(function (data) {\r\n                            $scope.segments = data;\r\n                        });\r\n                    };\r\n\r\n                    $scope.selectAction = function () {\r\n                        $scope.countContacts(\"contactlist\");\r\n                    };\r\n\r\n                    $scope.selectActionSegment = function () {\r\n                        $scope.countContacts(\"segment\");\r\n                    };\r\n\r\n                    $scope.allSegment = function () {\r\n                        $scope.disabledSegment = true;\r\n                        $scope.addressees.selectdSegment = $scope.segments;\r\n                        $scope.countContacts(\"segment\");\r\n                    };\r\n\r\n                    $scope.allContactlist = function () {\r\n                        $scope.disabledContactlist = true;\r\n                        $scope.addressees.selectdContactlis = $scope.contactlists;\r\n                        $scope.countContacts(\"contactlist\");\r\n                    };\r\n\r\n                    $scope.countContacts = function (type) {\r\n                        $scope.addressees.count = 0;\r\n                        var data = {\r\n                            type: type,\r\n                            segment: $scope.addressees.selectdSegment,\r\n                            contactlist: $scope.addressees.selectdContactlis,\r\n                            filters: $scope.filters,\r\n                            condition: $scope.addressees.condition,\r\n                            idMail: $scope.idMail\r\n                        };\r\n                        RestServices.countContact(data).then(function (data) {\r\n                            $scope.addressees.count = data;\r\n                        });\r\n                    };\r\n\r\n                    function getemailname() {\r\n                        RestServices.getemailname().then(function (res) {\r\n                            $scope.emailname = res;\r\n                        });\r\n                    }\r\n\r\n                    function getemailsend() {\r\n                        RestServices.getemailsend().then(function (res) {\r\n                            $scope.emailsend = res;\r\n                        });\r\n                    }\r\n\r\n                    getemailname();\r\n                    getemailsend();\r\n\r\n                    $scope.showInputName = false;\r\n                    $scope.showSelectName = true;\r\n                    $scope.showIconsName = true;\r\n                    $scope.showIconsSaveName = false;\r\n\r\n                    $scope.changeStatusInputName = function () {\r\n                        if (!$scope.showInputName) {\r\n                            $scope.showInputName = true;\r\n                            $scope.showSelectName = false;\r\n                            $scope.showIconsName = false;\r\n                            $scope.showIconsSaveName = true;\r\n                        } else {\r\n                            $scope.showInputName = false;\r\n                            $scope.showSelectName = true;\r\n                            $scope.showIconsName = true;\r\n                            $scope.showIconsSaveName = false;\r\n                        }\r\n                    };\r\n\r\n                    $scope.showInputEmail = false;\r\n                    $scope.showSelectEmail = true;\r\n                    $scope.showIconsEmail = true;\r\n                    $scope.showIconsSaveEmail = false;\r\n\r\n                    $scope.changeStatusInputEmail = function () {\r\n                        if (!$scope.showInputEmail) {\r\n                            $scope.showInputEmail = true;\r\n                            $scope.showSelectEmail = false;\r\n                            $scope.showIconsEmail = false;\r\n                            $scope.showIconsSaveEmail = true;\r\n                        } else {\r\n                            $scope.showInputEmail = false;\r\n                            $scope.showSelectEmail = true;\r\n                            $scope.showIconsEmail = true;\r\n                            $scope.showIconsSaveEmail = false;\r\n                        }\r\n                    };\r\n\r\n                    $scope.saveName = function () {\r\n                        var data = {name: $scope.senderName};\r\n\r\n                        RestServices.addEmailName(data).then(function (res) {\r\n                            notificationService.success(res['msg']);\r\n                            $scope.senderName = \"\";\r\n                            getemailname();\r\n                            $scope.changeStatusInputName();\r\n                            $scope.data.senderNameSelect = res['idNameSender'];\r\n                        });\r\n                    };\r\n\r\n                    $scope.saveEmail = function () {\r\n                        var data = {email: $scope.senderMail};\r\n\r\n                        RestServices.addEmailSender(data).then(function (res) {\r\n                            notificationService.success(res['msg']);\r\n                            $scope.senderMail = \"\";\r\n                            getemailsend();\r\n                            $scope.changeStatusInputEmail();\r\n                            $scope.data.senderMailSelect = res['idEmailsender'];\r\n                        });\r\n                    };\r\n\r\n                    $scope.openMailTemplate = function () {\r\n                        \r\n                        if($scope.optionadvance != 0 ){\r\n                            \r\n                            if($scope.services.length >= 2){\r\n                                \r\n                                $scope.data.optionAdvance = $scope.optionadvance;\r\n                                \r\n                                if(!$scope.data.customFields){//ENTRA CUANDO ESTA CREANDO\r\n                                    $scope.data.customFields = [];\r\n                                }else{//ENTRA CUANDO ESTA EDITANDO\r\n                                    $scope.data.customFields = [];\r\n                                }\r\n                                \r\n                                //RECORREMOS EL ARREGLO DE TABS PARA EXTRAER LA INFO NECESARIA PARA EL JSON\r\n                                for(var i=0; i < $scope.tabs.length; i++){\r\n                        \r\n                                    //SI EL TAMAÑO DE FUENTE NO FUE SELECCIONADO PONEMOS POR DEFECTO 12\r\n                                    if(!$scope.tabs[i].fontSize){\r\n                                        $scope.tabs[i].fontSize = \"12\";\r\n                                    }\r\n                                    //SI EL COLOR NO FUE SELECCIONADO PONEMOS POR DEFECTO NEGRO\r\n                                    if(!$scope.tabs[i].color){\r\n                                        $scope.tabs[i].color = \"#000000\";\r\n                                    }\r\n                                    //SI NEGRITA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontWeight){\r\n                                        $scope.tabs[i].fontWeight = \"unset\";\r\n                                    }\r\n                                    //SI CURSIVA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontStyle){\r\n                                        $scope.tabs[i].fontStyle = \"unset\";\r\n                                    }\r\n                                    //SI SUBRAYADO NO FUE SELECCIONADO PONEMOS POR DEFECTO NONE\r\n                                    if(!$scope.tabs[i].textDecoration){\r\n                                        $scope.tabs[i].textDecoration = \"none\";\r\n                                    }\r\n                                    //SI TIPO DE LETRA NO FUE SELECCIONADO PONEMOS POR DEFECTO INHERIT\r\n                                    if(!$scope.tabs[i].fontFamily){\r\n                                        $scope.tabs[i].fontFamily = \"inherit\";\r\n                                    }\r\n                                    //$scope.tabs[i].idcustomfield\r\n                                    $scope.data.customFields.push({\r\n                                            \r\n                                            idCF : $scope.tabs[i].idcustomfield,\r\n                                            fontSize: $scope.tabs[i].fontSize, \r\n                                            color: $scope.tabs[i].color, \r\n                                            fontWeight: $scope.tabs[i].fontWeight, \r\n                                            fontStyle: $scope.tabs[i].fontStyle,\r\n                                            textDecoration: $scope.tabs[i].textDecoration,\r\n                                            fontFamily: $scope.tabs[i].fontFamily\r\n                                            \r\n                                    });\r\n                                }\r\n                                $scope.data.textAlign = $scope.textAlign;\r\n                                if(!$scope.resCP && $scope.idCPmixed == 0){\r\n                                    $scope.data.idCFmix = \"\";\r\n                                }\r\n                                if(!$scope.resCP && $scope.idCPmixed != 0){\r\n                                    $scope.data.idCFmix = $scope.idCPmixed;\r\n                                }else{\r\n                                    $scope.data.idCFmix = $scope.resCP.idCustomfield;\r\n                                }  \r\n                            }else{\r\n                                notificationService.error(\"Para crear autrespuesta con opciones avanzadas debe seleccionar al menos 2 campos personalizados.\");\r\n                                return;\r\n                            }\r\n                            \r\n                        }else{\r\n                            $scope.data.customFields = null;\r\n                        }\r\n                        \r\n                        $scope.data.addressees = $scope.addressees;\r\n                        $scope.data.filters = $scope.filters;\r\n                        $scope.data.condition = $scope.addressees.condition;\r\n                        $scope.data.time = $(\"#valueDatepicker\").val();\r\n                        var idAutoresponder = $stateParams.id ? $stateParams.id : 0;\r\n\r\n                        RestServices.createAutoresponder($scope.data, idAutoresponder).then(function (res) {\r\n                            $window.location.href = fullUrlBase + 'mailtemplate#/selectautoresponder/' + res.autoresponder.idAutoresponder;\r\n                        });\r\n                    };\r\n\r\n                    $scope.openContentEditor = function () {\r\n                        \r\n                        if($scope.optionadvance != 0 ){\r\n                            \r\n                            if($scope.services.length >= 2){\r\n                                \r\n                                $scope.data.optionAdvance = $scope.optionadvance;\r\n                                \r\n                                if(!$scope.data.customFields){//ENTRA CUANDO ESTA CREANDO\r\n                                    $scope.data.customFields = [];\r\n                                }else{//ENTRA CUANDO ESTA EDITANDO\r\n                                    $scope.data.customFields = [];\r\n                                }\r\n                                \r\n                                //RECORREMOS EL ARREGLO DE TABS PARA EXTRAER LA INFO NECESARIA PARA EL JSON\r\n                                for(var i=0; i < $scope.tabs.length; i++){\r\n                        \r\n                                    //SI EL TAMAÑO DE FUENTE NO FUE SELECCIONADO PONEMOS POR DEFECTO 12\r\n                                    if(!$scope.tabs[i].fontSize){\r\n                                        $scope.tabs[i].fontSize = \"12\";\r\n                                    }\r\n                                    //SI EL COLOR NO FUE SELECCIONADO PONEMOS POR DEFECTO NEGRO\r\n                                    if(!$scope.tabs[i].color){\r\n                                        $scope.tabs[i].color = \"#000000\";\r\n                                    }\r\n                                    //SI NEGRITA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontWeight){\r\n                                        $scope.tabs[i].fontWeight = \"unset\";\r\n                                    }\r\n                                    //SI CURSIVA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontStyle){\r\n                                        $scope.tabs[i].fontStyle = \"unset\";\r\n                                    }\r\n                                    //SI SUBRAYADO NO FUE SELECCIONADO PONEMOS POR DEFECTO NONE\r\n                                    if(!$scope.tabs[i].textDecoration){\r\n                                        $scope.tabs[i].textDecoration = \"none\";\r\n                                    }\r\n                                    //SI TIPO DE LETRA NO FUE SELECCIONADO PONEMOS POR DEFECTO INHERIT\r\n                                    if(!$scope.tabs[i].fontFamily){\r\n                                        $scope.tabs[i].fontFamily = \"inherit\";\r\n                                    }\r\n                                    //$scope.tabs[i].idcustomfield\r\n                                    $scope.data.customFields.push({\r\n                                            \r\n                                            idCF : $scope.tabs[i].idcustomfield,\r\n                                            fontSize: $scope.tabs[i].fontSize, \r\n                                            color: $scope.tabs[i].color, \r\n                                            fontWeight: $scope.tabs[i].fontWeight, \r\n                                            fontStyle: $scope.tabs[i].fontStyle,\r\n                                            textDecoration: $scope.tabs[i].textDecoration,\r\n                                            fontFamily: $scope.tabs[i].fontFamily\r\n                                            \r\n                                    });\r\n                                }\r\n                                $scope.data.textAlign = $scope.textAlign;\r\n                                if(!$scope.resCP && $scope.idCPmixed == 0){\r\n                                    $scope.data.idCFmix = \"\";\r\n                                }\r\n                                if(!$scope.resCP && $scope.idCPmixed != 0){\r\n                                    $scope.data.idCFmix = $scope.idCPmixed;\r\n                                }else{\r\n                                    $scope.data.idCFmix = $scope.resCP.idCustomfield;\r\n                                }   \r\n                            }else{\r\n                                notificationService.error(\"Para crear autrespuesta con opciones avanzadas debe seleccionar al menos 2 campos personalizados.\");\r\n                                return;\r\n                            }\r\n                            \r\n                        }else{\r\n                            $scope.data.customFields = null;\r\n                        }\r\n                        \r\n                        $scope.data.addressees = $scope.addressees;\r\n                        $scope.data.filters = $scope.filters;\r\n                        $scope.data.condition = $scope.addressees.condition;\r\n                        $scope.data.time = $(\"#valueDatepicker\").val();\r\n                        var idAutoresponder = $stateParams.id ? $stateParams.id : 0;\r\n\r\n                        RestServices.createAutoresponder($scope.data, idAutoresponder).then(function (res) {\r\n                            $window.location.href = fullUrlBase + templateBase + '/contenteditor/' + res.autoresponder.idAutoresponder;\r\n                        });\r\n                    };\r\n\r\n                    $scope.openEditorHtml = function () {\r\n                        \r\n                        if($scope.optionadvance != 0 ){\r\n                            \r\n                            if($scope.services.length >= 2){\r\n                                \r\n                                $scope.data.optionAdvance = $scope.optionadvance;\r\n                                \r\n                                if(!$scope.data.customFields){//ENTRA CUANDO ESTA CREANDO\r\n                                    $scope.data.customFields = [];\r\n                                }else{//ENTRA CUANDO ESTA EDITANDO\r\n                                    $scope.data.customFields = [];\r\n                                }\r\n                                \r\n                                //RECORREMOS EL ARREGLO DE TABS PARA EXTRAER LA INFO NECESARIA PARA EL JSON\r\n                                for(var i=0; i < $scope.tabs.length; i++){\r\n                        \r\n                                    //SI EL TAMAÑO DE FUENTE NO FUE SELECCIONADO PONEMOS POR DEFECTO 12\r\n                                    if(!$scope.tabs[i].fontSize){\r\n                                        $scope.tabs[i].fontSize = \"12\";\r\n                                    }\r\n                                    //SI EL COLOR NO FUE SELECCIONADO PONEMOS POR DEFECTO NEGRO\r\n                                    if(!$scope.tabs[i].color){\r\n                                        $scope.tabs[i].color = \"#000000\";\r\n                                    }\r\n                                    //SI NEGRITA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontWeight){\r\n                                        $scope.tabs[i].fontWeight = \"unset\";\r\n                                    }\r\n                                    //SI CURSIVA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontStyle){\r\n                                        $scope.tabs[i].fontStyle = \"unset\";\r\n                                    }\r\n                                    //SI SUBRAYADO NO FUE SELECCIONADO PONEMOS POR DEFECTO NONE\r\n                                    if(!$scope.tabs[i].textDecoration){\r\n                                        $scope.tabs[i].textDecoration = \"none\";\r\n                                    }\r\n                                    //SI TIPO DE LETRA NO FUE SELECCIONADO PONEMOS POR DEFECTO INHERIT\r\n                                    if(!$scope.tabs[i].fontFamily){\r\n                                        $scope.tabs[i].fontFamily = \"inherit\";\r\n                                    }\r\n                                    //$scope.tabs[i].idcustomfield\r\n                                    $scope.data.customFields.push({\r\n                                            \r\n                                            idCF : $scope.tabs[i].idcustomfield,\r\n                                            fontSize: $scope.tabs[i].fontSize, \r\n                                            color: $scope.tabs[i].color, \r\n                                            fontWeight: $scope.tabs[i].fontWeight, \r\n                                            fontStyle: $scope.tabs[i].fontStyle,\r\n                                            textDecoration: $scope.tabs[i].textDecoration,\r\n                                            fontFamily: $scope.tabs[i].fontFamily\r\n                                            \r\n                                    });\r\n                                }\r\n                                $scope.data.textAlign = $scope.textAlign;\r\n                                if(!$scope.resCP && $scope.idCPmixed == 0){\r\n                                    $scope.data.idCFmix = \"\";\r\n                                }\r\n                                if(!$scope.resCP && $scope.idCPmixed != 0){\r\n                                    $scope.data.idCFmix = $scope.idCPmixed;\r\n                                }else{\r\n                                    $scope.data.idCFmix = $scope.resCP.idCustomfield;\r\n                                }    \r\n                            }else{\r\n                                notificationService.error(\"Para crear autrespuesta con opciones avanzadas debe seleccionar al menos 2 campos personalizados.\");\r\n                                return;\r\n                            }\r\n                            \r\n                        }else{\r\n                            $scope.data.customFields = null;\r\n                        }\r\n                        \r\n                        $scope.data.addressees = $scope.addressees;\r\n                        $scope.data.filters = $scope.filters;\r\n                        $scope.data.condition = $scope.addressees.condition;\r\n                        $scope.data.time = $(\"#valueDatepicker\").val();\r\n                        var idAutoresponder = $stateParams.id ? $stateParams.id : 0;\r\n\r\n                        RestServices.createAutoresponder($scope.data, idAutoresponder).then(function (res) {\r\n                            $window.location.href = fullUrlBase + templateBase + '/contenthtml/' + res.autoresponder.idAutoresponder;\r\n                        });\r\n                    };\r\n\r\n                    $scope.editContentEditor = function () {\r\n                        \r\n                        if($scope.optionadvance != 0 ){\r\n                            \r\n                            if($scope.services.length >= 2){\r\n                                \r\n                                $scope.data.optionAdvance = $scope.optionadvance;\r\n                                \r\n                                if(!$scope.data.customFields){//ENTRA CUANDO ESTA CREANDO\r\n                                    $scope.data.customFields = [];\r\n                                }else{//ENTRA CUANDO ESTA EDITANDO\r\n                                    $scope.data.customFields = [];\r\n                                }\r\n                                \r\n                                //RECORREMOS EL ARREGLO DE TABS PARA EXTRAER LA INFO NECESARIA PARA EL JSON\r\n                                for(var i=0; i < $scope.tabs.length; i++){\r\n                        \r\n                                    //SI EL TAMAÑO DE FUENTE NO FUE SELECCIONADO PONEMOS POR DEFECTO 12\r\n                                    if(!$scope.tabs[i].fontSize){\r\n                                        $scope.tabs[i].fontSize = \"12\";\r\n                                    }\r\n                                    //SI EL COLOR NO FUE SELECCIONADO PONEMOS POR DEFECTO NEGRO\r\n                                    if(!$scope.tabs[i].color){\r\n                                        $scope.tabs[i].color = \"#000000\";\r\n                                    }\r\n                                    //SI NEGRITA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontWeight){\r\n                                        $scope.tabs[i].fontWeight = \"unset\";\r\n                                    }\r\n                                    //SI CURSIVA NO FUE SELECCIONADO PONEMOS POR DEFECTO UNSET\r\n                                    if(!$scope.tabs[i].fontStyle){\r\n                                        $scope.tabs[i].fontStyle = \"unset\";\r\n                                    }\r\n                                    //SI SUBRAYADO NO FUE SELECCIONADO PONEMOS POR DEFECTO NONE\r\n                                    if(!$scope.tabs[i].textDecoration){\r\n                                        $scope.tabs[i].textDecoration = \"none\";\r\n                                    }\r\n                                    //SI TIPO DE LETRA NO FUE SELECCIONADO PONEMOS POR DEFECTO INHERIT\r\n                                    if(!$scope.tabs[i].fontFamily){\r\n                                        $scope.tabs[i].fontFamily = \"inherit\";\r\n                                    }\r\n                                    //$scope.tabs[i].idcustomfield\r\n                                    $scope.data.customFields.push({\r\n                                            \r\n                                            idCF : $scope.tabs[i].idcustomfield,\r\n                                            fontSize: $scope.tabs[i].fontSize, \r\n                                            color: $scope.tabs[i].color, \r\n                                            fontWeight: $scope.tabs[i].fontWeight, \r\n                                            fontStyle: $scope.tabs[i].fontStyle,\r\n                                            textDecoration: $scope.tabs[i].textDecoration,\r\n                                            fontFamily: $scope.tabs[i].fontFamily\r\n                                            \r\n                                    });\r\n                                }\r\n                                $scope.data.textAlign = $scope.textAlign;\r\n                                if(!$scope.resCP && $scope.idCPmixed == 0){\r\n                                    $scope.data.idCFmix = \"\";\r\n                                }\r\n                                if(!$scope.resCP && $scope.idCPmixed != 0){\r\n                                    $scope.data.idCFmix = $scope.idCPmixed;\r\n                                }else{\r\n                                    $scope.data.idCFmix = $scope.resCP.idCustomfield;\r\n                                }    \r\n                            }else{\r\n                                notificationService.error(\"Para crear autrespuesta con opciones avanzadas debe seleccionar al menos 2 campos personalizados.\");\r\n                                return;\r\n                            }\r\n                            \r\n                        }else{\r\n                            $scope.data.customFields = null;\r\n                        }\r\n                        \r\n                        $scope.data.addressees = $scope.addressees;\r\n                        $scope.data.time = $(\"#valueDatepicker\").val();\r\n\r\n                        RestServices.createAutoresponder($scope.data, $stateParams.id).then(function (res) {\r\n                            $window.location.href = fullUrlBase + $scope.data.autorespondercontent.url + res.autoresponder.idAutoresponder;\r\n                        });\r\n                    };\r\n\r\n                    $scope.filters = [];\r\n                    $scope.tipeFilters = [\r\n                        {id: 1, name: \"Enviar a contactos que hayan recibido un correo\"},\r\n                        {id: 2, name: \"Enviar a contactos que hayan abierto un correo\"},\r\n                        {id: 3, name: \"Enviar a contactos que hayan hecho clic un enlace\"}\r\n                    ];\r\n                    $scope.selectMailFilter = function (key) {\r\n                        if (key.typeFilters == 3) {\r\n                            RestServices.getLinksByMail(key.mailSelected).then(function (data) {\r\n                                key.links = data;\r\n                            });\r\n                        } else {\r\n                            if (!$scope.addressees.showContactlist) {\r\n                                $scope.countContacts(\"contactlist\");\r\n                            } else {\r\n                                $scope.countContacts(\"segment\");\r\n                            }\r\n\r\n                        }\r\n                    };\r\n\r\n                    $scope.selectLinkFilter = function () {\r\n                        if (!$scope.addressees.showContactlist) {\r\n                            $scope.countContacts(\"contactlist\");\r\n                        } else {\r\n                            $scope.countContacts(\"segment\");\r\n                        }\r\n                    };\r\n\r\n                    $scope.selectTypeFilter = function (key) {\r\n                        key.mailSelected = [];\r\n                        key.linkSelected = [];\r\n                        key.mail = [];\r\n                        key.links = [];\r\n                        RestServices.getMailFilters(key.typeFilters).then(function (data) {\r\n                            key.mail = data;\r\n                        });\r\n                        switch (key.typeFilters) {\r\n                            case 1:\r\n\r\n                                break;\r\n                            case 2:\r\n\r\n                                break;\r\n                            case 3:\r\n\r\n                                break;\r\n                        }\r\n                    };\r\n\r\n                    $scope.addFilter = function () {\r\n                        $scope.addressees.condition = \"all\";\r\n                        $scope.filters.push({});\r\n                    };\r\n\r\n                    $scope.removeFilters = function (index) {\r\n                        $scope.filters.splice(index, 1);\r\n                        if (!$scope.addressees.showContactlist) {\r\n                            $scope.countContacts(\"contactlist\");\r\n                        } else {\r\n                            $scope.countContacts(\"segment\");\r\n                        }\r\n                    };\r\n\r\n                }])\r\n            .controller('birthdaySmsController', ['$q', '$scope', 'RestServices', 'notificationService', '$window', '$stateParams', function ($q, $scope, RestServices, notificationService, $window, $stateParams) {\r\n                    $scope.data = {};\r\n                    $scope.filter = \"\";\r\n                    $scope.misc = {};\r\n                    $scope.data.birthdate = false;\r\n                    $scope.data.status = true;\r\n                    $scope.data.class = \"sms\";\r\n                    $scope.data.message = \"\";\r\n                    //$scope.data.category = false;\r\n                    $scope.data.idSmsCategory = \"\";\r\n                    $scope.data.scheduledate = \"\";\r\n                    $scope.initial = 0;\r\n                    $scope.tags = \"\";\r\n                    $scope.boolEditors = true;\r\n                    $scope.data.morecaracter = false;\r\n                    $scope.data.days = {\r\n                        Monday: false,\r\n                        Tuesday: false,\r\n                        Wednesday: false,\r\n                        Thursday: false,\r\n                        Friday: false,\r\n                        Saturday: false,\r\n                        Sunday: false\r\n                    };\r\n                    $scope.misc.category = false;\r\n                    $scope.addressees = [];\r\n                    $scope.addressees.results = 0;\r\n\r\n                    if ($stateParams.id) {\r\n                        RestServices.getAutoresponder($stateParams.id).then(function (res) {\r\n                            $scope.data = res.autoresponder;\r\n                            $(\"#valueDatepicker\").val(res.autoresponder.time);\r\n\r\n                            $scope.data.status = (res.autoresponder.status == 1);\r\n\r\n                            if (res.autoresponder.target) {\r\n                                $scope.addressees.showstep1 = false;\r\n                                var json = jQuery.parseJSON(res.autoresponder.target);\r\n                                $scope.addressees.results = res.autoresponder.quantitytarget;\r\n                                $scope.addressees.condition = json.condition;\r\n                                $scope.filters = json.filters;\r\n                                if (json.type == \"contactlist\") {\r\n                                    $scope.addressees.showContactlist = false;\r\n                                    $scope.addressees.selectdContactlis = json.contactlists;\r\n                                    $scope.getAllContactlist();\r\n\r\n                                } else if (json.type == \"segment\") {\r\n                                    $scope.addressees.showSegment = false;\r\n                                    $scope.addressees.selectdSegment = json.segment;\r\n                                    $scope.getAllSegment();\r\n                                }\r\n                            }\r\n\r\n                            if (!res.autoresponder.autorespondercontent) {\r\n                                $scope.boolEditors = true;\r\n                            } else {\r\n                                $scope.boolEditors = false;\r\n                                htmlPreview($stateParams.id);\r\n                                $scope.getUrl = res.autoresponder.autorespondercontent.url;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    $scope.addressees = {selectdContactlis: []};\r\n                    $scope.addressees = {selectdSegment: []};\r\n                    $scope.addressees.showSegment = true;\r\n                    $scope.addressees.showstep1 = true;\r\n                    $scope.addressees.showContactlist = true;\r\n\r\n                    $scope.opeModalMoreCa = function () {\r\n                        if ($('#morecaracter').prop('checked')) {\r\n                            $('#alertMoreCaracter').removeClass('modal');\r\n                            $('#alertMoreCaracter').addClass('dialog dialog--open');\r\n                        }\r\n                    }\r\n\r\n                    $('#dateInitial').datetimepicker({\r\n                        format: 'hh:mm',\r\n                        language: 'es'\r\n                    }).on('changeDate', function (ev) {\r\n                        $scope.$apply();\r\n                    });\r\n                    $scope.birthdatefunction = function () {\r\n                        if ($scope.data.birthdate) {\r\n                            $scope.data.birthdate = false;\r\n                            $scope.data.days = {}\r\n                        } else {\r\n                            $scope.data.birthdate = true;\r\n                            $scope.data.days = {\r\n                                Monday: true, Tuesday: true, Wednesday: true, Thursday: true,\r\n                                Friday: true, Saturday: true, Sunday: true};\r\n                        }\r\n                    };\r\n                    $scope.saveAutorespdesms = function () {\r\n                        $scope.data.addressees = $scope.addressees;\r\n                        $scope.data.time = $(\"#valueDatepicker\").val();\r\n                        $scope.data.filters = $scope.filters;\r\n                        $scope.data.condition = $scope.addressees.condition;\r\n                        var idAutoresponder = $stateParams.id ? $stateParams.id : 0;\r\n                        RestServices.createAutorespdesms($scope.data, idAutoresponder).then(function (res) {\r\n\r\n                            notificationService.success(res['message']);\r\n                            $window.location.href = fullUrlBase + templateBase + \"#/\";\r\n                        });\r\n                    };\r\n                    $scope.clearSelect = function () {\r\n                        $scope.filters = [];\r\n                        $scope.addressees.results = 0;\r\n                        $scope.disabledContactlist = false;\r\n                        $scope.disabledSegment = false;\r\n                        $scope.addressees.selectdContactlis = \"\";\r\n                        $scope.addressees.selectdSegment = \"\";\r\n                    };\r\n                    $scope.getContactlist = function () {\r\n                        $scope.addressees = {selectdSegment: []};\r\n                        $scope.segments = [];\r\n                        $scope.filters = [];\r\n                        $scope.contactlists = [];\r\n                        $scope.addressees.showstep1 = false;\r\n                        $scope.addressees.results = 0;\r\n                        $scope.addressees.showSegment = true;\r\n                        $scope.addressees.showContactlist = false;\r\n                        $scope.prueba = undefined;\r\n                        $scope.getAllContactlist();\r\n                        $scope.getAllSegment();\r\n                    };\r\n                    $scope.setAllContactList = function () {\r\n\r\n                    }\r\n                    $scope.getAllContactlist = function () {\r\n                        RestServices.getContactlist().then(function (data) {\r\n                            $scope.contactlists = data;\r\n                        });\r\n                    };\r\n                    $scope.getSegment = function () {\r\n                        $scope.addressees = {selectdContactlis: []};\r\n                        $scope.segments = [];\r\n                        $scope.contactlists = [];\r\n                        $scope.filters = [];\r\n                        $scope.addressees.showstep1 = false;\r\n                        $scope.addressees.count = 0;\r\n                        $scope.prueba = undefined;\r\n                        $scope.prueba2 = undefined;\r\n                        $scope.addressees.selectdContactlis = [];\r\n                        $scope.addressees.selectdSegment = [];\r\n                        $scope.addressees.showSegment = false;\r\n                        $scope.addressees.showContactlist = true;\r\n                        $scope.getAllSegment();\r\n                        $scope.getAllContactlist();\r\n                    };\r\n                    $scope.getAllSegment = function () {\r\n                        RestServices.getSegment().then(function (data) {\r\n                            $scope.segments = data;\r\n                        });\r\n                    };\r\n                    $scope.selectAction = function () {\r\n                        $scope.countContacts(\"contactlist\");\r\n                    };\r\n                    $scope.selectActionSegment = function () {\r\n                        $scope.countContacts(\"segment\");\r\n                    };\r\n                    $scope.allSegment = function () {\r\n                        $scope.disabledSegment = true;\r\n                        $scope.addressees.selectdSegment = $scope.segments;\r\n                        $scope.countContacts(\"segment\");\r\n                    };\r\n                    $scope.allContactlist = function () {\r\n                        $scope.disabledContactlist = true;\r\n                        $scope.addressees.selectdContactlis = $scope.contactlists;\r\n                        $scope.countContacts(\"contactlist\");\r\n                    };\r\n                    $scope.countContacts = function (type) {\r\n                        $scope.addressees.results = 0;\r\n                        var data = {\r\n                            type: type,\r\n                            segment: $scope.addressees.selectdSegment,\r\n                            contactlist: $scope.addressees.selectdContactlis,\r\n//            filters: $scope.filters,\r\n//            condition: $scope.addressees.condition,\r\n//            idMail: $scope.idMail\r\n                        };\r\n                        RestServices.countContactFromSms(data).then(function (data) {\r\n                            $scope.addressees.results = data;\r\n                        });\r\n                    };\r\n                    $scope.validateInLine = function (type) {\r\n                        $scope.misc.invalidCharacters = false;\r\n                        $scope.misc.existTags = false;\r\n                        $scope.misc.taggedMessage = $scope.data.message;\r\n                        $scope.misc.newMessage = $scope.data.message;\r\n                        var tags = /%%+[a-zA-Z0-9_]+%%/;\r\n                        var count = 0;\r\n                        if (tags.test($scope.data.message)) {\r\n                            $scope.misc.existTags = true;\r\n                            $scope.misc.taggedMessage = \"\";\r\n                            $scope.misc.newMessage = \"\";\r\n\r\n                            var words = $scope.data.message.split(\" \");\r\n                            for (var cont = 0; cont < words.length; cont++) {\r\n                                var word = words[cont];\r\n                                var word2 = words[cont];\r\n                                if (word.substr(0, 2) == \"%%\" && (word.substr(-2) == \"%%\" || word.substr(-3) == \"%%,\" || word.substr(-3) == \"%%.\" || word.substr(-3) == \"%%;\")) {\r\n                                    word = word.substr(2);\r\n                                    word2 = \"\";\r\n                                    word = \"<b><i>\" + word;\r\n                                    if (word.substr(-2) == \"%%\") {\r\n                                        word = word.substr(0, word.length - 2);\r\n                                    } else if (word.substr(-3) == \"%%,\" || word.substr(-3) == \"%%.\" || word.substr(-3) == \"%%;\") {\r\n                                        word = word.substr(0, word.length - 3);\r\n                                    }\r\n                                    word = word + \"</i></b>\";\r\n                                    count = count + word.length;\r\n                                }\r\n                                $scope.misc.taggedMessage += word + \" \";\r\n                                $scope.misc.newMessage += word2 + \" \";\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    $scope.addTag = function (tag) {\r\n                        if (typeof $scope.data.message == \"undefined\") {\r\n                            $scope.data.message = \"\";\r\n                            $scope.data.message += tag;\r\n                        } else {\r\n                            $scope.data.message += \" \" + tag;\r\n                        }\r\n                    };\r\n                    $scope.setTargetAuto = function (prm) {\r\n                        if (prm.type == \"contactlist\") {\r\n                            $scope.addressees.selectdContactlis = prm.contactlists;\r\n                        } else if (prm.type == \"segment\") {\r\n                            $scope.addressees.selectdSegment = prm.selectdSegment;\r\n                        }\r\n                        $scope.countContacts(prm.type);\r\n                    };\r\n                    $scope.setScheduleDate = function (prm) {\r\n                        $scope.data.scheduledate = prm\r\n                    };\r\n                    $scope.setMessage = function (prm) {\r\n                        $scope.data.message = prm\r\n                    };\r\n                    $scope.setIdSmsCategory = function (prm) {\r\n                        $scope.data.idSmsCategory = prm;\r\n                    };\r\n                    $scope.setDays = function (prm) {\r\n                        $scope.data.days = prm;\r\n                    }\r\n                    $scope.containsWord = function (haystack, needle) {\r\n                        return (\" \" + haystack + \" \").indexOf(\" \" + needle + \" \") !== -1;\r\n                    }\r\n                    $scope.setSwitchBirthday = function (prm) {\r\n                        $scope.data.birthdate = true;\r\n                        if (prm) {\r\n                            $('.onoffswitch-inner').click();\r\n                        }\r\n                    }\r\n                    $scope.getDataAll = function () {\r\n                        if ($stateParams.id) {\r\n                            RestServices.getDataAll($stateParams.id).then(function (data) {\r\n                                //$scope.setIdSmsCategory();\r\n                                $scope.setTargetAuto(data.target);\r\n                                $scope.setScheduleDate(data.scheduledate);\r\n                                $scope.setSwitchBirthday(data.birthdate);\r\n                                $scope.setDays(data.days);\r\n                                $scope.setMessage(data.message);\r\n                                if (data.morecaracter === true) {\r\n                                    $(\"#morecaracter\").prop('checked', true);\r\n                                } else {\r\n                                    $(\"#morecaracter\").prop('checked', false);\r\n                                }\r\n                            }).catch(function (data) {\r\n                            })\r\n                        }\r\n                    };\r\n\r\n                    $scope.getAllSmsCategories = function () {\r\n                        RestServices.getAllSmsCategories().then(function (res) {\r\n                            $scope.misc.category = res;\r\n                        });\r\n                    };\r\n                    $scope.getAllSmsCategories();\r\n\r\n                    var arrInitialPeticion = [$scope.getDataAll()];\r\n                    $q.all(arrInitialPeticion).then(function (data) {\r\n                    }).catch(function (error) {})\r\n\r\n                }])\r\n            .controller('contentEditorAutoresController', ['$scope', 'RestServices', 'notificationService', '$window', '$stateParams', function ($scope, RestServices, notificationService, $window, $stateParams) {\r\n                    $scope.saveContentEditor = function () {\r\n                        var data = {\r\n                            editor: document.getElementById('iframeEditor').contentWindow.catchEditorData()\r\n                        };\r\n                        RestServices.createContentEditorAutoresponder(data, idAutoresponder).then(function (res) {\r\n                            if (res.operation == \"create\") {\r\n                                notificationService.success(res.message);\r\n                            } else if (res.operation == \"edit\") {\r\n                                notificationService.primary(res.message);\r\n                            }\r\n                            $window.location.href = fullUrlBase + templateBase + '#/birthday/' + res.autoresponderContent.idAutoresponder;\r\n                        });\r\n                    }\r\n                }])\r\n            .controller('toolsController', ['$scope', 'RestServices', 'notificationService', '$window', '$stateParams', function ($scope, RestServices, notificationService, $window, $stateParams) {}])\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('autoresponder.services', [])\r\n    .service('RestServices', function ($http, $q, notificationService) {\r\n\r\n      this.getContactlist = function () {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/sendmail/getcontactlist';\r\n        $http.get(url)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.getSegment = function () {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/sendmail/getsegment';\r\n        $http.get(url)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.countContact = function (data) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/sendmail/countcontact';\r\n        $http.post(url, data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      };\r\n      \r\n      this.countContactFromSms = function (data) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/sms/countcontact';\r\n        \r\n        $http.post(url, data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      };\r\n           \r\n      this.getemailname = function () {\r\n        var deferred = $q.defer();\r\n        $http.get(fullUrlBase + 'mail/emailname/')\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data);\r\n          });\r\n\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.getemailsend = function () {\r\n        var deferred = $q.defer();\r\n        $http.get(fullUrlBase + 'mail/emailsender/')\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data);\r\n          });\r\n\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.addEmailName = function (data) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'mail/addemailname/';\r\n        $http.post(url, data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.addEmailSender = function (data) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'mail/addemailsender/';\r\n        $http.post(url, data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.createAutoresponder = function (data, idAutoresponder) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/autoresponder/save/' + idAutoresponder;\r\n        $http.post(url, data)\r\n          .success(function (res) {\r\n            deferred.resolve(res);\r\n          })\r\n          .error(function (res){\r\n            deferred.reject(res);\r\n            notificationService.error(res.message);\r\n          });\r\n        return deferred.promise;\r\n      };\r\n      \r\n      //SERVICIO PARA CREAR CAMPO PERSONALIZADO COMBINADO\r\n      this.addcustomfield = function (data) {\r\n          var deferred = $q.defer();\r\n          var url = fullUrlBase + 'api/autoresponder/addcustomfield';\r\n          $http.post(url, data)\r\n            .success(function (res) {\r\n              deferred.resolve(res);\r\n            })\r\n            .error(function (res) {\r\n              deferred.reject(res);\r\n              notificationService.error(res.message);\r\n            });\r\n\r\n          return deferred.promise;\r\n      };\r\n      \r\n      this.createAutorespdesms = function (data, idAutoresponder) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/autoresponder/saveautosms/' + idAutoresponder;\r\n        $http.post(url, data)\r\n          .success(function (res) {\r\n            deferred.resolve(res);\r\n          })\r\n          .error(function (res) {\r\n            deferred.reject(res);\r\n            notificationService.error(res.message);\r\n          });\r\n        return deferred.promise;\r\n      };\r\n      \r\n      this.getAllSmsCategories = function(){\r\n        var deferred = $q.defer();\r\n        //var url = constantForms.UrlPeticion.Urls.getAllFormCategory;\r\n        var url = fullUrlBase + 'api/smscategory/getall';\r\n        $http.get(url)\r\n                .success(function (data) {\r\n                  deferred.resolve(data);\r\n                })\r\n                .error(function (data) {\r\n                  deferred.reject(data);\r\n                  notificationService.error(data.message);\r\n                });\r\n        return deferred.promise;\r\n      };\r\n      \r\n      this.createContentEditorAutoresponder = function (data, idAutoresponder) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/autoresponder/savecontenteditor/' + idAutoresponder;\r\n        $http.post(url, data)\r\n          .success(function (res) {\r\n            deferred.resolve(res);\r\n          })\r\n          .error(function (res) {\r\n            deferred.reject(res);\r\n            notificationService.error(res.message);\r\n          });\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.getAutoresponder = function (idAutoresponder) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/autoresponder/getautoresponse/' + idAutoresponder;\r\n        $http.get(url)\r\n          .success(function (res) {\r\n            deferred.resolve(res);\r\n          })\r\n          .error(function (res) {\r\n            deferred.reject(res);\r\n            notificationService.error(res.message);\r\n          });\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.getAllAutoresponder = function (page, data) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/autoresponder/getallautoresponder/' + page;\r\n        $http.post(url, data)\r\n          .success(function (res) {\r\n            deferred.resolve(res);\r\n          })\r\n          .error(function (res) {\r\n            deferred.reject(res);\r\n            notificationService.error(res.message);\r\n          });\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.delete = function (idAutoresponder) {\r\n        var url = fullUrlBase + \"api/autoresponder/delete/\" + idAutoresponder;\r\n        var defered = $q.defer();\r\n        $http.delete(url)\r\n          .success(function (data) {\r\n            defered.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            defered.reject(data);\r\n          });\r\n\r\n        return defered.promise;\r\n      };\r\n\r\n      this.getMailFilters = function (filter) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/sendmail/getmailfilters/' + filter;\r\n        $http.get(url)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      };\r\n\r\n      this.getLinksByMail = function (idMail) {\r\n        var url = fullUrlBase + 'api/sendmail/getlinksbymail/' + idMail;\r\n        var deferred = $q.defer();\r\n        $http.get(url)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      };\r\n      \r\n      //Funcion que trae los datos al editar en el envio rapido\r\n      this.getDataAll = function (id) {\r\n        var defer = $q.defer();\r\n          //$http.post(contantSmstwoway.urlPeticion.changeDataEditAll, id)\r\n          var url = fullUrlBase + 'api/autoresponder/getalledit/';\r\n          $http.post(url, id)\r\n            .success(function (data) {\r\n              defer.resolve(data);\r\n            })\r\n            .error(function (data) {\r\n              defer.reject(data);\r\n            });\r\n          return defer.promise;\r\n      };\r\n      \r\n      this.findcustomfields = function (idContactlist) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/autoresponder/getallcustomfield/' + idContactlist;\r\n        $http.get(url)\r\n          .success(function (res) {\r\n            deferred.resolve(res);\r\n          })\r\n          .error(function (res) {\r\n            deferred.reject(res);\r\n            notificationService.error(res.message);\r\n          });\r\n        return deferred.promise;\r\n      };\r\n    })\r\n    .factory('notificationService', function () {\r\n      function error(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-remove-circle', 'danger');\r\n      }\r\n\r\n      function success(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-ok-circle', 'success');\r\n      }\r\n\r\n      function warning(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'warning');\r\n      }\r\n\r\n      function notice(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'notice');\r\n      }\r\n\r\n      function primary(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'primary');\r\n      }\r\n\r\n      return {\r\n        error: error,\r\n        success: success,\r\n        warning: warning,\r\n        notice: notice,\r\n        primary: primary\r\n      };\r\n    })\r\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2F1dG9yZXNwb25kZXIvc2VydmljZXMuanM/YmFmZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7O0FBRVg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVzs7QUFFWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFdBQVc7O0FBRVg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVzs7QUFFWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xyXG4gIGFuZ3VsYXIubW9kdWxlKCdhdXRvcmVzcG9uZGVyLnNlcnZpY2VzJywgW10pXHJcbiAgICAuc2VydmljZSgnUmVzdFNlcnZpY2VzJywgZnVuY3Rpb24gKCRodHRwLCAkcSwgbm90aWZpY2F0aW9uU2VydmljZSkge1xyXG5cclxuICAgICAgdGhpcy5nZXRDb250YWN0bGlzdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG4gICAgICAgIHZhciB1cmwgPSBmdWxsVXJsQmFzZSArICdhcGkvc2VuZG1haWwvZ2V0Y29udGFjdGxpc3QnO1xyXG4gICAgICAgICRodHRwLmdldCh1cmwpXHJcbiAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5lcnJvcihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZGF0YSk7XHJcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IoZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHRoaXMuZ2V0U2VnbWVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG4gICAgICAgIHZhciB1cmwgPSBmdWxsVXJsQmFzZSArICdhcGkvc2VuZG1haWwvZ2V0c2VnbWVudCc7XHJcbiAgICAgICAgJGh0dHAuZ2V0KHVybClcclxuICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChkYXRhKTtcclxuICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS5lcnJvcihkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy5jb3VudENvbnRhY3QgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcbiAgICAgICAgdmFyIHVybCA9IGZ1bGxVcmxCYXNlICsgJ2FwaS9zZW5kbWFpbC9jb3VudGNvbnRhY3QnO1xyXG4gICAgICAgICRodHRwLnBvc3QodXJsLCBkYXRhKVxyXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGRhdGEpO1xyXG4gICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcbiAgICAgIH07XHJcbiAgICAgIFxyXG4gICAgICB0aGlzLmNvdW50Q29udGFjdEZyb21TbXMgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcbiAgICAgICAgdmFyIHVybCA9IGZ1bGxVcmxCYXNlICsgJ2FwaS9zbXMvY291bnRjb250YWN0JztcclxuICAgICAgICBcclxuICAgICAgICAkaHR0cC5wb3N0KHVybCwgZGF0YSlcclxuICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChkYXRhKTtcclxuICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS5lcnJvcihkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG4gICAgICAgICAgIFxyXG4gICAgICB0aGlzLmdldGVtYWlsbmFtZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG4gICAgICAgICRodHRwLmdldChmdWxsVXJsQmFzZSArICdtYWlsL2VtYWlsbmFtZS8nKVxyXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGRhdGEpO1xyXG4gICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKGRhdGEpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy5nZXRlbWFpbHNlbmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuICAgICAgICAkaHR0cC5nZXQoZnVsbFVybEJhc2UgKyAnbWFpbC9lbWFpbHNlbmRlci8nKVxyXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGRhdGEpO1xyXG4gICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKGRhdGEpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy5hZGRFbWFpbE5hbWUgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcbiAgICAgICAgdmFyIHVybCA9IGZ1bGxVcmxCYXNlICsgJ21haWwvYWRkZW1haWxuYW1lLyc7XHJcbiAgICAgICAgJGh0dHAucG9zdCh1cmwsIGRhdGEpXHJcbiAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5lcnJvcihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZGF0YSk7XHJcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IoZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy5hZGRFbWFpbFNlbmRlciA9IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuICAgICAgICB2YXIgdXJsID0gZnVsbFVybEJhc2UgKyAnbWFpbC9hZGRlbWFpbHNlbmRlci8nO1xyXG4gICAgICAgICRodHRwLnBvc3QodXJsLCBkYXRhKVxyXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGRhdGEpO1xyXG4gICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHRoaXMuY3JlYXRlQXV0b3Jlc3BvbmRlciA9IGZ1bmN0aW9uIChkYXRhLCBpZEF1dG9yZXNwb25kZXIpIHtcclxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG4gICAgICAgIHZhciB1cmwgPSBmdWxsVXJsQmFzZSArICdhcGkvYXV0b3Jlc3BvbmRlci9zYXZlLycgKyBpZEF1dG9yZXNwb25kZXI7XHJcbiAgICAgICAgJGh0dHAucG9zdCh1cmwsIGRhdGEpXHJcbiAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKHJlcyl7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChyZXMpO1xyXG4gICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKHJlcy5tZXNzYWdlKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG4gICAgICBcclxuICAgICAgLy9TRVJWSUNJTyBQQVJBIENSRUFSIENBTVBPIFBFUlNPTkFMSVpBRE8gQ09NQklOQURPXHJcbiAgICAgIHRoaXMuYWRkY3VzdG9tZmllbGQgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuICAgICAgICAgIHZhciB1cmwgPSBmdWxsVXJsQmFzZSArICdhcGkvYXV0b3Jlc3BvbmRlci9hZGRjdXN0b21maWVsZCc7XHJcbiAgICAgICAgICAkaHR0cC5wb3N0KHVybCwgZGF0YSlcclxuICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3QocmVzKTtcclxuICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKHJlcy5tZXNzYWdlKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcbiAgICAgIH07XHJcbiAgICAgIFxyXG4gICAgICB0aGlzLmNyZWF0ZUF1dG9yZXNwZGVzbXMgPSBmdW5jdGlvbiAoZGF0YSwgaWRBdXRvcmVzcG9uZGVyKSB7XHJcbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuICAgICAgICB2YXIgdXJsID0gZnVsbFVybEJhc2UgKyAnYXBpL2F1dG9yZXNwb25kZXIvc2F2ZWF1dG9zbXMvJyArIGlkQXV0b3Jlc3BvbmRlcjtcclxuICAgICAgICAkaHR0cC5wb3N0KHVybCwgZGF0YSlcclxuICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXMpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5lcnJvcihmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChyZXMpO1xyXG4gICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKHJlcy5tZXNzYWdlKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG4gICAgICBcclxuICAgICAgdGhpcy5nZXRBbGxTbXNDYXRlZ29yaWVzID0gZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG4gICAgICAgIC8vdmFyIHVybCA9IGNvbnN0YW50Rm9ybXMuVXJsUGV0aWNpb24uVXJscy5nZXRBbGxGb3JtQ2F0ZWdvcnk7XHJcbiAgICAgICAgdmFyIHVybCA9IGZ1bGxVcmxCYXNlICsgJ2FwaS9zbXNjYXRlZ29yeS9nZXRhbGwnO1xyXG4gICAgICAgICRodHRwLmdldCh1cmwpXHJcbiAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5lcnJvcihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IoZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG4gICAgICBcclxuICAgICAgdGhpcy5jcmVhdGVDb250ZW50RWRpdG9yQXV0b3Jlc3BvbmRlciA9IGZ1bmN0aW9uIChkYXRhLCBpZEF1dG9yZXNwb25kZXIpIHtcclxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG4gICAgICAgIHZhciB1cmwgPSBmdWxsVXJsQmFzZSArICdhcGkvYXV0b3Jlc3BvbmRlci9zYXZlY29udGVudGVkaXRvci8nICsgaWRBdXRvcmVzcG9uZGVyO1xyXG4gICAgICAgICRodHRwLnBvc3QodXJsLCBkYXRhKVxyXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlcyk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHJlcyk7XHJcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IocmVzLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICB0aGlzLmdldEF1dG9yZXNwb25kZXIgPSBmdW5jdGlvbiAoaWRBdXRvcmVzcG9uZGVyKSB7XHJcbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuICAgICAgICB2YXIgdXJsID0gZnVsbFVybEJhc2UgKyAnYXBpL2F1dG9yZXNwb25kZXIvZ2V0YXV0b3Jlc3BvbnNlLycgKyBpZEF1dG9yZXNwb25kZXI7XHJcbiAgICAgICAgJGh0dHAuZ2V0KHVybClcclxuICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXMpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5lcnJvcihmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChyZXMpO1xyXG4gICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKHJlcy5tZXNzYWdlKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy5nZXRBbGxBdXRvcmVzcG9uZGVyID0gZnVuY3Rpb24gKHBhZ2UsIGRhdGEpIHtcclxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG4gICAgICAgIHZhciB1cmwgPSBmdWxsVXJsQmFzZSArICdhcGkvYXV0b3Jlc3BvbmRlci9nZXRhbGxhdXRvcmVzcG9uZGVyLycgKyBwYWdlO1xyXG4gICAgICAgICRodHRwLnBvc3QodXJsLCBkYXRhKVxyXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlcyk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHJlcyk7XHJcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IocmVzLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICB0aGlzLmRlbGV0ZSA9IGZ1bmN0aW9uIChpZEF1dG9yZXNwb25kZXIpIHtcclxuICAgICAgICB2YXIgdXJsID0gZnVsbFVybEJhc2UgKyBcImFwaS9hdXRvcmVzcG9uZGVyL2RlbGV0ZS9cIiArIGlkQXV0b3Jlc3BvbmRlcjtcclxuICAgICAgICB2YXIgZGVmZXJlZCA9ICRxLmRlZmVyKCk7XHJcbiAgICAgICAgJGh0dHAuZGVsZXRlKHVybClcclxuICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGRlZmVyZWQucmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJlZC5yZWplY3QoZGF0YSk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGRlZmVyZWQucHJvbWlzZTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHRoaXMuZ2V0TWFpbEZpbHRlcnMgPSBmdW5jdGlvbiAoZmlsdGVyKSB7XHJcbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuICAgICAgICB2YXIgdXJsID0gZnVsbFVybEJhc2UgKyAnYXBpL3NlbmRtYWlsL2dldG1haWxmaWx0ZXJzLycgKyBmaWx0ZXI7XHJcbiAgICAgICAgJGh0dHAuZ2V0KHVybClcclxuICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChkYXRhKTtcclxuICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS5lcnJvcihkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy5nZXRMaW5rc0J5TWFpbCA9IGZ1bmN0aW9uIChpZE1haWwpIHtcclxuICAgICAgICB2YXIgdXJsID0gZnVsbFVybEJhc2UgKyAnYXBpL3NlbmRtYWlsL2dldGxpbmtzYnltYWlsLycgKyBpZE1haWw7XHJcbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuICAgICAgICAkaHR0cC5nZXQodXJsKVxyXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGRhdGEpO1xyXG4gICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcbiAgICAgIH07XHJcbiAgICAgIFxyXG4gICAgICAvL0Z1bmNpb24gcXVlIHRyYWUgbG9zIGRhdG9zIGFsIGVkaXRhciBlbiBlbCBlbnZpbyByYXBpZG9cclxuICAgICAgdGhpcy5nZXREYXRhQWxsID0gZnVuY3Rpb24gKGlkKSB7XHJcbiAgICAgICAgdmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuICAgICAgICAgIC8vJGh0dHAucG9zdChjb250YW50U21zdHdvd2F5LnVybFBldGljaW9uLmNoYW5nZURhdGFFZGl0QWxsLCBpZClcclxuICAgICAgICAgIHZhciB1cmwgPSBmdWxsVXJsQmFzZSArICdhcGkvYXV0b3Jlc3BvbmRlci9nZXRhbGxlZGl0Lyc7XHJcbiAgICAgICAgICAkaHR0cC5wb3N0KHVybCwgaWQpXHJcbiAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgZGVmZXIucmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgZGVmZXIucmVqZWN0KGRhdGEpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIHJldHVybiBkZWZlci5wcm9taXNlO1xyXG4gICAgICB9O1xyXG4gICAgICBcclxuICAgICAgdGhpcy5maW5kY3VzdG9tZmllbGRzID0gZnVuY3Rpb24gKGlkQ29udGFjdGxpc3QpIHtcclxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG4gICAgICAgIHZhciB1cmwgPSBmdWxsVXJsQmFzZSArICdhcGkvYXV0b3Jlc3BvbmRlci9nZXRhbGxjdXN0b21maWVsZC8nICsgaWRDb250YWN0bGlzdDtcclxuICAgICAgICAkaHR0cC5nZXQodXJsKVxyXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlcyk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHJlcyk7XHJcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IocmVzLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcbiAgICAgIH07XHJcbiAgICB9KVxyXG4gICAgLmZhY3RvcnkoJ25vdGlmaWNhdGlvblNlcnZpY2UnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGZ1bmN0aW9uIGVycm9yKG1lc3NhZ2UpIHtcclxuICAgICAgICBzbGlkZU9uVG9wKG1lc3NhZ2UsIDQwMDAsICdnbHlwaGljb24gZ2x5cGhpY29uLXJlbW92ZS1jaXJjbGUnLCAnZGFuZ2VyJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGZ1bmN0aW9uIHN1Y2Nlc3MobWVzc2FnZSkge1xyXG4gICAgICAgIHNsaWRlT25Ub3AobWVzc2FnZSwgNDAwMCwgJ2dseXBoaWNvbiBnbHlwaGljb24tb2stY2lyY2xlJywgJ3N1Y2Nlc3MnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XHJcbiAgICAgICAgc2xpZGVPblRvcChtZXNzYWdlLCA0MDAwLCAnZ2x5cGhpY29uIGdseXBoaWNvbi1leGNsYW1hdGlvbi1zaWduJywgJ3dhcm5pbmcnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZnVuY3Rpb24gbm90aWNlKG1lc3NhZ2UpIHtcclxuICAgICAgICBzbGlkZU9uVG9wKG1lc3NhZ2UsIDQwMDAsICdnbHlwaGljb24gZ2x5cGhpY29uLWV4Y2xhbWF0aW9uLXNpZ24nLCAnbm90aWNlJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGZ1bmN0aW9uIHByaW1hcnkobWVzc2FnZSkge1xyXG4gICAgICAgIHNsaWRlT25Ub3AobWVzc2FnZSwgNDAwMCwgJ2dseXBoaWNvbiBnbHlwaGljb24tZXhjbGFtYXRpb24tc2lnbicsICdwcmltYXJ5Jyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgZXJyb3I6IGVycm9yLFxyXG4gICAgICAgIHN1Y2Nlc3M6IHN1Y2Nlc3MsXHJcbiAgICAgICAgd2FybmluZzogd2FybmluZyxcclxuICAgICAgICBub3RpY2U6IG5vdGljZSxcclxuICAgICAgICBwcmltYXJ5OiBwcmltYXJ5XHJcbiAgICAgIH07XHJcbiAgICB9KVxyXG59KSgpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvYW5ndWxhci9hdXRvcmVzcG9uZGVyL3NlcnZpY2VzLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ })
/******/ ]);