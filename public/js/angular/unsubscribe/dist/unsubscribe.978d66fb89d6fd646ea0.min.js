/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(1);\r\n__webpack_require__(2);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL3Vuc3Vic2NyaWJlL21haW4uanM/NWRmZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQkFBTyxDQUFDLENBQWtCO0FBQzFCLG1CQUFPLENBQUMsQ0FBZSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9jb250cm9sbGVycy5qcycpO1xyXG5yZXF1aXJlKCcuL3NlcnZpY2VzLmpzJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9qcy9hbmd1bGFyL3Vuc3Vic2NyaWJlL21haW4uanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('unsubscribeApp', ['ngDragDrop', 'unsubscribe.service'])\r\n          .filter('propsFilter', function () {\r\n            return function (items, props) {\r\n              var out = [];\r\n\r\n              if (angular.isArray(items)) {\r\n                var keys = Object.keys(props);\r\n\r\n                items.forEach(function (item) {\r\n                  var itemMatches = false;\r\n\r\n                  for (var i = 0; i < keys.length; i++) {\r\n                    var prop = keys[i];\r\n                    var text = props[prop].toLowerCase();\r\n                    if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {\r\n                      itemMatches = true;\r\n                      break;\r\n                    }\r\n                  }\r\n\r\n                  if (itemMatches) {\r\n                    out.push(item);\r\n                  }\r\n                });\r\n              } else {\r\n                // Let the output be the input untouched\r\n                out = items;\r\n              }\r\n\r\n              return out;\r\n            };\r\n          })\r\n                    \r\n          .directive('htmlSortable', [\"$parse\", \"$timeout\", \"$log\", \"$window\", function ($parse, $timeout, $log, $window) {\r\n\r\n              return {\r\n                restrict: 'A',\r\n                require: '?ngModel',\r\n                scope: {\r\n                  htmlSortable: '=',\r\n                  ngModel: '=',\r\n                  ngExtraSortable: '='\r\n                },\r\n                //scope: true,   // optionally create a child scope\r\n                link: function (scope, element, attrs, ngModel) {\r\n                  //var model = $parse(attrs.htmlSortable);\r\n                  /*attrs.html5Sortable*/\r\n\r\n                  var sortable = {};\r\n                  sortable.is_handle = false;\r\n                  sortable.in_use = false;\r\n\r\n                  sortable.handleDragStart = function (e) {\r\n\r\n                    if (sortable.options && angular.isDefined(sortable.options.disableDrag)) {\r\n                      if (sortable.options.disableDrag(ngModel.$modelValue, angular.element(this)) === true) {\r\n                        e.preventDefault();\r\n                        return;\r\n                      }\r\n                    }\r\n\r\n                    $window['drag_source'] = null;\r\n                    $window['drag_source_extra'] = null;\r\n\r\n                    if (sortable.options && !sortable.is_handle && sortable.options.handle) {\r\n                      e.preventDefault();\r\n                      return;\r\n                    }\r\n\r\n                    sortable.is_handle = false;\r\n                    e.dataTransfer.effectAllowed = 'move';\r\n                    //Fixed on firefox and IE 11\r\n                    if (sortable.browser != \"IE\") {\r\n                      e.dataTransfer.setData('text/plain', 'anything');\r\n                    }\r\n\r\n\r\n                    $window['drag_source'] = this;\r\n                    $window['drag_source_extra'] = element.extra_data;\r\n\r\n                    // this/e.target is the source node.\r\n                    this.classList.add('moving');\r\n                  };\r\n\r\n                  sortable.handleDragOver = function (e) {\r\n                    if (e.preventDefault) {\r\n                      e.preventDefault(); // Allows us to drop.\r\n                    }\r\n\r\n                    e.dataTransfer.dropEffect = 'move';\r\n\r\n                    if (!this.classList.contains('over')) {\r\n                      this.classList.add('over');\r\n                    }\r\n\r\n                    //return false;\r\n                  };\r\n\r\n                  sortable.handleDragEnter = function (e) {\r\n                    if (!this.classList.contains('over')) {\r\n                      this.classList.add('over');\r\n                    }\r\n                  };\r\n\r\n                  sortable.handleDragLeave = function (e) {\r\n                    this.classList.remove('over');\r\n                  };\r\n\r\n                  sortable.handleDrop = function (e) {\r\n                    // this/e.target is current target element.\r\n                    if (e.stopPropagation) {\r\n                      // stops the browser from redirecting.\r\n                      e.stopPropagation();\r\n                    }\r\n                    e.preventDefault();\r\n                    this.classList.remove('over');\r\n\r\n                    // Don't do anything if we're dropping on the same column we're dragging.\r\n                    if ($window['drag_source'] != this) {\r\n\r\n                      if ($window['drag_source'] == null) {\r\n                        //                        $log.info(\"Invalid sortable\");\r\n                        return;\r\n                      }\r\n\r\n\r\n                      var source_model = $window['drag_source'].model;\r\n                      var drop_index = this.index;\r\n\r\n                      if (ngModel.$modelValue.indexOf(source_model) != -1) {\r\n\r\n                        var drag_index = $window['drag_source'].index;\r\n                        var temp = angular.copy(ngModel.$modelValue[drag_index]);\r\n\r\n                        sortable.unbind();\r\n\r\n                        ngModel.$modelValue.splice(drag_index, 1);\r\n                        ngModel.$modelValue.splice(drop_index, 0, temp);\r\n\r\n                      } else if (sortable.options.allow_cross) {\r\n                        ngModel.$modelValue.splice(drop_index, 0, source_model);\r\n                      } else {\r\n                        //                        $log.info(\"disabled cross dropping\");\r\n                        return;\r\n                      }\r\n\r\n                      //return;\r\n                      scope.$apply();\r\n\r\n                      if (sortable.options && angular.isDefined(sortable.options.stop)) {\r\n                        //                        $log.info('Make callback');\r\n                        sortable.options.stop(ngModel.$modelValue, drop_index,\r\n                                element.extra_data, $window['drag_source_extra']);\r\n                      }\r\n                    }\r\n\r\n                    return false;\r\n                  };\r\n\r\n                  sortable.handleDragEnd = function (e) {\r\n                    // this/e.target is the source node.\r\n                    [].forEach.call(sortable.cols_, function (col) {\r\n                      col.classList.remove('over');\r\n                      col.classList.remove('moving');\r\n                    });\r\n\r\n                  };\r\n\r\n                  //Unbind all events are registed before\r\n                  sortable.unbind = function () {\r\n\r\n                    //                    $log.info('Unbind sortable');\r\n                    [].forEach.call(sortable.cols_, function (col) {\r\n                      col.removeAttribute('draggable');\r\n                      col.removeEventListener('dragstart', sortable.handleDragStart, false);\r\n                      col.removeEventListener('dragenter', sortable.handleDragEnter, false);\r\n                      col.removeEventListener('dragover', sortable.handleDragOver, false);\r\n                      col.removeEventListener('dragleave', sortable.handleDragLeave, false);\r\n                      col.removeEventListener('drop', sortable.handleDrop, false);\r\n                      col.removeEventListener('dragend', sortable.handleDragEnd, false);\r\n                    });\r\n                    sortable.in_use = false;\r\n                  }\r\n\r\n                  sortable.activehandle = function () {\r\n                    sortable.is_handle = true;\r\n                  }\r\n\r\n                  sortable.register_drop = function (element_children) {\r\n                    element_children.addEventListener('drop', sortable.handleDrop, false);\r\n                    element_children.addEventListener('dragstart', sortable.handleDragStart, false);\r\n                    element_children.addEventListener('dragenter', sortable.handleDragEnter, false);\r\n                    element_children.addEventListener('dragover', sortable.handleDragOver, false);\r\n                    element_children.addEventListener('dragleave', sortable.handleDragLeave, false);\r\n                    element_children.addEventListener('drop', sortable.handleDrop, false);\r\n                    element_children.addEventListener('dragend', sortable.handleDragEnd, false);\r\n                  }\r\n\r\n                  sortable.getBrowser = function () {\r\n                    var browser_agent = $window.navigator.userAgent;\r\n                    if (browser_agent.indexOf(\".NET\") != -1) {\r\n                      //IE 11\r\n                      return \"IE\";\r\n                    } else if (browser_agent.indexOf(\"Firefox\") != -1) {\r\n                      return \"Firefox\";\r\n                    } else {\r\n                      return \"Chrome\";\r\n                    }\r\n                  }\r\n\r\n                  sortable.update = function () {\r\n                    //                    $log.info(\"Update sortable\");\r\n                    $window['drag_source'] = null;\r\n                    var index = 0;\r\n\r\n                    //This's empty list, so just need listen drop from other\r\n                    if (ngModel.$modelValue.length == 0) {\r\n                      if (element[0].children.length > 0) {\r\n                        //Set index = 0( simulate first index )\r\n                        element[0].children[0].index = 0;\r\n                        sortable.register_drop(element[0].children[0]);\r\n                      }\r\n                      return;\r\n                    }\r\n\r\n                    this.browser = this.getBrowser();\r\n\r\n                    this.cols_ = element[0].children;\r\n\r\n                    [].forEach.call(this.cols_, function (col) {\r\n                      if (sortable.options && sortable.options.handle) {\r\n                        var handle = col.querySelectorAll(sortable.options.handle)[0];\r\n                        handle.addEventListener('mousedown', sortable.activehandle, false);\r\n                      }\r\n\r\n                      col.index = index;\r\n                      col.model = ngModel.$modelValue[index];\r\n\r\n                      index++;\r\n\r\n                      col.setAttribute('draggable', 'true');  // Enable columns to be draggable.\r\n                      sortable.register_drop(col);\r\n                    });\r\n\r\n                    sortable.in_use = true;\r\n                  }\r\n\r\n                  if (ngModel) {\r\n                    ngModel.$render = function () {\r\n                      $timeout(function () {\r\n                        //Init flag indicate the first load sortable is done or not\r\n                        sortable.first_load = false;\r\n\r\n                        scope.$watch('ngExtraSortable', function (value) {\r\n                          element.extra_data = value;\r\n                          //sortable.extra_data = value;\r\n                        });\r\n\r\n                        scope.$watch('htmlSortable', function (value) {\r\n\r\n                          sortable.options = angular.copy(value);\r\n\r\n                          if (value == \"destroy\") {\r\n                            if (sortable.in_use) {\r\n                              sortable.unbind();\r\n                              sortable.in_use = false;\r\n                            }\r\n                            return;\r\n                          }\r\n\r\n                          if (!angular.isDefined(sortable.options)) {\r\n                            sortable.options = {};\r\n                          }\r\n\r\n                          if (!angular.isDefined(sortable.options.allow_cross)) {\r\n                            sortable.options.allow_cross = false\r\n                          }\r\n\r\n                          if (angular.isDefined(sortable.options.construct)) {\r\n                            sortable.options.construct(ngModel.$modelValue);\r\n                          }\r\n\r\n                          element[0].classList.add('html5-sortable');\r\n                          sortable.update();\r\n                          $timeout(function () {\r\n                            sortable.first_load = true;\r\n                          })\r\n                        }, true);\r\n\r\n                        //Watch ngModel and narrate it\r\n                        scope.$watch('ngModel', function (value) {\r\n                          if (!sortable.first_load || sortable.options == 'destroy') {\r\n                            //Ignore on first load\r\n                            return;\r\n                          }\r\n\r\n                          $timeout(function () {\r\n                            sortable.update();\r\n                          });\r\n\r\n                        }, true);\r\n\r\n                      });\r\n                    };\r\n                  } else {\r\n                    //                    $log.info('Missing ng-model in template');\r\n                  }\r\n                }\r\n              };\r\n            }])\r\n          .controller('contactController', ['$scope', 'RestService', 'notificationService', '$window', function ($scope, RestService, notificationService, $window) {\r\n              //data\r\n                            \r\n              $scope.data = {};\r\n              $scope.idMail = idMail;\r\n              $scope.idContact = idContact;\r\n              $scope.sendSelected = [];\r\n              $scope.prueba = {};\r\n              $scope.items = [];\r\n              $scope.arrServices = [];\r\n              $scope.arrConfigDashboard = [];\r\n              $scope.arrSubs = [];\r\n              $scope.arrUnsubs = [];\r\n              $scope.validateView = false; \r\n              $scope.responsemessage = \"\";\r\n              $scope.data.option = \"Ninguno\";\r\n              \r\n              $scope.data.options = [\r\n                {id: 1, name:\"Nunca me suscribí a esta lista\"},\r\n                {id: 2, name:\"El contenido de estos emails no me interesa\"},\r\n                {id: 3, name:\"Recibo estos emails con demasiada frecuencia\"},\r\n                {id: 4, name:\"Estos emails son spam\"},\r\n                {id: 5, name:\"Ninguno\"},\r\n                {id: 6, name:\"Otro\"}\r\n              ];\r\n              $scope.data.other = \"\";\r\n              $scope.data.selectOption = [\r\n                {id: \"one\", name: \"Desuscribirse de esta Base de datos.\"},\r\n                {id: \"all\", name: \"Desuscribirse de todas las Bases de datos.\"}\r\n              ];\r\n              $scope.data.click = \"\";\r\n              $scope.disabled = false;\r\n              $scope.optionDroppable = {\r\n                opacity: 0.4,\r\n              };\r\n              \r\n              $scope.data.idMail = idMail;\r\n              $scope.data.idContact = idContact;\r\n                \r\n              //Misc\r\n              $scope.misc = {};\r\n              $scope.misc.advanceUnsuscribe = false;\r\n              \r\n              //typeView\r\n              if( typeView == 1 ){\r\n                    $scope.validateView = true;   \r\n              }else{\r\n                    $scope.validateView = false;\r\n              }\r\n              \r\n              //Functions\r\n              $scope.functions = {\r\n                changeAdvanceUnsuscribe: function () {\r\n                  if ($scope.misc.advanceUnsuscribe) {\r\n                    $scope.misc.advanceUnsuscribe = false;\r\n                  } else {\r\n                    $scope.misc.advanceUnsuscribe = true;\r\n                  }\r\n                }\r\n              };\r\n\r\n              $scope.restService = {\r\n                sendUnsubscribeSimple: function () {\r\n                  document.getElementById('simpleDesuscribeBtn').disabled = true;\r\n                  RestService.sendUnsubscribeSimple($scope.data).then(function (data) {\r\n                    notificationService.success(data.message);\r\n                  });\r\n                }\r\n              }\r\n\r\n              $scope.draggableOptions = {\r\n                remove: function (index) {\r\n                }\r\n              }\r\n\r\n              //Action Droppable\r\n              $scope.actionDroppableSubs = {\r\n                onOver: function (event, ui) {\r\n                  element = angular.element(document.getElementById('subs'));\r\n                  $(element[0])\r\n                          .removeClass(\"boder-droppable\")\r\n                          .addClass(\"hover-droppable\");\r\n                },\r\n                onDrop: function (event, ui) {\r\n                  element = angular.element(document.getElementById('subs'));\r\n                  $(element[0])\r\n                          .removeClass(\"hover-droppable\")\r\n                          .addClass(\"boder-droppable\")\r\n                          .find(\"p\")\r\n                          .html(\"\");\r\n                },\r\n                remove: function (index) {\r\n                  objList = $scope.arrConfigDashboard[index];\r\n                  for (i in $scope.arrDefaultDashboard.items) {\r\n                    if (objList.title == $scope.arrDefaultDashboard.items[i].title) {\r\n                      $scope.arrConfigDashboard.splice(index, 1);\r\n                      $scope.arrServices.splice(objList.jqyoui_pos, 1, $scope.arrDefaultDashboard.items[i]);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              $scope.actionDroppableUnSubs = {\r\n                onOver: function (event, ui) {\r\n                  element = angular.element(document.getElementById('unsubs'));\r\n                  $(element[0])\r\n                          .removeClass(\"boder-droppable\")\r\n                          .addClass(\"hover-droppable\");\r\n                },\r\n                onDrop: function (event, ui) {\r\n                  element = angular.element(document.getElementById('unsubs'));\r\n                  $(element[0])\r\n                          .removeClass(\"hover-droppable\")\r\n                          .addClass(\"boder-droppable\")\r\n                          .find(\"p\")\r\n                          .html(\"\");\r\n                },\r\n                remove: function (index) {\r\n                  objList = $scope.arrConfigDashboard[index];\r\n                  for (i in $scope.arrDefaultDashboard.items) {\r\n                    if (objList.title == $scope.arrDefaultDashboard.items[i].title) {\r\n                      $scope.arrConfigDashboard.splice(index, 1);\r\n                      $scope.arrServices.splice(objList.jqyoui_pos, 1, $scope.arrDefaultDashboard.items[i]);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              RestService.getContact($scope.idContact, $scope.idMail).then(function (data) {\r\n\r\n                $scope.contact = data;                \r\n                $scope.data.contact = data.contact;\r\n                $scope.data.typeView = $scope.validateView;\r\n                if (!angular.isDefined($scope.contact.contact.name)) {\r\n                  $scope.name = $scope.contact.contact.email;\r\n                } else if (!angular.isDefined($scope.contact.contact.lastname)) {\r\n                  $scope.name = $scope.contact.contact.name;\r\n                } else {\r\n                  $scope.name = $scope.contact.contact.name + \" \" + $scope.contact.contact.lastname;\r\n                }\r\n\r\n                for (var i = 0; i < $scope.contact.arrUnsubscribedCategories.length; i++) {\r\n                  $scope.contact.arrUnsubscribedCategories[i].jqyoui_pos = i;\r\n                  $scope.contact.arrUnsubscribedCategories[i].drag = true;\r\n                }\r\n\r\n                for (var i = 0; i < $scope.contact.arrSubscribedCategories.length; i++) {\r\n                  $scope.contact.arrSubscribedCategories[i].jqyoui_pos = i;\r\n                  $scope.contact.arrSubscribedCategories[i].drag = true;\r\n                }\r\n\r\n                $scope.arrSubs = angular.copy($scope.contact.arrSubscribedCategories);\r\n                $scope.arrUnsubs = angular.copy($scope.contact.arrUnsubscribedCategories);\r\n                \r\n                //var arrayCategory = $scope.arrSubsConcat.concat($scope.arrUnsubs);\r\n                //console.log(\"arrayCategory\",arrayCategory);\r\n                //$scope.arrUnsubs = arrayCategory;\r\n                \r\n                if(data.message != ''){\r\n                  $scope.disabled = true;\r\n                  notificationService.primary(data.message);\r\n                }\r\n              })\r\n\r\n              $scope.not = false;\r\n              \r\n              \r\n              $scope.opeModalMoreCa = function () {\r\n                \r\n                $('#alertMoreCaracter').removeClass('modal');\r\n                if($scope.data.other.length > 0 && $scope.data.option === 'Otro'){\r\n                    $(\"#textmessage\").text(\"La desuscripción fue realizada correctamente, muchas gracias por informarnos el motivo de la desuscripción, esperamos mejorar para usted.\");\r\n                }else{\r\n                    $(\"#textmessage\").text(\"La desuscripción fue realizada correctamente.\");\r\n                } \r\n                $('#alertMoreCaracter').addClass('dialog dialog--open'); \r\n              }\r\n              \r\n              $scope.closeModalMoreCa = function () {\r\n                \r\n                if($scope.data.typeView == 0){\r\n                    $scope.disabled = true;  \r\n                }\r\n                $('#alertMoreCaracter').removeClass('dialog dialog--open');\r\n                $('#alertMoreCaracter').addClass('modal'); \r\n              }\r\n\r\n              $scope.sendUnsubscribe = function () {\r\n                 \r\n                $scope.data.subscribe = $scope.arrSubs;\r\n                $scope.data.unsubscribe = $scope.arrUnsubs;\r\n                RestService.sendUnsubscribe($scope.data, $scope.idContact).then(function (data) {\r\n                  //notificationService.success(data.message);\r\n                  $scope.opeModalMoreCa();\r\n                  if($scope.data.typeView == 0){\r\n                    $scope.disabled = true;  \r\n                  }else{\r\n                    $scope.disabled = true;\r\n                    $scope.data.other = \"\";\r\n                  }\r\n                  \r\n                });\r\n\r\n              }\r\n\r\n              $scope.subscribe = function (category) {\r\n                for (var i = 0; i < $scope.arrUnsubs.length; i++) {\r\n                  if ($scope.arrUnsubs[i].idContactlistCategory == category.idContactlistCategory) {\r\n                    $scope.arrUnsubs.splice(i, 1);\r\n                  }\r\n                }\r\n                $scope.arrSubs.push(category);\r\n              }\r\n              $scope.unsubscribe = function (category) {\r\n                for (var i = 0; i < $scope.arrSubs.length; i++) {\r\n                  if ($scope.arrSubs[i].idContactlistCategory == category.idContactlistCategory) {\r\n                    $scope.arrSubs.splice(i, 1);\r\n                  }\r\n                }\r\n                $scope.arrUnsubs.push(category);\r\n              }\r\n              $scope.selectOption = function (name){\r\n                $scope.data.option = name;\r\n                if($scope.data.option != 'Otro'){\r\n                    $scope.data.other ='';\r\n                }\r\n              }\r\n              $scope.selectButton = function (name){\r\n                $scope.data.click = name;\r\n              }\r\n            \r\n            }])\r\n            \r\n            .controller('advanceController', ['$scope', 'RestService', 'notificationService', '$window', function ($scope, RestService, notificationService, $window) {\r\n                \r\n                $scope.initial = 0;\r\n                $scope.page = 1;\r\n                $scope.stringsearch = -1;\r\n                $scope.shownewblockade = true;\r\n                $scope.showblockade = true;\r\n                $scope.search = \"\";\r\n                                \r\n              //data\r\n                $scope.getAll = function () {\r\n                    RestService.getAll($scope.initial, $scope.stringsearch).then(function (data) {                \r\n                        if (data.total > 0) {\r\n                            $scope.showblockade = false;\r\n                        } else {\r\n                            $scope.shownewblockade = false;\r\n                        }\r\n                        $scope.blockade = data;\r\n                    })\r\n                };\r\n                $scope.getAll();\r\n                $scope.forward = function () {\r\n                    $scope.progressbar = false;\r\n                    $scope.initial += 1;\r\n                    $scope.page += 1;\r\n                    $scope.getAll();\r\n                };\r\n                $scope.fastforward = function () {\r\n                    $scope.progressbar = false;\r\n                    $scope.initial = ($scope.blockade.total_pages - 1);\r\n                    $scope.page = $scope.blockade.total_pages;\r\n                    $scope.getAll();\r\n                };\r\n                $scope.backward = function () {\r\n                    $scope.progressbar = false;\r\n                    $scope.initial -= 1;\r\n                    $scope.page -= 1;\r\n                    $scope.getAll();\r\n                };\r\n                $scope.fastbackward = function () {\r\n                    $scope.progressbar = false;\r\n                    $scope.initial = 0;\r\n                    $scope.page = 1;\r\n                    $scope.getAll();\r\n                };\r\n                \r\n                              \r\n                $scope.searchContact = function (param) {\r\n                    if(param == 1){                        \r\n                        if($scope.search != ''){\r\n                            $scope.stringsearch = $scope.search;\r\n                            $scope.getAll();   \r\n                        }else{\r\n                            $scope.getAll();\r\n                        }\r\n                                                         \r\n                    }else if (param == 2){\r\n                        $scope.search = \"\";\r\n                        $scope.stringsearch = -1;\r\n                        $scope.getAll();  \r\n                    }    \r\n                };\r\n                \r\n                $scope.deleteUnsub = function (idContact) {\r\n                    RestService.deleteUnsub(idContact).then(function (data) {\r\n                    notificationService.success(data.message);\r\n                    $scope.getAll();\r\n                    });\r\n                }\r\n                \r\n            }])\r\n            .controller('createController', ['$scope', 'RestService', 'notificationService', '$window', function ($scope, RestService, notificationService, $window) {\r\n              $scope.allcategories = false; \r\n              $scope.services = [];\r\n                            \r\n              $scope.initComponents = function () {\r\n                RestService.listindicative().then(function (response) {\r\n                  $scope.listindicative = response;\r\n                }).catch(function (error) {\r\n                  notificationService.error(error.message);\r\n                });\r\n                \r\n                RestService.listCategories().then(function (response) {              \r\n                  $scope.listAllAddressee = response;\r\n                  console.log(\"data----->\",response );\r\n                }).catch(function (error) {\r\n                  notificationService.error(error.message);\r\n                });\r\n                                                \r\n              };\r\n              $scope.initComponents();\r\n                 \r\n              $scope.addUnsub = function () {\r\n                                               \r\n                $scope.data.services = $scope.services;\r\n                RestService.createUnsub($scope.data).then(function (response) {                    \r\n                    var route=  fullUrlBase + templateBase+\"/list\";\r\n                    $window.location.href = route;\r\n                    notificationService.success(response.message);                    \r\n                }).catch(function (error) {\r\n                    notificationService.error(error.message);\r\n                });\r\n\r\n              }                                  \r\n                \r\n            }])\r\n          .controller('contactautomaticController', ['$scope', 'RestService', 'notificationService', '$window', function ($scope, RestService, notificationService, $window) {\r\n              $scope.idMail = idMail;\r\n              $scope.idContact = idContact;\r\n              $scope.sendSelected = [];\r\n              $scope.prueba = {};\r\n              $scope.items = [];\r\n              $scope.arrServices = [];\r\n              $scope.arrConfigDashboard = [];\r\n              $scope.arrSubs = [];\r\n              $scope.arrUnsubs = [];\r\n              $scope.optionDroppable = {\r\n                opacity: 0.4,\r\n              };\r\n\r\n              $scope.draggableOptions = {\r\n                remove: function (index) {\r\n                }\r\n              }\r\n\r\n              //Action Droppable\r\n              $scope.actionDroppableSubs = {\r\n                onOver: function (event, ui) {\r\n                  element = angular.element(document.getElementById('subs'));\r\n                  $(element[0])\r\n                          .removeClass(\"boder-droppable\")\r\n                          .addClass(\"hover-droppable\");\r\n                },\r\n                onDrop: function (event, ui) {\r\n                  element = angular.element(document.getElementById('subs'));\r\n                  $(element[0])\r\n                          .removeClass(\"hover-droppable\")\r\n                          .addClass(\"boder-droppable\")\r\n                          .find(\"p\")\r\n                          .html(\"\");\r\n                },\r\n                remove: function (index) {\r\n                  objList = $scope.arrConfigDashboard[index];\r\n                  for (i in $scope.arrDefaultDashboard.items) {\r\n                    if (objList.title == $scope.arrDefaultDashboard.items[i].title) {\r\n                      $scope.arrConfigDashboard.splice(index, 1);\r\n                      $scope.arrServices.splice(objList.jqyoui_pos, 1, $scope.arrDefaultDashboard.items[i]);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              \r\n              $scope.actionDroppableUnSubs = {\r\n                onOver: function (event, ui) {\r\n                  element = angular.element(document.getElementById('unsubs'));\r\n                  $(element[0])\r\n                          .removeClass(\"boder-droppable\")\r\n                          .addClass(\"hover-droppable\");\r\n                },\r\n                onDrop: function (event, ui) {\r\n                  element = angular.element(document.getElementById('unsubs'));\r\n                  $(element[0])\r\n                          .removeClass(\"hover-droppable\")\r\n                          .addClass(\"boder-droppable\")\r\n                          .find(\"p\")\r\n                          .html(\"\");\r\n                },\r\n                remove: function (index) {\r\n                  objList = $scope.arrConfigDashboard[index];\r\n                  console.log(objList);\r\n                  for (i in $scope.arrDefaultDashboard.items) {\r\n                    if (objList.title == $scope.arrDefaultDashboard.items[i].title) {\r\n                      $scope.arrConfigDashboard.splice(index, 1);\r\n                      $scope.arrServices.splice(objList.jqyoui_pos, 1, $scope.arrDefaultDashboard.items[i]);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              RestService.getContact($scope.idContact,$scope.idMail).then(function (data) {\r\n\r\n                $scope.contact = data;\r\n\r\n                if (!angular.isDefined($scope.contact.contact.name)) {\r\n                  $scope.name = $scope.contact.contact.email;\r\n                } else if (!angular.isDefined($scope.contact.contact.lastname)) {\r\n                  $scope.name = $scope.contact.contact.name;\r\n                } else {\r\n                  $scope.name = $scope.contact.contact.name + \" \" + $scope.contact.contact.lastname;\r\n                }\r\n                for (var i = 0; i < $scope.contact.arrUnsubscribedCategories.length; i++) {\r\n                  $scope.contact.arrUnsubscribedCategories[i].jqyoui_pos = i;\r\n                  $scope.contact.arrUnsubscribedCategories[i].drag = true;\r\n                }\r\n\r\n                for (var i = 0; i < $scope.contact.arrSubscribedCategories.length; i++) {\r\n                  $scope.contact.arrSubscribedCategories[i].jqyoui_pos = i;\r\n                  $scope.contact.arrSubscribedCategories[i].drag = true;\r\n                }\r\n\r\n                $scope.arrSubs = angular.copy($scope.contact.arrSubscribedCategories);\r\n                $scope.arrUnsubs = angular.copy($scope.contact.arrUnsubscribedCategories);\r\n\r\n              });\r\n\r\n              $scope.sendUnsubscribe = function () {\r\n                var sendunsubscribes = {idMail: $scope.idMail, arrSubs: $scope.arrSubs, arrUnsubs: $scope.arrUnsubs};\r\n                RestService.sendUnsubscribeAutomatic(sendunsubscribes, $scope.idContact).then(function (data) {\r\n                  notificationService.success(data.message);\r\n                });\r\n\r\n              }\r\n\r\n              $scope.subscribe = function (category) {\r\n                for (var i = 0; i < $scope.arrUnsubs.length; i++) {\r\n                  if ($scope.arrUnsubs[i].idContactlistCategory == category.idContactlistCategory) {\r\n                    $scope.arrUnsubs.splice(i, 1);\r\n                  }\r\n                }\r\n                $scope.arrSubs.push(category);\r\n              }\r\n\r\n              $scope.unsubscribe = function (category) {\r\n                for (var i = 0; i < $scope.arrSubs.length; i++) {\r\n                  if ($scope.arrSubs[i].idContactlistCategory == category.idContactlistCategory) {\r\n                    $scope.arrSubs.splice(i, 1);\r\n                  }\r\n                }\r\n                $scope.arrUnsubs.push(category);\r\n              }\r\n            }]);\r\n          \r\n          \r\n  angular.element().ready(function () {\r\n    angular.bootstrap(document, ['unsubscribeApp'])\r\n  });\r\n\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('unsubscribe.service', [])\r\n    .service('RestService',['$http','$q','notificationService', function ($http, $q, notificationService) {\r\n\r\n      this.getContact = function (idContact,idMail) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/unsubscribe/getcontact/' + idContact + '/' + idMail;\r\n        $http.get(url)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.primary(data.message);\r\n          });\r\n        return deferred.promise;\r\n      }\r\n\r\n      this.sendUnsubscribe = function (data, idContact) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/unsubscribe/insunsubscribe/' + idContact;\r\n        $http.post(url, data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n        return deferred.promise;\r\n      }\r\n      \r\n      this.getAll = function (page, stringsearch) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/unsubscribe/getcontactsunsubscribe/'+page;\r\n        $http.post(url,{stringsearch: stringsearch})\r\n       \r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n        return deferred.promise;\r\n      }\r\n      \r\n      this.deleteUnsub = function (idContact) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/unsubscribe/deleteunsub/' + idContact;\r\n        $http.get(url)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n        return deferred.promise;\r\n      }\r\n      this.sendUnsubscribeAutomatic = function (data, idContact) {\r\n        let deferred = $q.defer();\r\n        let url = fullUrlBase + \"api/unsubscribe/insunsubscribeautomatic/\" + idContact;\r\n\r\n        $http.post(url, data)\r\n          .success(function (response) {\r\n            deferred.resolve(response);\r\n          })\r\n          .error(function (error) {\r\n            deferred.reject(error);\r\n          });\r\n        return deferred.promise;\r\n      }\r\n      \r\n      this.sendUnsubscribeSimple = function(data){\r\n        let deferred = $q.defer();\r\n        let url = fullUrlBase + \"api/unsubscribe/insunsubscribesimple/\" + data.idMail+\"/\"+data.idContact;\r\n\r\n        $http.get(url)\r\n          .success(function (response) {\r\n            deferred.resolve(response);\r\n          })\r\n          .error(function (error) {\r\n            deferred.reject(error);\r\n          });\r\n        return deferred.promise;\r\n      }\r\n      \r\n       this.listindicative = function () {\r\n        let defered = $q.defer();\r\n        let url = fullUrlBase + \"api/country/indicatives\";\r\n        $http.get(url)\r\n          .success(function (response) {\r\n            defered.resolve(response);\r\n          })\r\n          .error(function (error) {\r\n            defered.reject(error);\r\n          });\r\n\r\n        return defered.promise;\r\n      }\r\n      \r\n      this.listCategories = function () {\r\n        let defered = $q.defer();\r\n        let url = fullUrlBase + \"api/unsubscribe/getcategories\";\r\n        $http.get(url)\r\n          .success(function (response) {\r\n            defered.resolve(response);\r\n          })\r\n          .error(function (error) {\r\n            defered.reject(error);\r\n          });\r\n\r\n        return defered.promise;\r\n      }\r\n      \r\n      this.createUnsub = function (data) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/unsubscribe/createcontactunsub';\r\n        $http.post(url, data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n        return deferred.promise;\r\n      }\r\n\r\n    }])\r\n    .factory('notificationService', function () {\r\n      function error(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-remove-circle', 'danger');\r\n      }\r\n\r\n      function success(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-ok-circle', 'success');\r\n      }\r\n\r\n      function warning(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'warning');\r\n      }\r\n\r\n      function notice(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'notice');\r\n      }\r\n\r\n      function primary(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'primary');\r\n      }\r\n\r\n      return {\r\n        error: error,\r\n        success: success,\r\n        warning: warning,\r\n        notice: notice,\r\n        primary: primary\r\n      };\r\n    })\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ })
/******/ ]);