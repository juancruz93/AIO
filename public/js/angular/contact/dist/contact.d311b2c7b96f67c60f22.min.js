/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(1);\r\n__webpack_require__(2);\r\n__webpack_require__(3);\r\n__webpack_require__(4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2NvbnRhY3QvbWFpbi5qcz9kYzFlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1CQUFPLENBQUMsQ0FBVTtBQUNsQixtQkFBTyxDQUFDLENBQWtCO0FBQzFCLG1CQUFPLENBQUMsQ0FBaUI7QUFDekIsbUJBQU8sQ0FBQyxDQUFlIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL2FwcC5qcycpO1xyXG5yZXF1aXJlKCcuL2NvbnRyb2xsZXJzLmpzJyk7XHJcbnJlcXVpcmUoJy4vZGlyZWN0aXZlcy5qcycpO1xyXG5yZXF1aXJlKCcuL3NlcnZpY2VzLmpzJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9qcy9hbmd1bGFyL2NvbnRhY3QvbWFpbi5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('contact', ['ngRoute', 'contact.controllers', 'contact.directives', 'contact.services', 'xeditable', \"ngMaterial\", \"checklist-model\", \"ui.bootstrap.datetimepicker\"])\r\n          .run(function (editableOptions, editableThemes) {\r\n            editableThemes.bs3.inputClass = 'input-sm';\r\n            editableThemes.bs3.buttonsClass = 'btn-sm';\r\n            editableOptions.theme = 'bs3';\r\n          })\r\n          .config(['$routeProvider', function ($routeProvider) {\r\n              $routeProvider\r\n                      .when('/', {\r\n                        templateUrl: fullUrlBase + templateBase + '/list',\r\n                        controller: 'ContactController'\r\n                      })\r\n                      .when('/import', {\r\n                        templateUrl: fullUrlBase + templateBase + '/import/' + idContactlist,\r\n                        controller: 'ContactImportController'\r\n                      })\r\n                      .when('/newbatch', {\r\n                        templateUrl: fullUrlBase + templateBase + '/newbatch',\r\n                        controller: 'NewbatchController'\r\n                      })\r\n                      .when('/newcontact', {\r\n                        templateUrl: fullUrlBase + templateBase + '/newcontact/' + idContactlist,\r\n                        controller: 'NewcontactController'\r\n                      })\r\n                      .when('/history', {\r\n                        templateUrl: fullUrlBase + templateBase + '/history',\r\n                        controller: 'HistoryController'\r\n                      })\r\n                      /*.when('/import/contacts', {\r\n                       templateUrl: '/' + relativeUrlBase + '/' + templateBase + '/importcontacts',\r\n                       controller: 'ContactImportController'\r\n                       })*/\r\n                      .otherwise({\r\n                        redirectTo: '/'\r\n                      });\r\n            }])\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2NvbnRhY3QvYXBwLmpzP2ZiZDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLGFBQWE7QUFDYixDQUFDIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xyXG4gIGFuZ3VsYXIubW9kdWxlKCdjb250YWN0JywgWyduZ1JvdXRlJywgJ2NvbnRhY3QuY29udHJvbGxlcnMnLCAnY29udGFjdC5kaXJlY3RpdmVzJywgJ2NvbnRhY3Quc2VydmljZXMnLCAneGVkaXRhYmxlJywgXCJuZ01hdGVyaWFsXCIsIFwiY2hlY2tsaXN0LW1vZGVsXCIsIFwidWkuYm9vdHN0cmFwLmRhdGV0aW1lcGlja2VyXCJdKVxyXG4gICAgICAgICAgLnJ1bihmdW5jdGlvbiAoZWRpdGFibGVPcHRpb25zLCBlZGl0YWJsZVRoZW1lcykge1xyXG4gICAgICAgICAgICBlZGl0YWJsZVRoZW1lcy5iczMuaW5wdXRDbGFzcyA9ICdpbnB1dC1zbSc7XHJcbiAgICAgICAgICAgIGVkaXRhYmxlVGhlbWVzLmJzMy5idXR0b25zQ2xhc3MgPSAnYnRuLXNtJztcclxuICAgICAgICAgICAgZWRpdGFibGVPcHRpb25zLnRoZW1lID0gJ2JzMyc7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XHJcbiAgICAgICAgICAgICAgJHJvdXRlUHJvdmlkZXJcclxuICAgICAgICAgICAgICAgICAgICAgIC53aGVuKCcvJywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogZnVsbFVybEJhc2UgKyB0ZW1wbGF0ZUJhc2UgKyAnL2xpc3QnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnQ29udGFjdENvbnRyb2xsZXInXHJcbiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgLndoZW4oJy9pbXBvcnQnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBmdWxsVXJsQmFzZSArIHRlbXBsYXRlQmFzZSArICcvaW1wb3J0LycgKyBpZENvbnRhY3RsaXN0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnQ29udGFjdEltcG9ydENvbnRyb2xsZXInXHJcbiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgLndoZW4oJy9uZXdiYXRjaCcsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6IGZ1bGxVcmxCYXNlICsgdGVtcGxhdGVCYXNlICsgJy9uZXdiYXRjaCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdOZXdiYXRjaENvbnRyb2xsZXInXHJcbiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgLndoZW4oJy9uZXdjb250YWN0Jywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogZnVsbFVybEJhc2UgKyB0ZW1wbGF0ZUJhc2UgKyAnL25ld2NvbnRhY3QvJyArIGlkQ29udGFjdGxpc3QsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdOZXdjb250YWN0Q29udHJvbGxlcidcclxuICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAud2hlbignL2hpc3RvcnknLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBmdWxsVXJsQmFzZSArIHRlbXBsYXRlQmFzZSArICcvaGlzdG9yeScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdIaXN0b3J5Q29udHJvbGxlcidcclxuICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAvKi53aGVuKCcvaW1wb3J0L2NvbnRhY3RzJywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnLycgKyByZWxhdGl2ZVVybEJhc2UgKyAnLycgKyB0ZW1wbGF0ZUJhc2UgKyAnL2ltcG9ydGNvbnRhY3RzJyxcclxuICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnQ29udGFjdEltcG9ydENvbnRyb2xsZXInXHJcbiAgICAgICAgICAgICAgICAgICAgICAgfSkqL1xyXG4gICAgICAgICAgICAgICAgICAgICAgLm90aGVyd2lzZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0VG86ICcvJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1dKVxyXG59KSgpO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2pzL2FuZ3VsYXIvY29udGFjdC9hcHAuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('contact.controllers', [])\r\n          .controller('ContactController', ['$scope', 'restService', 'notificationService', '$timeout', '$rootScope', 'setData', function ($scope, restService, notificationService, $timeout, $rootScope, setData) {\r\n              $scope.fullUrlBase = fullUrlBase;\r\n              $scope.templateBase = templateBase;\r\n              $scope.show = true;\r\n              $scope.showList = true;\r\n              $scope.contactlist = [{}];\r\n              $scope.progressbar = false;\r\n              $scope.changestatus = true;\r\n              $scope.suscribe = true;\r\n              $scope.progressbar3 = true;\r\n              $scope.stateend = \"\";\r\n              $scope.statePrin = \"Todos\";\r\n              $scope.idcontactUnsubscribe = null;\r\n              $scope.idcontactlistUnsubscribe = null;\r\n              $scope.typeUnsubscribe = null;\r\n              $scope.estatusUnsuscribe = null;\r\n              $scope.typeDeleted = null;\r\n              $scope.typeExport = 0;\r\n              $scope.flagEmail = false;\r\n              $scope.idContactlist = \"\";\r\n\r\n              // Se listan los estados para realizar el filtro\r\n              $scope.status = [\r\n                \"Todos\",\r\n                \"Activos\",\r\n                \"Desuscritos\",\r\n                \"Rebotados\",\r\n                \"Spam\",\r\n                \"Bloqueados\"\r\n              ]\r\n              \r\n              $scope.state = \"Todos\";\r\n\r\n              //Seleccionar uno o todos\r\n              $scope.items = [];\r\n              $scope.selected = [];\r\n              $scope.toggle = function (item, list) {\r\n                var idx = list.indexOf(item);\r\n                if (idx > -1) {\r\n                  list.splice(idx, 1);\r\n                } else {\r\n                  list.push(item);\r\n                }\r\n                $scope.evaluateSuscribe();\r\n              };\r\n              $scope.exists = function (item, list) {\r\n                return list.indexOf(item) > -1;\r\n              };\r\n              $scope.isIndeterminate = function () {\r\n                return ($scope.selected.length !== 0 &&\r\n                        $scope.selected.length !== $scope.items.length);\r\n              };\r\n              $scope.isChecked = function () {\r\n                return $scope.selected.length === $scope.items.length;\r\n              };\r\n              $scope.toggleAll = function () {\r\n\r\n                if ($scope.selected.length === $scope.items.length) {\r\n                  $scope.idSelected = $scope.selected;\r\n                  $scope.selected = [];\r\n                } else if ($scope.selected.length === 0 || $scope.selected.length > 0) {\r\n                  $scope.selected = $scope.items.slice(0);\r\n                }\r\n                $scope.evaluateSuscribe();\r\n              };\r\n              //Fin Seleccionar uno o todos\r\n              $scope.evaluateSuscribe = function () {\r\n                var cont = 0;\r\n                for (i = 0; i < $scope.contacts[0].items.length; i++) {\r\n                  for (j = 0; j < $scope.selected.length; j++) {\r\n                    if (($scope.contacts[0].items[i].idContact == $scope.selected[j]) && ($scope.contacts[0].items[i].status == \"unsubscribed\")) {\r\n                      cont++;\r\n                    }\r\n                  }\r\n                  $scope.items[i] = $scope.contacts[0].items[i].idContact;\r\n                }\r\n\r\n                if (cont == $scope.selected.length) {\r\n                  $scope.suscribe = false;\r\n                } else {\r\n                  $scope.suscribe = true;\r\n                }\r\n              }\r\n              $scope.getAllInfoContactlist = function () {\r\n                restService.getOneContactlist(idContactlist).then(function (data) {\r\n                  setData.setData(data);\r\n                  $rootScope.contactlist = data;\r\n                });\r\n              }\r\n              //              $scope.progressbar = ngProgressFactory.createInstance();\r\n              //              $scope.progressbar.setColor(\"#ff6e00\");\r\n\r\n              $scope.showStatus = function (arr, value) {\r\n                var selected = [];\r\n                angular.forEach(arr, function (s) {\r\n                  angular.forEach(value, function (c) {\r\n                    if (s == c) {\r\n                      selected.push(s);\r\n                    }\r\n                  });\r\n                });\r\n                return selected.length ? selected.join(', ') : 'empty';\r\n              };\r\n\r\n              $scope.updateUser = function (data, key, idContact, idCustomfield) {\r\n                //          console.log(idCustomfield);\r\n                restService.editContact(idContact, key, data, idContactlist, idCustomfield).then(function (data) {\r\n                  notificationService.primary(data.message);\r\n                  //            $scope.getAll();\r\n                  $scope.getAllInfoContactlist();\r\n                }).catch(function (data) {\r\n                  notificationService.error(data.message);\r\n                  //            $scope.getAll();\r\n                });\r\n              }\r\n\r\n              $scope.stringfieldsprimary = function (field) {\r\n                var string = field;\r\n                switch (field) {\r\n                  case \"name\":\r\n                    string = \"Nombre\";\r\n                    break;\r\n                  case \"lastname\":\r\n                    string = \"Apellido\";\r\n                    break;\r\n                  case \"email\":\r\n                    string = \"Correo electronico\";\r\n                    break;\r\n                  case \"phone\":\r\n                    string = \"Telefono\";\r\n                    break;\r\n                  case \"birthdate\":\r\n                    string = \"Fecha de nacimiento\";\r\n                    break;\r\n                  case \"indicative\":\r\n                    string = \"Indicativo\";\r\n                    break;\r\n                  case \"description\":\r\n                    string = \"Descripción\";\r\n                    break;\r\n                }\r\n                return string;\r\n              }\r\n              \r\n              //CONTAR LA CANTIDAD DE CONTACTOS EN LA LISTA DE CONTACTOS\r\n              $scope.validateTotalContacts = function(idContactlist, typeExport){\r\n                $scope.idContactlist = idContactlist;\r\n                $scope.typeExport = typeExport;\r\n                var data = {\r\n                  idContactlist: idContactlist,\r\n                  typeExport: typeExport\r\n                };\r\n                restService.validateTotalContacts(data).then(function (res) {\r\n                  $scope.totalContacts = res[\"totalContacts\"];\r\n                  if($scope.totalContacts >= 15000){\r\n                    openModal('moreExport');\r\n                  }else{\r\n                    var url = fullUrlBase + \"contact/export/\"+$scope.idContactlist+\"/\"+$scope.typeExport;\r\n                    window.location.href =url;\r\n                  }\r\n                });\r\n              };\r\n\r\n              $scope.validateEmail = function() {\r\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                var test = re.test($scope.emailExport);\r\n                if(test){\r\n                  $scope.flagEmail = false;\r\n                  var data = {\r\n                    idContactlist: $scope.idContactlist,\r\n                    typeExport: $scope.typeExport,\r\n                    email: $scope.emailExport\r\n                  };\r\n                  restService.exportMoreContacts(data).then(function (res) {\r\n                    $scope.closeModalMoreExport();\r\n                    openModal('moreExportConfirmation');\r\n                  });\r\n                }else{\r\n                  $scope.flagEmail = true;\r\n                }\r\n              }\r\n\r\n              $scope.closeModalMoreExport =  function(){\r\n                closeModal('moreExport');\r\n              };\r\n\r\n              $scope.closeModalMoreExportConfirmation =  function(){\r\n                $scope.emailExport = \"\";\r\n                closeModal('moreExportConfirmation');\r\n              };\r\n\r\n              $scope.stringsearch = -1;\r\n              $scope.searchcontacts = function () {\r\n                $scope.stringsearch = $scope.search;\r\n                $scope.page = 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.clear = function () {\r\n                $scope.stringsearch = -1\r\n                $scope.search = undefined;\r\n                $scope.getAll();\r\n              };\r\n              $scope.initial = 0;\r\n              $scope.page = 1;\r\n              $scope.idContactlist = idContactlist;\r\n\r\n              $scope.forward = function () {\r\n                //                console.log($scope.contacts);\r\n                $scope.progressbar = false;\r\n                $scope.initial += 1;\r\n                $scope.page += 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.fastforward = function () {\r\n                $scope.progressbar = false;\r\n                $scope.initial = ($scope.contacts.total_pages - 1);\r\n                $scope.page = $scope.contacts.total_pages;\r\n                $scope.getAll();\r\n              };\r\n              $scope.backward = function () {\r\n                $scope.progressbar = false;\r\n                $scope.initial -= 1;\r\n                $scope.page -= 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.fastbackward = function () {\r\n                $scope.progressbar = false;\r\n                $scope.initial = 0;\r\n                $scope.page = 1;\r\n                $scope.getAll();\r\n              };\r\n              $scope.getAll = function () {               \r\n                if($scope.statePrin != $scope.stateend){\r\n                  $scope.initial = 0;\r\n                  $scope.page = 1;\r\n                }\r\n                \r\n                $scope.progressbar = false;\r\n                restService.getAll($scope.initial, $scope.idContactlist, $scope.stringsearch, $scope.stateend).then(function (data) {\r\n                  \r\n                  $scope.statePrin = $scope.stateend;\r\n                  \r\n                  if (data.total == 0) {\r\n                    $scope.loading = true;\r\n                    $scope.show = false;\r\n                    $scope.showList = true;\r\n                  } else {\r\n                    $scope.loading = false;\r\n                    $scope.show = true;\r\n                    $scope.showList = false;\r\n                  }\r\n                  $scope.contacts = data;\r\n                  for (i = 0; i < $scope.contacts[0].items.length; i++) {\r\n                    $scope.items[i] = $scope.contacts[0].items[i].idContact;\r\n                  }\r\n                  $scope.progressbar = true;\r\n                });\r\n                restService.getAllIndicatives().then(function (data) {\r\n                  $scope.indicative = data;\r\n                });\r\n                restService.customfieldselect(idContactlist).then(function (data) {\r\n                  $scope.arr = [];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    if (data[i].type == \"Select\" || data[i].type == \"Multiselect\")\r\n                      $scope.arr[data[i].idCustomfield] = data[i].value;\r\n                  }\r\n\r\n                  //                  $scope.to();\r\n                });\r\n              };\r\n              $scope.changestatus = function (contactlist, idContactlist, status) {\r\n                $scope.estatusUnsuscribe = status;\r\n                $scope.idcontactUnsubscribe = contactlist.idContact;\r\n                $scope.idcontactlistUnsubscribe = idContactlist;\r\n                $scope.email = contactlist.email;\r\n                $scope.indicative = contactlist.indicative;\r\n                $scope.phone = contactlist.phone;\r\n                openModal('deletedOption');\r\n              };\r\n              $scope.unsubscribe = function () {\r\n                if (!angular.isUndefined($scope.unsubscribeOnly) && $scope.unsubscribeOnly == true) {\r\n                  $scope.typeUnsubscribe = 'unsubscribeOnly';\r\n                } else if (!angular.isUndefined($scope.unsubscribeAll) && $scope.unsubscribeAll == true) {\r\n                  $scope.typeUnsubscribe = 'unsubscribeAll';\r\n                } else {\r\n                  notificationService.error(\"Debe seleccionar un modo para desuscripció\");\r\n                  return;\r\n                }\r\n\r\n                closeModal('deletedOption');\r\n                $scope.progressbar3 = false;\r\n                openModal('waiting');\r\n                let data = {\r\n                  idContact: $scope.idcontactUnsubscribe,\r\n                  idContactlist: $scope.idcontactlistUnsubscribe,\r\n                  email: $scope.email,\r\n                  indicative: $scope.indicative,\r\n                  phone: $scope.phone,\r\n                  type: $scope.typeUnsubscribe,\r\n                  status: $scope.estatusUnsuscribe\r\n                };\r\n\r\n                restService.changestatus(data).then(function (data) {\r\n                  closeModal('waiting');\r\n                  $scope.progressbar3 = true;\r\n                  $scope.getAll();\r\n                  $scope.getAllInfoContactlist();\r\n                  notificationService.primary(data.menssage);\r\n                });\r\n              }\r\n\r\n              $scope.setSuscribe = function (data) {\r\n                $scope.suscribe = data;\r\n                $scope.changeSuscribeSelected();\r\n                //                console.log(data);\r\n              }\r\n              $scope.changeSuscribeSelected = function () {\r\n                openModal('waiting');\r\n                restService.changesuscribeselected($scope.selected, $scope.idContactlist, $scope.suscribe).then(function (data) {\r\n                  $scope.selected = [];\r\n                  $scope.getAllInfoContactlist();\r\n                  $scope.getAll();\r\n                  closeModal('waiting');\r\n                  notificationService.primary(data.message);\r\n                });\r\n\r\n              };\r\n              $scope.getAll();\r\n              //console.log(relativeUrlBase + \" \" + fullUrlBase + \" \" + templateBase);\r\n              $scope.confirmDelete = function (contactlist, idContactlist) {\r\n                $scope.idContact = contactlist.idContact;\r\n                $scope.idContactlist = idContactlist;\r\n                $scope.email = contactlist.email;\r\n                $scope.indicative = contactlist.indicative;\r\n                $scope.phone = contactlist.phone;\r\n                openModal('confirmDelete');\r\n              };\r\n\r\n              $scope.confirmDeleteSelected = function () {\r\n                openModal('confirmDeleteSelected');\r\n              };\r\n\r\n              $scope.deleteContact = function () {\r\n                if (!angular.isUndefined($scope.deletedOnly) && $scope.deletedOnly == true) {\r\n                  $scope.typeDeleted = 'deletedOnly';\r\n                } else if (!angular.isUndefined($scope.deletedAll) && $scope.deletedAll == true) {\r\n                  $scope.typeDeleted = 'deletedAll';\r\n                } else {\r\n                  notificationService.error(\"Debe seleccionar un metodo para eliminación del contacto\");\r\n                  return;\r\n                }\r\n\r\n                let data = {\r\n                  idContact: $scope.idContact,\r\n                  idContactlist: $scope.idContactlist,\r\n                  email: $scope.email,\r\n                  indicative: $scope.indicative,\r\n                  phone: $scope.phone,\r\n                  type: $scope.typeDeleted\r\n                }\r\n                closeModal('confirmDelete');\r\n                $scope.progressbar3 = false;\r\n                openModal('waiting');\r\n                restService.deleteContact(data).then(function (data) {\r\n                  notificationService.warning(data.message);\r\n                  closeModal('confirmDelete');\r\n                  $scope.getAllInfoContactlist();\r\n                  $scope.getAll();\r\n                  closeModal('waiting');\r\n\r\n                });\r\n              };\r\n              $scope.deleteContactSelected = function () {\r\n                openModal('waiting');\r\n                restService.deleteContactSelected($scope.selected, $scope.idContactlist).then(function (data) {\r\n                  notificationService.warning(data.message);\r\n                  closeModal('confirmDeleteSelected');\r\n                  $scope.selected = [];\r\n                  $scope.getAllInfoContactlist();\r\n                  $scope.getAll();\r\n                  closeModal('waiting');\r\n                });\r\n              };\r\n              $scope.getAllInfoContactlist();\r\n              $rootScope.deleteContact = function () {\r\n\r\n              };\r\n\r\n              $scope.confirmMoveSelected = function () {\r\n                openModal('confirmMoveSelected');\r\n                restService.getContactlistToMoveSelected($scope.idContactlist).then(function (data) {\r\n                  $scope.contactliststomove = data.contactliststomove;\r\n                });\r\n              }\r\n              $scope.confirmCopySelected = function () {\r\n                openModal('confirmCopySelected');\r\n                restService.getContactlistToMoveSelected($scope.idContactlist).then(function (data) {\r\n                  $scope.contactliststomove = data.contactliststomove;\r\n                });\r\n              }\r\n\r\n              $scope.validateContactSelected = function (type) {\r\n                openModal('waiting');\r\n                restService.validateCopyContactSelected($scope.selectedOne, $scope.selected, $scope.idContactlist).then(function (data) {\r\n                  closeModal('confirmCopySelected');\r\n                  closeModal('confirmMoveSelected');\r\n                  $scope.type = type;\r\n                  if (data.error == 'isError') {\r\n                    $scope.arrayError = data.arrayError;\r\n                    closeModal('waiting');\r\n                    openModal('validateCopySelected');\r\n                  } else if (data.error == 'noError') {\r\n                    if (type == 'copy') {\r\n                      $scope.copyContactSelected();\r\n                    } else if (type == 'move') {\r\n                      $scope.moveContactSelected();\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n              $scope.executeSelected = function () {\r\n                if ($scope.type == 'copy') {\r\n                  $scope.copyContactSelected();\r\n                } else if ($scope.type == 'move') {\r\n                  $scope.moveContactSelected();\r\n                }\r\n              }\r\n              $scope.copyContactSelected = function () {\r\n                openModal('waiting');\r\n                restService.copyContactSelected($scope.selectedOne, $scope.selected, $scope.idContactlist).then(function (data) {\r\n                  $scope.selected = [];\r\n                  $scope.selectedOne = [];\r\n                  closeModal('confirmCopySelected');\r\n                  closeModal('validateCopySelected');\r\n                  notificationService.success(data.message);\r\n                  $scope.getAllInfoContactlist();\r\n                  $scope.getAll();\r\n                  closeModal('waiting');\r\n                });\r\n                closeModal('waiting');\r\n              }\r\n              $scope.moveContactSelected = function () {\r\n                openModal('waiting');\r\n                restService.moveContactSelected($scope.selectedOne, $scope.selected, $scope.idContactlist).then(function (data) {\r\n                  $scope.selected = [];\r\n                  $scope.selectedOne = [];\r\n                  closeModal('confirmMoveSelected');\r\n                  closeModal('validateCopySelected');\r\n                  notificationService.success(data.message);\r\n                  $scope.getAllInfoContactlist();\r\n                  $scope.getAll();\r\n                  closeModal('waiting');\r\n                });\r\n                closeModal('waiting');\r\n              }\r\n              $scope.setSelectedEmpty = function () {\r\n                $scope.selectedOne = [];\r\n              }\r\n\r\n              //Seleccionar solo uno\r\n              //              $scope.itemsOne = [];\r\n              $scope.selectedOne = [];\r\n\r\n              $scope.select = function (item) {\r\n                $scope.selectedOne = [];\r\n                $scope.selectedOne.push(item);\r\n              };\r\n\r\n              $scope.exists = function (item, list) {\r\n                return list.indexOf(item) > -1;\r\n              };\r\n              //Fin Seleccionar solo uno\r\n\r\n              $scope.searchstate = function () {\r\n                if ($scope.state != null) {\r\n                  //console.log($scope.state);\r\n                  if ($scope.state == \"Todos\"){\r\n                    $scope.stateend = \"\";\r\n                    $scope.typeExport = 0;\r\n                  }else{\r\n                    $scope.stateend = $scope.state;\r\n                    switch ($scope.stateend) {\r\n                      case \"Activos\":\r\n                        $scope.typeExport = 1;\r\n                        break;\r\n                      case \"Desuscritos\":\r\n                        $scope.typeExport = 2;\r\n                        break;\r\n                      case \"Rebotados\":\r\n                        $scope.typeExport = 3;\r\n                        break;\r\n                      case \"Spam\":\r\n                        $scope.typeExport = 4;\r\n                        break;\r\n                      case \"Bloqueados\":\r\n                        $scope.typeExport = 5;\r\n                        break;\r\n                      default:\r\n                        $scope.typeExport = 0;\r\n                        break;\r\n                    }\r\n                  }\r\n                  $scope.getAll();\r\n                }\r\n              };\r\n              \r\n              $scope.closeModalUnsub = function () {\r\n                closeModal('deletedOption');\r\n                $scope.getAll();\r\n              };\r\n            }])\r\n          .controller('ContactImportController', ['$scope', 'restService', function ($scope, restService) {\r\n\r\n\r\n              $scope.uploadCsv = function () {\r\n                var data = {\r\n                  filecsv: $scope.importCsv\r\n                };\r\n                restService.contactcsv(data).then(function (res) {\r\n                  console.log(res);\r\n\r\n                });\r\n              };\r\n\r\n              $scope.typevalues = [];\r\n\r\n              if (typeof (customfield) == 'undefined') {\r\n                $scope.customfield = 0;\r\n              } else {\r\n                $scope.customfield = customfield;\r\n              }\r\n\r\n              if (typeof (dataCsv) == 'undefined') {\r\n                $scope.dataCsv = 0;\r\n              } else {\r\n                var array = [];\r\n                $scope.delimiter = ',';\r\n                $scope.head = 0;\r\n                for (var i = $scope.head; i < dataCsv.length; i++) {\r\n                  var sepa = dataCsv[i].split($scope.delimiter);\r\n                  array.push(sepa);\r\n                }\r\n                $scope.dataCsv = array;\r\n                //console.log($scope.delimiter);\r\n              }\r\n\r\n              $scope.adjustDelimiter = function () {\r\n                if (typeof ($scope.header) == 'undefined') {\r\n                  $scope.showArrayCsv(0, $scope.delimiter);\r\n                } else {\r\n                  if ($scope.header) {\r\n                    $scope.showArrayCsv(0, $scope.delimiter);\r\n                  } else {\r\n                    $scope.showArrayCsv(0, $scope.delimiter);\r\n                  }\r\n\r\n                }\r\n              }\r\n\r\n              $scope.showArrayCsv = function (start, delimiter) {\r\n                var array = [];\r\n                for (var i = start; i < dataCsv.length; i++) {\r\n                  var sepa = dataCsv[i].split(delimiter);\r\n                  array.push(sepa);\r\n                }\r\n                $scope.dataCsv = array;\r\n              }\r\n\r\n            }])\r\n          .controller('NewbatchController', ['$scope', 'restService', 'notificationService', '$window', 'arrayConstruct', 'setData', '$rootScope', function ($scope, restService, notificationService, $window, arrayConstruct, setData, $rootScope) {\r\n              $scope.initComponents = function () {\r\n                restService.getAllIndicatives().then(function (response) {\r\n                  $scope.listIndicatives = response;\r\n                }).catch(function (data) {\r\n                  notificationService.error(data.message);\r\n                });\r\n              };\r\n              $rootScope.contactlist = setData.getData();\r\n              $scope.limit = 30;\r\n              $scope.batch = [];\r\n              $scope.batchs = [];\r\n              $scope.isScreenSize = $(window).width();\r\n\r\n              $scope.misc = {\r\n                loaderSaveShow: false,\r\n                disabledSaveButton: false\r\n              }\r\n\r\n              $scope.functions = {\r\n                dateBeforeRender: function ($dates) {\r\n                  for (var i = 0; i < $dates.length; i++) {\r\n                    if (new Date().getTime() < $dates[i].utcDateValue) {\r\n                      $dates[i].selectable = false;\r\n                    }\r\n                  }\r\n                }\r\n              };\r\n\r\n              $scope.validateEmptyBatch = function () {\r\n                if ((typeof $scope.batch.email == \"undefined\" || $scope.batch.email == \"\") && (typeof $scope.batch.indicative == \"undefined\" || $scope.batch.indicative == \"\") && (typeof $scope.batch.phone == \"undefined\" || $scope.batch.phone == \"\")) {\r\n                  notificationService.error(\"Debes ingresar por lo menos el email o el teléfono con su indicativo\");\r\n                  return false;\r\n                } else if ($scope.batch.indicative && (typeof $scope.batch.phone == \"undefined\" || $scope.batch.phone == \"\")) {\r\n                  notificationService.error(\"Debes ingresar el número de teléfono\");\r\n                  return false;\r\n                } else if ($scope.batch.phone && (typeof $scope.batch.indicative == \"undefined\" || $scope.batch.indicative == \"\")) {\r\n                  notificationService.error(\"Debes seleccionar el indicativo\");\r\n                  return false;\r\n                } else if ($scope.batchs.length >= $scope.limit) {\r\n                  notificationService.error(\"Sólo puede agregar \" + $scope.limit + \" contactos rápidamente\");\r\n                  return false;\r\n                } else if (typeof $scope.batch.indicative !== \"undefined\" && typeof $scope.batch.phone !== \"undefined\") {\r\n                  var length = $scope.listIndicatives.length;\r\n                  var country;\r\n                  for (var index = 0; index < length; index++) {\r\n                    if ($scope.batch.indicative == $scope.listIndicatives[index].idCountry) {\r\n                      country = $scope.listIndicatives[index];\r\n                      break;\r\n                    }\r\n                  }\r\n                  $scope.batch.nameIndicative = \"(+\" + country.phoneCode + \") \" + country.name;\r\n                  var phone = String($scope.batch.phone);\r\n                  if (phone.length < country.minDigits || phone.length > country.maxDigits) {\r\n                    notificationService.error(\"El número telefónico no cumple con la cantidad de digitos mínimos y máximos de acuerdo al país\");\r\n                    return false;\r\n                  }\r\n                }\r\n                $scope.addBatchtoBatchs();\r\n\r\n              };\r\n\r\n              $scope.addBatchtoBatchs = function () {\r\n                $scope.batchs.push($scope.batch);\r\n                $scope.batch = [];\r\n                $(\"#batchemail\").focus();\r\n              }\r\n\r\n              $scope.removeBatchtoBatchs = function (index) {\r\n                $scope.batchs.splice(index, 1);\r\n              }\r\n              $scope.validateContactBatch = function () {\r\n\r\n                if ($scope.batchs.length <= 0) {\r\n                  notificationService.error(\"Debes ingresar por lo menos un contacto\");\r\n                } else {\r\n                  $scope.misc.disabledSaveButton = true;\r\n                  $scope.misc.loaderSaveShow = true;\r\n                  restService.validatecontactbatch(arrayConstruct.toObject($scope.batchs), $rootScope.contactlist.idContactlist).then(function (data) {\r\n                    $scope.contacterror = data;\r\n                    if ($scope.contacterror.length > 0) {\r\n                      $scope.misc.disabledSaveButton = false;\r\n                      $scope.misc.loaderSaveShow = false;\r\n                      openModal();\r\n                    } else {\r\n                      $scope.addcontactbatch();\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n\r\n              $scope.addcontactbatch = function () {\r\n                if (!$scope.validatePhones()) {\r\n                  $scope.misc.disabledSaveButton = false;\r\n                  $scope.misc.loaderSaveShow = false;\r\n                }\r\n\r\n                restService.addcontactbatch(arrayConstruct.toObject($scope.batchs), idContactlist).then(function (data) {\r\n                  $window.location.href = '#/';\r\n                  notificationService.success(data.message);\r\n                });\r\n              };\r\n\r\n              $scope.validatePhones = function () {\r\n                var batchsLength = $scope.batchs.length;\r\n                for (var i = 0; i < batchsLength; i++) {\r\n                  if (typeof $scope.batchs[i].indicative !== \"undefined\" && typeof $scope.batchs[i].phone !== \"undefined\") {\r\n                    var length = $scope.listIndicatives.length;\r\n                    var country;\r\n                    for (var index = 0; index < length; index++) {\r\n                      if ($scope.batchs[i].indicative == $scope.listIndicatives[index].idCountry) {\r\n                        country = $scope.listIndicatives[index];\r\n                        break;\r\n                      }\r\n                    }\r\n                    var phone = String($scope.batchs[i].phone);\r\n                    if (phone.length < country.minDigits || phone.length > country.maxDigits) {\r\n                      notificationService.error(\"El número <b>\" + $scope.batchs[i].phone + \"</b> telefónico no cumple con la cantidad de digitos mínimos y máximos de acuerdo al país\");\r\n                      return false;\r\n                    }\r\n                  }\r\n                }\r\n\r\n                return true;\r\n              };\r\n\r\n              $scope.updateNameIndicative = function (i) {\r\n                var length = $scope.listIndicatives.length;\r\n                var country;\r\n                for (var index = 0; index < length; index++) {\r\n                  if ($scope.batchs[i].indicative == $scope.listIndicatives[index].idCountry) {\r\n                    country = $scope.listIndicatives[index];\r\n                    break;\r\n                  }\r\n                }\r\n                $scope.batchs[i].nameIndicative = \"(+\" + country.phoneCode + \") \" + country.name;\r\n              };\r\n            }])\r\n          .controller('HistoryController', ['$scope', 'restService', 'notificationService', '$window', 'arrayConstruct', 'setData', '$rootScope', function ($scope, restService, notificationService, $window, arrayConstruct, setData, $rootScope) {\r\n              $scope.fullUrlBase = fullUrlBase;\r\n              $scope.templateBase = templateBase;\r\n              $scope.idContactlist = idContactlist;\r\n              $scope.idContact = idContact;\r\n\r\n              $scope.getOneContact = function () {\r\n                restService.getOneContact($scope.idContact).then(function (data) {\r\n                  $scope.contact = data;\r\n                });\r\n              }\r\n\r\n              //TODO SOBRE ENVIOS DE SMS\r\n              $scope.initialSMS = 0;\r\n              $scope.pageSMS = 1;\r\n              $scope.nameSMS = \"\";\r\n              $scope.forwardSMS = function () {\r\n                $scope.initialSMS += 1;\r\n                $scope.pageSMS += 1;\r\n                $scope.getAllSMS();\r\n              };\r\n              $scope.fastforwardSMS = function () {\r\n                $scope.initialSMS = ($scope.sms.total_pages - 1);\r\n                $scope.pageSMS = $scope.sms.total_pages;\r\n                $scope.getAllSMS();\r\n              };\r\n              $scope.backwardSMS = function () {\r\n                $scope.initialSMS -= 1;\r\n                $scope.pageSMS -= 1;\r\n                $scope.getAllSMS();\r\n              };\r\n              $scope.fastbackwardSMS = function () {\r\n                $scope.initialSMS = 0;\r\n                $scope.pageSMS = 1;\r\n                $scope.getAllSMS();\r\n              };\r\n\r\n              $scope.getAllSMS = function () {\r\n                name = \"1\";\r\n                if ($scope.nameSMS) {\r\n                  var name = $scope.nameSMS;\r\n                }\r\n                restService.getAllSMS($scope.idContact, $scope.initialSMS, name).then(function (data) {\r\n                  $scope.sms = data;\r\n                });\r\n              }\r\n              //FIN DE TODO SOBRE ENVIOS DE SMS\r\n\r\n              //TODO SOBRE ENVIOS DE CORREO\r\n              $scope.initialMAIL = 0;\r\n              $scope.pageMAIL = 1;\r\n              $scope.nameMAIL = \"\";\r\n              $scope.forwardMAIL = function () {\r\n                $scope.initialMAIL += 1;\r\n                $scope.pageMAIL += 1;\r\n                $scope.getAllMAIL();\r\n              };\r\n              $scope.fastforwardMAIL = function () {\r\n                $scope.initialMAIL = ($scope.mail.total_pages - 1);\r\n                $scope.pageMAIL = $scope.mail.total_pages;\r\n                $scope.getAllMAIL();\r\n              };\r\n              $scope.backwardMAIL = function () {\r\n                $scope.initialMAIL -= 1;\r\n                $scope.pageMAIL -= 1;\r\n                $scope.getAllMAIL();\r\n              };\r\n              $scope.fastbackwardMAIL = function () {\r\n                $scope.initialMAIL = 0;\r\n                $scope.pageMAIL = 1;\r\n                $scope.getAllMAIL();\r\n              };\r\n\r\n              $scope.getAllMAIL = function () {\r\n                name = \"1\";\r\n                if ($scope.nameMAIL) {\r\n                  var name = $scope.nameMAIL;\r\n                }\r\n                restService.getAllMAIL($scope.idContact, $scope.initialMAIL, name).then(function (data) {\r\n                  $scope.mail = data;\r\n                });\r\n              }\r\n              //FIN DE TODO SOBRE ENVIOS DE CORREO\r\n\r\n              //Previsualizar\r\n              $scope.previewmailtempcont = function (id) {\r\n                restService.previewMailTemplateContent(id).then(function (data) {\r\n\r\n                  var e = data.template;\r\n                  $('#content-preview').empty();\r\n                  $('<iframe frameborder=\"0\" width=\"100%\" height=\"100%\"/>').appendTo('#content-preview').contents().find('body').append(e);\r\n                  $('#myModal').modal('show');\r\n                });\r\n              };\r\n              //Fin previsualizar\r\n\r\n              $scope.getOneContact();\r\n              $scope.getAllSMS();\r\n              $scope.getAllMAIL();\r\n            }])\r\n          .controller('NewcontactController', ['$scope', 'restService', 'notificationService', '$window', '$rootScope', 'setData', function ($scope, restService, notificationService, $window, $rootScope, setData) {\r\n              $scope.progressbar = true;\r\n              $scope.contact = new Object();\r\n\r\n              $scope.initComponents = function () {\r\n                restService.getAllIndicatives().then(function (response) {\r\n                  $scope.listIndicatives = response;\r\n                }).catch(function (data) {\r\n                  notificationService.error(data.message);\r\n                });\r\n              };\r\n\r\n              $scope.functions = {\r\n                dateBeforeRender: function ($dates) {\r\n                  for (var i = 0; i < $dates.length; i++) {\r\n                    if (new Date().getTime() < $dates[i].utcDateValue) {\r\n                      $dates[i].selectable = false;\r\n                    }\r\n                  }\r\n                }\r\n              };\r\n\r\n              $scope.addContact = function () {\r\n                $scope.progressbar = false;\r\n                $scope.contact.validateConfirm = false;\r\n                if($scope.contact.email != undefined){\r\n                  $scope.contact.email = $scope.contact.email.toLowerCase();\r\n                }\r\n                if (typeof $scope.contact.indicative !== \"undefined\" && typeof $scope.contact.phone !== \"undefined\") {\r\n                  var length = $scope.listIndicatives.length;\r\n                  var country;\r\n                  for (var index = 0; index < length; index++) {\r\n                    if ($scope.contact.indicative == $scope.listIndicatives[index].idCountry) {\r\n                      country = $scope.listIndicatives[index];\r\n                      break;\r\n                    }\r\n                  }\r\n                  if ($scope.contact.phone.length < country.minDigits || $scope.contact.phone.length > country.maxDigits) {\r\n                    notificationService.error(\"El número telefónico no cumple con la cantidad de digitos mínimos y máximos de acuerdo al país\");\r\n                    $scope.progressbar = true;\r\n                    $scope.contact.validateConfirm = true;\r\n                    return false;\r\n                  }\r\n                }\r\n\r\n                restService.addContact($scope.contact, idContactlist).then(function (data) {\r\n                  notificationService.success(data.message);\r\n                  $scope.getAllInfoContactlist();\r\n                  $window.location.href = '#/';\r\n                }).catch(function (data) {\r\n                  $scope.progressbar = true;\r\n                  if (data.code && (data.code == 409 || data.code == 410)) {\r\n                    $scope.errorCreateContact = data;\r\n                    openModalConfirm();\r\n                  }\r\n\r\n                });\r\n              };\r\n\r\n              $scope.getAllInfoContactlist = function () {\r\n                restService.getOneContactlist(idContactlist).then(function (data) {\r\n                  setData.setData(data);\r\n                  $rootScope.contactlist = data;\r\n                });\r\n              };\r\n\r\n              $scope.saveContactConfirm = function () {\r\n                $scope.progressbar = false;\r\n                $scope.contact.validateConfirm = true;\r\n                restService.addContact($scope.contact, idContactlist).then(function (data) {\r\n                  $scope.getAllInfoContactlist();\r\n                  notificationService.success(data.message);\r\n                  $window.location.href = '#/';\r\n                }).catch(function (data) {\r\n                  $scope.progressbar = true;\r\n                  notificationService.error(data.message);\r\n                });\r\n              };\r\n            }])\r\n          .controller('indexController', ['$scope', '$routeParams', '$window', 'restService', 'notificationService', 'setData', '$rootScope', function ($scope, $routeParams, $window, restService, notificationService, setData, $rootScope) {\r\n              restService.getOneContactlist(idContactlist).then(function (data) {\r\n                //                console.log(data);\r\n                setData.setData(data);\r\n                $rootScope.contactlist = setData.getData();\r\n\r\n              });\r\n\r\n            }]);\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2NvbnRhY3QvY29udHJvbGxlcnMuanM/MjdiYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHFDQUFxQztBQUNoRSw2QkFBNkIsNEJBQTRCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixpQkFBaUI7QUFDakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBLDZDQUE2Qyx5QkFBeUIsZ0NBQWdDLElBQUksUUFBUSxJQUFJLFFBQVEsSUFBSSxRQUFRLElBQUksaUNBQWlDLEdBQUc7QUFDbEw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIscUNBQXFDO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQ0FBaUMsaUJBQWlCO0FBQ2xEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsb0JBQW9CO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1DQUFtQyxvQkFBb0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQ0FBaUMsbUJBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EscUNBQXFDLGdCQUFnQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7O0FBRUE7QUFDQTtBQUNBLCtCQUErQixrQkFBa0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGdCQUFnQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsZ0JBQWdCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsaUJBQWlCO0FBQ2pCOztBQUVBO0FBQ0E7QUFDQSxpQ0FBaUMsbUJBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsZ0JBQWdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZTs7QUFFZixhQUFhO0FBQ2IsQ0FBQyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcclxuICBhbmd1bGFyLm1vZHVsZSgnY29udGFjdC5jb250cm9sbGVycycsIFtdKVxyXG4gICAgICAgICAgLmNvbnRyb2xsZXIoJ0NvbnRhY3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAncmVzdFNlcnZpY2UnLCAnbm90aWZpY2F0aW9uU2VydmljZScsICckdGltZW91dCcsICckcm9vdFNjb3BlJywgJ3NldERhdGEnLCBmdW5jdGlvbiAoJHNjb3BlLCByZXN0U2VydmljZSwgbm90aWZpY2F0aW9uU2VydmljZSwgJHRpbWVvdXQsICRyb290U2NvcGUsIHNldERhdGEpIHtcclxuICAgICAgICAgICAgICAkc2NvcGUuZnVsbFVybEJhc2UgPSBmdWxsVXJsQmFzZTtcclxuICAgICAgICAgICAgICAkc2NvcGUudGVtcGxhdGVCYXNlID0gdGVtcGxhdGVCYXNlO1xyXG4gICAgICAgICAgICAgICRzY29wZS5zaG93ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAkc2NvcGUuc2hvd0xpc3QgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICRzY29wZS5jb250YWN0bGlzdCA9IFt7fV07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmNoYW5nZXN0YXR1cyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLnN1c2NyaWJlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAkc2NvcGUucHJvZ3Jlc3NiYXIzID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAkc2NvcGUuc3RhdGVlbmQgPSBcIlwiO1xyXG4gICAgICAgICAgICAgICRzY29wZS5zdGF0ZVByaW4gPSBcIlRvZG9zXCI7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmlkY29udGFjdFVuc3Vic2NyaWJlID0gbnVsbDtcclxuICAgICAgICAgICAgICAkc2NvcGUuaWRjb250YWN0bGlzdFVuc3Vic2NyaWJlID0gbnVsbDtcclxuICAgICAgICAgICAgICAkc2NvcGUudHlwZVVuc3Vic2NyaWJlID0gbnVsbDtcclxuICAgICAgICAgICAgICAkc2NvcGUuZXN0YXR1c1Vuc3VzY3JpYmUgPSBudWxsO1xyXG4gICAgICAgICAgICAgICRzY29wZS50eXBlRGVsZXRlZCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLnR5cGVFeHBvcnQgPSAwO1xyXG4gICAgICAgICAgICAgICRzY29wZS5mbGFnRW1haWwgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAkc2NvcGUuaWRDb250YWN0bGlzdCA9IFwiXCI7XHJcblxyXG4gICAgICAgICAgICAgIC8vIFNlIGxpc3RhbiBsb3MgZXN0YWRvcyBwYXJhIHJlYWxpemFyIGVsIGZpbHRyb1xyXG4gICAgICAgICAgICAgICRzY29wZS5zdGF0dXMgPSBbXHJcbiAgICAgICAgICAgICAgICBcIlRvZG9zXCIsXHJcbiAgICAgICAgICAgICAgICBcIkFjdGl2b3NcIixcclxuICAgICAgICAgICAgICAgIFwiRGVzdXNjcml0b3NcIixcclxuICAgICAgICAgICAgICAgIFwiUmVib3RhZG9zXCIsXHJcbiAgICAgICAgICAgICAgICBcIlNwYW1cIixcclxuICAgICAgICAgICAgICAgIFwiQmxvcXVlYWRvc1wiXHJcbiAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICRzY29wZS5zdGF0ZSA9IFwiVG9kb3NcIjtcclxuXHJcbiAgICAgICAgICAgICAgLy9TZWxlY2Npb25hciB1bm8gbyB0b2Rvc1xyXG4gICAgICAgICAgICAgICRzY29wZS5pdGVtcyA9IFtdO1xyXG4gICAgICAgICAgICAgICRzY29wZS5zZWxlY3RlZCA9IFtdO1xyXG4gICAgICAgICAgICAgICRzY29wZS50b2dnbGUgPSBmdW5jdGlvbiAoaXRlbSwgbGlzdCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGlkeCA9IGxpc3QuaW5kZXhPZihpdGVtKTtcclxuICAgICAgICAgICAgICAgIGlmIChpZHggPiAtMSkge1xyXG4gICAgICAgICAgICAgICAgICBsaXN0LnNwbGljZShpZHgsIDEpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmV2YWx1YXRlU3VzY3JpYmUoKTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICRzY29wZS5leGlzdHMgPSBmdW5jdGlvbiAoaXRlbSwgbGlzdCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGxpc3QuaW5kZXhPZihpdGVtKSA+IC0xO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmlzSW5kZXRlcm1pbmF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAoJHNjb3BlLnNlbGVjdGVkLmxlbmd0aCAhPT0gMCAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc2VsZWN0ZWQubGVuZ3RoICE9PSAkc2NvcGUuaXRlbXMubGVuZ3RoKTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICRzY29wZS5pc0NoZWNrZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJHNjb3BlLnNlbGVjdGVkLmxlbmd0aCA9PT0gJHNjb3BlLml0ZW1zLmxlbmd0aDtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICRzY29wZS50b2dnbGVBbGwgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCRzY29wZS5zZWxlY3RlZC5sZW5ndGggPT09ICRzY29wZS5pdGVtcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmlkU2VsZWN0ZWQgPSAkc2NvcGUuc2VsZWN0ZWQ7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5zZWxlY3RlZCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkc2NvcGUuc2VsZWN0ZWQubGVuZ3RoID09PSAwIHx8ICRzY29wZS5zZWxlY3RlZC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5zZWxlY3RlZCA9ICRzY29wZS5pdGVtcy5zbGljZSgwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICRzY29wZS5ldmFsdWF0ZVN1c2NyaWJlKCk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAvL0ZpbiBTZWxlY2Npb25hciB1bm8gbyB0b2Rvc1xyXG4gICAgICAgICAgICAgICRzY29wZS5ldmFsdWF0ZVN1c2NyaWJlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvbnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8ICRzY29wZS5jb250YWN0c1swXS5pdGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgJHNjb3BlLnNlbGVjdGVkLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCgkc2NvcGUuY29udGFjdHNbMF0uaXRlbXNbaV0uaWRDb250YWN0ID09ICRzY29wZS5zZWxlY3RlZFtqXSkgJiYgKCRzY29wZS5jb250YWN0c1swXS5pdGVtc1tpXS5zdGF0dXMgPT0gXCJ1bnN1YnNjcmliZWRcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbnQrKztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLml0ZW1zW2ldID0gJHNjb3BlLmNvbnRhY3RzWzBdLml0ZW1zW2ldLmlkQ29udGFjdDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoY29udCA9PSAkc2NvcGUuc2VsZWN0ZWQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5zdXNjcmliZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnN1c2NyaWJlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbEluZm9Db250YWN0bGlzdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJlc3RTZXJ2aWNlLmdldE9uZUNvbnRhY3RsaXN0KGlkQ29udGFjdGxpc3QpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgc2V0RGF0YS5zZXREYXRhKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAkcm9vdFNjb3BlLmNvbnRhY3RsaXN0ID0gZGF0YTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyID0gbmdQcm9ncmVzc0ZhY3RvcnkuY3JlYXRlSW5zdGFuY2UoKTtcclxuICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyLnNldENvbG9yKFwiI2ZmNmUwMFwiKTtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLnNob3dTdGF0dXMgPSBmdW5jdGlvbiAoYXJyLCB2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHNlbGVjdGVkID0gW107XHJcbiAgICAgICAgICAgICAgICBhbmd1bGFyLmZvckVhY2goYXJyLCBmdW5jdGlvbiAocykge1xyXG4gICAgICAgICAgICAgICAgICBhbmd1bGFyLmZvckVhY2godmFsdWUsIGZ1bmN0aW9uIChjKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMgPT0gYykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQucHVzaChzKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWQubGVuZ3RoID8gc2VsZWN0ZWQuam9pbignLCAnKSA6ICdlbXB0eSc7XHJcbiAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLnVwZGF0ZVVzZXIgPSBmdW5jdGlvbiAoZGF0YSwga2V5LCBpZENvbnRhY3QsIGlkQ3VzdG9tZmllbGQpIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgIGNvbnNvbGUubG9nKGlkQ3VzdG9tZmllbGQpO1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZWRpdENvbnRhY3QoaWRDb250YWN0LCBrZXksIGRhdGEsIGlkQ29udGFjdGxpc3QsIGlkQ3VzdG9tZmllbGQpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS5wcmltYXJ5KGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsSW5mb0NvbnRhY3RsaXN0KCk7XHJcbiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuc3RyaW5nZmllbGRzcHJpbWFyeSA9IGZ1bmN0aW9uIChmaWVsZCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHN0cmluZyA9IGZpZWxkO1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChmaWVsZCkge1xyXG4gICAgICAgICAgICAgICAgICBjYXNlIFwibmFtZVwiOlxyXG4gICAgICAgICAgICAgICAgICAgIHN0cmluZyA9IFwiTm9tYnJlXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJsYXN0bmFtZVwiOlxyXG4gICAgICAgICAgICAgICAgICAgIHN0cmluZyA9IFwiQXBlbGxpZG9cIjtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgY2FzZSBcImVtYWlsXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc3RyaW5nID0gXCJDb3JyZW8gZWxlY3Ryb25pY29cIjtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgY2FzZSBcInBob25lXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc3RyaW5nID0gXCJUZWxlZm9ub1wiO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICBjYXNlIFwiYmlydGhkYXRlXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc3RyaW5nID0gXCJGZWNoYSBkZSBuYWNpbWllbnRvXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJpbmRpY2F0aXZlXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc3RyaW5nID0gXCJJbmRpY2F0aXZvXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJkZXNjcmlwdGlvblwiOlxyXG4gICAgICAgICAgICAgICAgICAgIHN0cmluZyA9IFwiRGVzY3JpcGNpw7NuXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RyaW5nO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAvL0NPTlRBUiBMQSBDQU5USURBRCBERSBDT05UQUNUT1MgRU4gTEEgTElTVEEgREUgQ09OVEFDVE9TXHJcbiAgICAgICAgICAgICAgJHNjb3BlLnZhbGlkYXRlVG90YWxDb250YWN0cyA9IGZ1bmN0aW9uKGlkQ29udGFjdGxpc3QsIHR5cGVFeHBvcnQpe1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmlkQ29udGFjdGxpc3QgPSBpZENvbnRhY3RsaXN0O1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnR5cGVFeHBvcnQgPSB0eXBlRXhwb3J0O1xyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICAgIGlkQ29udGFjdGxpc3Q6IGlkQ29udGFjdGxpc3QsXHJcbiAgICAgICAgICAgICAgICAgIHR5cGVFeHBvcnQ6IHR5cGVFeHBvcnRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICByZXN0U2VydmljZS52YWxpZGF0ZVRvdGFsQ29udGFjdHMoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS50b3RhbENvbnRhY3RzID0gcmVzW1widG90YWxDb250YWN0c1wiXTtcclxuICAgICAgICAgICAgICAgICAgaWYoJHNjb3BlLnRvdGFsQ29udGFjdHMgPj0gMTUwMDApe1xyXG4gICAgICAgICAgICAgICAgICAgIG9wZW5Nb2RhbCgnbW9yZUV4cG9ydCcpO1xyXG4gICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gZnVsbFVybEJhc2UgKyBcImNvbnRhY3QvZXhwb3J0L1wiKyRzY29wZS5pZENvbnRhY3RsaXN0K1wiL1wiKyRzY29wZS50eXBlRXhwb3J0O1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID11cmw7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS52YWxpZGF0ZUVtYWlsID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZSA9IC9eKChbXjw+KClbXFxdXFxcXC4sOzpcXHNAXFxcIl0rKFxcLltePD4oKVtcXF1cXFxcLiw7Olxcc0BcXFwiXSspKil8KFxcXCIuK1xcXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXF0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvO1xyXG4gICAgICAgICAgICAgICAgdmFyIHRlc3QgPSByZS50ZXN0KCRzY29wZS5lbWFpbEV4cG9ydCk7XHJcbiAgICAgICAgICAgICAgICBpZih0ZXN0KXtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmZsYWdFbWFpbCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBpZENvbnRhY3RsaXN0OiAkc2NvcGUuaWRDb250YWN0bGlzdCxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlRXhwb3J0OiAkc2NvcGUudHlwZUV4cG9ydCxcclxuICAgICAgICAgICAgICAgICAgICBlbWFpbDogJHNjb3BlLmVtYWlsRXhwb3J0XHJcbiAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgIHJlc3RTZXJ2aWNlLmV4cG9ydE1vcmVDb250YWN0cyhkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuY2xvc2VNb2RhbE1vcmVFeHBvcnQoKTtcclxuICAgICAgICAgICAgICAgICAgICBvcGVuTW9kYWwoJ21vcmVFeHBvcnRDb25maXJtYXRpb24nKTtcclxuICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmZsYWdFbWFpbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuY2xvc2VNb2RhbE1vcmVFeHBvcnQgPSAgZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwoJ21vcmVFeHBvcnQnKTtcclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuY2xvc2VNb2RhbE1vcmVFeHBvcnRDb25maXJtYXRpb24gPSAgZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICRzY29wZS5lbWFpbEV4cG9ydCA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCdtb3JlRXhwb3J0Q29uZmlybWF0aW9uJyk7XHJcbiAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLnN0cmluZ3NlYXJjaCA9IC0xO1xyXG4gICAgICAgICAgICAgICRzY29wZS5zZWFyY2hjb250YWN0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS5zdHJpbmdzZWFyY2ggPSAkc2NvcGUuc2VhcmNoO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2UgPSAxO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmNsZWFyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnN0cmluZ3NlYXJjaCA9IC0xXHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuc2VhcmNoID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmluaXRpYWwgPSAwO1xyXG4gICAgICAgICAgICAgICRzY29wZS5wYWdlID0gMTtcclxuICAgICAgICAgICAgICAkc2NvcGUuaWRDb250YWN0bGlzdCA9IGlkQ29udGFjdGxpc3Q7XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5mb3J3YXJkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJHNjb3BlLmNvbnRhY3RzKTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5wcm9ncmVzc2JhciA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmluaXRpYWwgKz0gMTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5wYWdlICs9IDE7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsKCk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAkc2NvcGUuZmFzdGZvcndhcmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUucHJvZ3Jlc3NiYXIgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5pbml0aWFsID0gKCRzY29wZS5jb250YWN0cy50b3RhbF9wYWdlcyAtIDEpO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2UgPSAkc2NvcGUuY29udGFjdHMudG90YWxfcGFnZXM7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsKCk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAkc2NvcGUuYmFja3dhcmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUucHJvZ3Jlc3NiYXIgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5pbml0aWFsIC09IDE7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUucGFnZSAtPSAxO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmZhc3RiYWNrd2FyZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS5wcm9ncmVzc2JhciA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmluaXRpYWwgPSAwO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2UgPSAxO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCA9IGZ1bmN0aW9uICgpIHsgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGlmKCRzY29wZS5zdGF0ZVByaW4gIT0gJHNjb3BlLnN0YXRlZW5kKXtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmluaXRpYWwgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUucGFnZSA9IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICRzY29wZS5wcm9ncmVzc2JhciA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZ2V0QWxsKCRzY29wZS5pbml0aWFsLCAkc2NvcGUuaWRDb250YWN0bGlzdCwgJHNjb3BlLnN0cmluZ3NlYXJjaCwgJHNjb3BlLnN0YXRlZW5kKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdGVQcmluID0gJHNjb3BlLnN0YXRlZW5kO1xyXG4gICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgaWYgKGRhdGEudG90YWwgPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc2hvdyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5zaG93TGlzdCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmxvYWRpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc2hvdyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnNob3dMaXN0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNvbnRhY3RzID0gZGF0YTtcclxuICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8ICRzY29wZS5jb250YWN0c1swXS5pdGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5pdGVtc1tpXSA9ICRzY29wZS5jb250YWN0c1swXS5pdGVtc1tpXS5pZENvbnRhY3Q7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZ2V0QWxsSW5kaWNhdGl2ZXMoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5pbmRpY2F0aXZlID0gZGF0YTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuY3VzdG9tZmllbGRzZWxlY3QoaWRDb250YWN0bGlzdCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuYXJyID0gW107XHJcbiAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhW2ldLnR5cGUgPT0gXCJTZWxlY3RcIiB8fCBkYXRhW2ldLnR5cGUgPT0gXCJNdWx0aXNlbGVjdFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmFycltkYXRhW2ldLmlkQ3VzdG9tZmllbGRdID0gZGF0YVtpXS52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAkc2NvcGUudG8oKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmNoYW5nZXN0YXR1cyA9IGZ1bmN0aW9uIChjb250YWN0bGlzdCwgaWRDb250YWN0bGlzdCwgc3RhdHVzKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZXN0YXR1c1Vuc3VzY3JpYmUgPSBzdGF0dXM7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuaWRjb250YWN0VW5zdWJzY3JpYmUgPSBjb250YWN0bGlzdC5pZENvbnRhY3Q7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuaWRjb250YWN0bGlzdFVuc3Vic2NyaWJlID0gaWRDb250YWN0bGlzdDtcclxuICAgICAgICAgICAgICAgICRzY29wZS5lbWFpbCA9IGNvbnRhY3RsaXN0LmVtYWlsO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmluZGljYXRpdmUgPSBjb250YWN0bGlzdC5pbmRpY2F0aXZlO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBob25lID0gY29udGFjdGxpc3QucGhvbmU7XHJcbiAgICAgICAgICAgICAgICBvcGVuTW9kYWwoJ2RlbGV0ZWRPcHRpb24nKTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICRzY29wZS51bnN1YnNjcmliZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICghYW5ndWxhci5pc1VuZGVmaW5lZCgkc2NvcGUudW5zdWJzY3JpYmVPbmx5KSAmJiAkc2NvcGUudW5zdWJzY3JpYmVPbmx5ID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnR5cGVVbnN1YnNjcmliZSA9ICd1bnN1YnNjcmliZU9ubHknO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICghYW5ndWxhci5pc1VuZGVmaW5lZCgkc2NvcGUudW5zdWJzY3JpYmVBbGwpICYmICRzY29wZS51bnN1YnNjcmliZUFsbCA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS50eXBlVW5zdWJzY3JpYmUgPSAndW5zdWJzY3JpYmVBbGwnO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS5lcnJvcihcIkRlYmUgc2VsZWNjaW9uYXIgdW4gbW9kbyBwYXJhIGRlc3VzY3JpcGNpw7NcIik7XHJcbiAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCdkZWxldGVkT3B0aW9uJyk7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUucHJvZ3Jlc3NiYXIzID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBvcGVuTW9kYWwoJ3dhaXRpbmcnKTtcclxuICAgICAgICAgICAgICAgIGxldCBkYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICBpZENvbnRhY3Q6ICRzY29wZS5pZGNvbnRhY3RVbnN1YnNjcmliZSxcclxuICAgICAgICAgICAgICAgICAgaWRDb250YWN0bGlzdDogJHNjb3BlLmlkY29udGFjdGxpc3RVbnN1YnNjcmliZSxcclxuICAgICAgICAgICAgICAgICAgZW1haWw6ICRzY29wZS5lbWFpbCxcclxuICAgICAgICAgICAgICAgICAgaW5kaWNhdGl2ZTogJHNjb3BlLmluZGljYXRpdmUsXHJcbiAgICAgICAgICAgICAgICAgIHBob25lOiAkc2NvcGUucGhvbmUsXHJcbiAgICAgICAgICAgICAgICAgIHR5cGU6ICRzY29wZS50eXBlVW5zdWJzY3JpYmUsXHJcbiAgICAgICAgICAgICAgICAgIHN0YXR1czogJHNjb3BlLmVzdGF0dXNVbnN1c2NyaWJlXHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgIHJlc3RTZXJ2aWNlLmNoYW5nZXN0YXR1cyhkYXRhKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwoJ3dhaXRpbmcnKTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyMyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRBbGwoKTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbEluZm9Db250YWN0bGlzdCgpO1xyXG4gICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLnByaW1hcnkoZGF0YS5tZW5zc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5zZXRTdXNjcmliZSA9IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuc3VzY3JpYmUgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmNoYW5nZVN1c2NyaWJlU2VsZWN0ZWQoKTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAkc2NvcGUuY2hhbmdlU3VzY3JpYmVTZWxlY3RlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9wZW5Nb2RhbCgnd2FpdGluZycpO1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuY2hhbmdlc3VzY3JpYmVzZWxlY3RlZCgkc2NvcGUuc2VsZWN0ZWQsICRzY29wZS5pZENvbnRhY3RsaXN0LCAkc2NvcGUuc3VzY3JpYmUpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnNlbGVjdGVkID0gW107XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRBbGxJbmZvQ29udGFjdGxpc3QoKTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCd3YWl0aW5nJyk7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UucHJpbWFyeShkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVsYXRpdmVVcmxCYXNlICsgXCIgXCIgKyBmdWxsVXJsQmFzZSArIFwiIFwiICsgdGVtcGxhdGVCYXNlKTtcclxuICAgICAgICAgICAgICAkc2NvcGUuY29uZmlybURlbGV0ZSA9IGZ1bmN0aW9uIChjb250YWN0bGlzdCwgaWRDb250YWN0bGlzdCkge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmlkQ29udGFjdCA9IGNvbnRhY3RsaXN0LmlkQ29udGFjdDtcclxuICAgICAgICAgICAgICAgICRzY29wZS5pZENvbnRhY3RsaXN0ID0gaWRDb250YWN0bGlzdDtcclxuICAgICAgICAgICAgICAgICRzY29wZS5lbWFpbCA9IGNvbnRhY3RsaXN0LmVtYWlsO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmluZGljYXRpdmUgPSBjb250YWN0bGlzdC5pbmRpY2F0aXZlO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBob25lID0gY29udGFjdGxpc3QucGhvbmU7XHJcbiAgICAgICAgICAgICAgICBvcGVuTW9kYWwoJ2NvbmZpcm1EZWxldGUnKTtcclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuY29uZmlybURlbGV0ZVNlbGVjdGVkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgb3Blbk1vZGFsKCdjb25maXJtRGVsZXRlU2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuZGVsZXRlQ29udGFjdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICghYW5ndWxhci5pc1VuZGVmaW5lZCgkc2NvcGUuZGVsZXRlZE9ubHkpICYmICRzY29wZS5kZWxldGVkT25seSA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS50eXBlRGVsZXRlZCA9ICdkZWxldGVkT25seSc7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFhbmd1bGFyLmlzVW5kZWZpbmVkKCRzY29wZS5kZWxldGVkQWxsKSAmJiAkc2NvcGUuZGVsZXRlZEFsbCA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS50eXBlRGVsZXRlZCA9ICdkZWxldGVkQWxsJztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IoXCJEZWJlIHNlbGVjY2lvbmFyIHVuIG1ldG9kbyBwYXJhIGVsaW1pbmFjacOzbiBkZWwgY29udGFjdG9cIik7XHJcbiAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHtcclxuICAgICAgICAgICAgICAgICAgaWRDb250YWN0OiAkc2NvcGUuaWRDb250YWN0LFxyXG4gICAgICAgICAgICAgICAgICBpZENvbnRhY3RsaXN0OiAkc2NvcGUuaWRDb250YWN0bGlzdCxcclxuICAgICAgICAgICAgICAgICAgZW1haWw6ICRzY29wZS5lbWFpbCxcclxuICAgICAgICAgICAgICAgICAgaW5kaWNhdGl2ZTogJHNjb3BlLmluZGljYXRpdmUsXHJcbiAgICAgICAgICAgICAgICAgIHBob25lOiAkc2NvcGUucGhvbmUsXHJcbiAgICAgICAgICAgICAgICAgIHR5cGU6ICRzY29wZS50eXBlRGVsZXRlZFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2xvc2VNb2RhbCgnY29uZmlybURlbGV0ZScpO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyMyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgb3Blbk1vZGFsKCd3YWl0aW5nJyk7XHJcbiAgICAgICAgICAgICAgICByZXN0U2VydmljZS5kZWxldGVDb250YWN0KGRhdGEpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS53YXJuaW5nKGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwoJ2NvbmZpcm1EZWxldGUnKTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbEluZm9Db250YWN0bGlzdCgpO1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsKCk7XHJcbiAgICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwoJ3dhaXRpbmcnKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICRzY29wZS5kZWxldGVDb250YWN0U2VsZWN0ZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBvcGVuTW9kYWwoJ3dhaXRpbmcnKTtcclxuICAgICAgICAgICAgICAgIHJlc3RTZXJ2aWNlLmRlbGV0ZUNvbnRhY3RTZWxlY3RlZCgkc2NvcGUuc2VsZWN0ZWQsICRzY29wZS5pZENvbnRhY3RsaXN0KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2Uud2FybmluZyhkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCdjb25maXJtRGVsZXRlU2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnNlbGVjdGVkID0gW107XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRBbGxJbmZvQ29udGFjdGxpc3QoKTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCd3YWl0aW5nJyk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICRzY29wZS5nZXRBbGxJbmZvQ29udGFjdGxpc3QoKTtcclxuICAgICAgICAgICAgICAkcm9vdFNjb3BlLmRlbGV0ZUNvbnRhY3QgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5jb25maXJtTW92ZVNlbGVjdGVkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgb3Blbk1vZGFsKCdjb25maXJtTW92ZVNlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICByZXN0U2VydmljZS5nZXRDb250YWN0bGlzdFRvTW92ZVNlbGVjdGVkKCRzY29wZS5pZENvbnRhY3RsaXN0KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5jb250YWN0bGlzdHN0b21vdmUgPSBkYXRhLmNvbnRhY3RsaXN0c3RvbW92ZTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAkc2NvcGUuY29uZmlybUNvcHlTZWxlY3RlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9wZW5Nb2RhbCgnY29uZmlybUNvcHlTZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZ2V0Q29udGFjdGxpc3RUb01vdmVTZWxlY3RlZCgkc2NvcGUuaWRDb250YWN0bGlzdCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuY29udGFjdGxpc3RzdG9tb3ZlID0gZGF0YS5jb250YWN0bGlzdHN0b21vdmU7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS52YWxpZGF0ZUNvbnRhY3RTZWxlY3RlZCA9IGZ1bmN0aW9uICh0eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBvcGVuTW9kYWwoJ3dhaXRpbmcnKTtcclxuICAgICAgICAgICAgICAgIHJlc3RTZXJ2aWNlLnZhbGlkYXRlQ29weUNvbnRhY3RTZWxlY3RlZCgkc2NvcGUuc2VsZWN0ZWRPbmUsICRzY29wZS5zZWxlY3RlZCwgJHNjb3BlLmlkQ29udGFjdGxpc3QpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgY2xvc2VNb2RhbCgnY29uZmlybUNvcHlTZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCdjb25maXJtTW92ZVNlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS50eXBlID0gdHlwZTtcclxuICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuZXJyb3IgPT0gJ2lzRXJyb3InKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmFycmF5RXJyb3IgPSBkYXRhLmFycmF5RXJyb3I7XHJcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VNb2RhbCgnd2FpdGluZycpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9wZW5Nb2RhbCgndmFsaWRhdGVDb3B5U2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhLmVycm9yID09ICdub0Vycm9yJykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlID09ICdjb3B5Jykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmNvcHlDb250YWN0U2VsZWN0ZWQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT0gJ21vdmUnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUubW92ZUNvbnRhY3RTZWxlY3RlZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICRzY29wZS5leGVjdXRlU2VsZWN0ZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoJHNjb3BlLnR5cGUgPT0gJ2NvcHknKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5jb3B5Q29udGFjdFNlbGVjdGVkKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCRzY29wZS50eXBlID09ICdtb3ZlJykge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUubW92ZUNvbnRhY3RTZWxlY3RlZCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAkc2NvcGUuY29weUNvbnRhY3RTZWxlY3RlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9wZW5Nb2RhbCgnd2FpdGluZycpO1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuY29weUNvbnRhY3RTZWxlY3RlZCgkc2NvcGUuc2VsZWN0ZWRPbmUsICRzY29wZS5zZWxlY3RlZCwgJHNjb3BlLmlkQ29udGFjdGxpc3QpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnNlbGVjdGVkID0gW107XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5zZWxlY3RlZE9uZSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCdjb25maXJtQ29weVNlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwoJ3ZhbGlkYXRlQ29weVNlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2Uuc3VjY2VzcyhkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsSW5mb0NvbnRhY3RsaXN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRBbGwoKTtcclxuICAgICAgICAgICAgICAgICAgY2xvc2VNb2RhbCgnd2FpdGluZycpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCd3YWl0aW5nJyk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICRzY29wZS5tb3ZlQ29udGFjdFNlbGVjdGVkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgb3Blbk1vZGFsKCd3YWl0aW5nJyk7XHJcbiAgICAgICAgICAgICAgICByZXN0U2VydmljZS5tb3ZlQ29udGFjdFNlbGVjdGVkKCRzY29wZS5zZWxlY3RlZE9uZSwgJHNjb3BlLnNlbGVjdGVkLCAkc2NvcGUuaWRDb250YWN0bGlzdCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuc2VsZWN0ZWQgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnNlbGVjdGVkT25lID0gW107XHJcbiAgICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwoJ2NvbmZpcm1Nb3ZlU2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgICAgY2xvc2VNb2RhbCgndmFsaWRhdGVDb3B5U2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS5zdWNjZXNzKGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRBbGxJbmZvQ29udGFjdGxpc3QoKTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbCgpO1xyXG4gICAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCd3YWl0aW5nJyk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwoJ3dhaXRpbmcnKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgJHNjb3BlLnNldFNlbGVjdGVkRW1wdHkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuc2VsZWN0ZWRPbmUgPSBbXTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIC8vU2VsZWNjaW9uYXIgc29sbyB1bm9cclxuICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgJHNjb3BlLml0ZW1zT25lID0gW107XHJcbiAgICAgICAgICAgICAgJHNjb3BlLnNlbGVjdGVkT25lID0gW107XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5zZWxlY3QgPSBmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnNlbGVjdGVkT25lID0gW107XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuc2VsZWN0ZWRPbmUucHVzaChpdGVtKTtcclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuZXhpc3RzID0gZnVuY3Rpb24gKGl0ZW0sIGxpc3QpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBsaXN0LmluZGV4T2YoaXRlbSkgPiAtMTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgIC8vRmluIFNlbGVjY2lvbmFyIHNvbG8gdW5vXHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5zZWFyY2hzdGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuc3RhdGUgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCRzY29wZS5zdGF0ZSk7XHJcbiAgICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuc3RhdGUgPT0gXCJUb2Rvc1wiKXtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdGVlbmQgPSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS50eXBlRXhwb3J0ID0gMDtcclxuICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN0YXRlZW5kID0gJHNjb3BlLnN0YXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoJHNjb3BlLnN0YXRlZW5kKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiQWN0aXZvc1wiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUudHlwZUV4cG9ydCA9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIkRlc3VzY3JpdG9zXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS50eXBlRXhwb3J0ID0gMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiUmVib3RhZG9zXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS50eXBlRXhwb3J0ID0gMztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiU3BhbVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUudHlwZUV4cG9ydCA9IDQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIkJsb3F1ZWFkb3NcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnR5cGVFeHBvcnQgPSA1O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS50eXBlRXhwb3J0ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRBbGwoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICRzY29wZS5jbG9zZU1vZGFsVW5zdWIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBjbG9zZU1vZGFsKCdkZWxldGVkT3B0aW9uJyk7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsKCk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfV0pXHJcbiAgICAgICAgICAuY29udHJvbGxlcignQ29udGFjdEltcG9ydENvbnRyb2xsZXInLCBbJyRzY29wZScsICdyZXN0U2VydmljZScsIGZ1bmN0aW9uICgkc2NvcGUsIHJlc3RTZXJ2aWNlKSB7XHJcblxyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUudXBsb2FkQ3N2ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICAgIGZpbGVjc3Y6ICRzY29wZS5pbXBvcnRDc3ZcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICByZXN0U2VydmljZS5jb250YWN0Y3N2KGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG5cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS50eXBldmFsdWVzID0gW107XHJcblxyXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgKGN1c3RvbWZpZWxkKSA9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmN1c3RvbWZpZWxkID0gMDtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmN1c3RvbWZpZWxkID0gY3VzdG9tZmllbGQ7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBpZiAodHlwZW9mIChkYXRhQ3N2KSA9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmRhdGFDc3YgPSAwO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXJyYXkgPSBbXTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5kZWxpbWl0ZXIgPSAnLCc7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuaGVhZCA9IDA7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gJHNjb3BlLmhlYWQ7IGkgPCBkYXRhQ3N2Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBzZXBhID0gZGF0YUNzdltpXS5zcGxpdCgkc2NvcGUuZGVsaW1pdGVyKTtcclxuICAgICAgICAgICAgICAgICAgYXJyYXkucHVzaChzZXBhKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICRzY29wZS5kYXRhQ3N2ID0gYXJyYXk7XHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCRzY29wZS5kZWxpbWl0ZXIpO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLmFkanVzdERlbGltaXRlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgKCRzY29wZS5oZWFkZXIpID09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5zaG93QXJyYXlDc3YoMCwgJHNjb3BlLmRlbGltaXRlcik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICBpZiAoJHNjb3BlLmhlYWRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5zaG93QXJyYXlDc3YoMCwgJHNjb3BlLmRlbGltaXRlcik7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnNob3dBcnJheUNzdigwLCAkc2NvcGUuZGVsaW1pdGVyKTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5zaG93QXJyYXlDc3YgPSBmdW5jdGlvbiAoc3RhcnQsIGRlbGltaXRlcikge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFycmF5ID0gW107XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBkYXRhQ3N2Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBzZXBhID0gZGF0YUNzdltpXS5zcGxpdChkZWxpbWl0ZXIpO1xyXG4gICAgICAgICAgICAgICAgICBhcnJheS5wdXNoKHNlcGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmRhdGFDc3YgPSBhcnJheTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XSlcclxuICAgICAgICAgIC5jb250cm9sbGVyKCdOZXdiYXRjaENvbnRyb2xsZXInLCBbJyRzY29wZScsICdyZXN0U2VydmljZScsICdub3RpZmljYXRpb25TZXJ2aWNlJywgJyR3aW5kb3cnLCAnYXJyYXlDb25zdHJ1Y3QnLCAnc2V0RGF0YScsICckcm9vdFNjb3BlJywgZnVuY3Rpb24gKCRzY29wZSwgcmVzdFNlcnZpY2UsIG5vdGlmaWNhdGlvblNlcnZpY2UsICR3aW5kb3csIGFycmF5Q29uc3RydWN0LCBzZXREYXRhLCAkcm9vdFNjb3BlKSB7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmluaXRDb21wb25lbnRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZ2V0QWxsSW5kaWNhdGl2ZXMoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUubGlzdEluZGljYXRpdmVzID0gcmVzcG9uc2U7XHJcbiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICRyb290U2NvcGUuY29udGFjdGxpc3QgPSBzZXREYXRhLmdldERhdGEoKTtcclxuICAgICAgICAgICAgICAkc2NvcGUubGltaXQgPSAzMDtcclxuICAgICAgICAgICAgICAkc2NvcGUuYmF0Y2ggPSBbXTtcclxuICAgICAgICAgICAgICAkc2NvcGUuYmF0Y2hzID0gW107XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmlzU2NyZWVuU2l6ZSA9ICQod2luZG93KS53aWR0aCgpO1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUubWlzYyA9IHtcclxuICAgICAgICAgICAgICAgIGxvYWRlclNhdmVTaG93OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGRpc2FibGVkU2F2ZUJ1dHRvbjogZmFsc2VcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5mdW5jdGlvbnMgPSB7XHJcbiAgICAgICAgICAgICAgICBkYXRlQmVmb3JlUmVuZGVyOiBmdW5jdGlvbiAoJGRhdGVzKSB7XHJcbiAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgJGRhdGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ldyBEYXRlKCkuZ2V0VGltZSgpIDwgJGRhdGVzW2ldLnV0Y0RhdGVWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgJGRhdGVzW2ldLnNlbGVjdGFibGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUudmFsaWRhdGVFbXB0eUJhdGNoID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCh0eXBlb2YgJHNjb3BlLmJhdGNoLmVtYWlsID09IFwidW5kZWZpbmVkXCIgfHwgJHNjb3BlLmJhdGNoLmVtYWlsID09IFwiXCIpICYmICh0eXBlb2YgJHNjb3BlLmJhdGNoLmluZGljYXRpdmUgPT0gXCJ1bmRlZmluZWRcIiB8fCAkc2NvcGUuYmF0Y2guaW5kaWNhdGl2ZSA9PSBcIlwiKSAmJiAodHlwZW9mICRzY29wZS5iYXRjaC5waG9uZSA9PSBcInVuZGVmaW5lZFwiIHx8ICRzY29wZS5iYXRjaC5waG9uZSA9PSBcIlwiKSkge1xyXG4gICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKFwiRGViZXMgaW5ncmVzYXIgcG9yIGxvIG1lbm9zIGVsIGVtYWlsIG8gZWwgdGVsw6lmb25vIGNvbiBzdSBpbmRpY2F0aXZvXCIpO1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCRzY29wZS5iYXRjaC5pbmRpY2F0aXZlICYmICh0eXBlb2YgJHNjb3BlLmJhdGNoLnBob25lID09IFwidW5kZWZpbmVkXCIgfHwgJHNjb3BlLmJhdGNoLnBob25lID09IFwiXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IoXCJEZWJlcyBpbmdyZXNhciBlbCBuw7ptZXJvIGRlIHRlbMOpZm9ub1wiKTtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkc2NvcGUuYmF0Y2gucGhvbmUgJiYgKHR5cGVvZiAkc2NvcGUuYmF0Y2guaW5kaWNhdGl2ZSA9PSBcInVuZGVmaW5lZFwiIHx8ICRzY29wZS5iYXRjaC5pbmRpY2F0aXZlID09IFwiXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IoXCJEZWJlcyBzZWxlY2Npb25hciBlbCBpbmRpY2F0aXZvXCIpO1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCRzY29wZS5iYXRjaHMubGVuZ3RoID49ICRzY29wZS5saW1pdCkge1xyXG4gICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKFwiU8OzbG8gcHVlZGUgYWdyZWdhciBcIiArICRzY29wZS5saW1pdCArIFwiIGNvbnRhY3RvcyByw6FwaWRhbWVudGVcIik7XHJcbiAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mICRzY29wZS5iYXRjaC5pbmRpY2F0aXZlICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiAkc2NvcGUuYmF0Y2gucGhvbmUgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgICAgICAgICAgICAgdmFyIGxlbmd0aCA9ICRzY29wZS5saXN0SW5kaWNhdGl2ZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICB2YXIgY291bnRyeTtcclxuICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuYmF0Y2guaW5kaWNhdGl2ZSA9PSAkc2NvcGUubGlzdEluZGljYXRpdmVzW2luZGV4XS5pZENvdW50cnkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGNvdW50cnkgPSAkc2NvcGUubGlzdEluZGljYXRpdmVzW2luZGV4XTtcclxuICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuYmF0Y2gubmFtZUluZGljYXRpdmUgPSBcIigrXCIgKyBjb3VudHJ5LnBob25lQ29kZSArIFwiKSBcIiArIGNvdW50cnkubmFtZTtcclxuICAgICAgICAgICAgICAgICAgdmFyIHBob25lID0gU3RyaW5nKCRzY29wZS5iYXRjaC5waG9uZSk7XHJcbiAgICAgICAgICAgICAgICAgIGlmIChwaG9uZS5sZW5ndGggPCBjb3VudHJ5Lm1pbkRpZ2l0cyB8fCBwaG9uZS5sZW5ndGggPiBjb3VudHJ5Lm1heERpZ2l0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2UuZXJyb3IoXCJFbCBuw7ptZXJvIHRlbGVmw7NuaWNvIG5vIGN1bXBsZSBjb24gbGEgY2FudGlkYWQgZGUgZGlnaXRvcyBtw61uaW1vcyB5IG3DoXhpbW9zIGRlIGFjdWVyZG8gYWwgcGHDrXNcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuYWRkQmF0Y2h0b0JhdGNocygpO1xyXG5cclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuYWRkQmF0Y2h0b0JhdGNocyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS5iYXRjaHMucHVzaCgkc2NvcGUuYmF0Y2gpO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmJhdGNoID0gW107XHJcbiAgICAgICAgICAgICAgICAkKFwiI2JhdGNoZW1haWxcIikuZm9jdXMoKTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5yZW1vdmVCYXRjaHRvQmF0Y2hzID0gZnVuY3Rpb24gKGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuYmF0Y2hzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICRzY29wZS52YWxpZGF0ZUNvbnRhY3RCYXRjaCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoJHNjb3BlLmJhdGNocy5sZW5ndGggPD0gMCkge1xyXG4gICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKFwiRGViZXMgaW5ncmVzYXIgcG9yIGxvIG1lbm9zIHVuIGNvbnRhY3RvXCIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLm1pc2MuZGlzYWJsZWRTYXZlQnV0dG9uID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLm1pc2MubG9hZGVyU2F2ZVNob3cgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICByZXN0U2VydmljZS52YWxpZGF0ZWNvbnRhY3RiYXRjaChhcnJheUNvbnN0cnVjdC50b09iamVjdCgkc2NvcGUuYmF0Y2hzKSwgJHJvb3RTY29wZS5jb250YWN0bGlzdC5pZENvbnRhY3RsaXN0KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmNvbnRhY3RlcnJvciA9IGRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCRzY29wZS5jb250YWN0ZXJyb3IubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLm1pc2MuZGlzYWJsZWRTYXZlQnV0dG9uID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUubWlzYy5sb2FkZXJTYXZlU2hvdyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgb3Blbk1vZGFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5hZGRjb250YWN0YmF0Y2goKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLmFkZGNvbnRhY3RiYXRjaCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICghJHNjb3BlLnZhbGlkYXRlUGhvbmVzKCkpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLm1pc2MuZGlzYWJsZWRTYXZlQnV0dG9uID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5taXNjLmxvYWRlclNhdmVTaG93ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuYWRkY29udGFjdGJhdGNoKGFycmF5Q29uc3RydWN0LnRvT2JqZWN0KCRzY29wZS5iYXRjaHMpLCBpZENvbnRhY3RsaXN0KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICR3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcjLyc7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2Uuc3VjY2VzcyhkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLnZhbGlkYXRlUGhvbmVzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGJhdGNoc0xlbmd0aCA9ICRzY29wZS5iYXRjaHMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBiYXRjaHNMZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICRzY29wZS5iYXRjaHNbaV0uaW5kaWNhdGl2ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgJHNjb3BlLmJhdGNoc1tpXS5waG9uZSAhPT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBsZW5ndGggPSAkc2NvcGUubGlzdEluZGljYXRpdmVzLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgY291bnRyeTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoJHNjb3BlLmJhdGNoc1tpXS5pbmRpY2F0aXZlID09ICRzY29wZS5saXN0SW5kaWNhdGl2ZXNbaW5kZXhdLmlkQ291bnRyeSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5ID0gJHNjb3BlLmxpc3RJbmRpY2F0aXZlc1tpbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgcGhvbmUgPSBTdHJpbmcoJHNjb3BlLmJhdGNoc1tpXS5waG9uZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBob25lLmxlbmd0aCA8IGNvdW50cnkubWluRGlnaXRzIHx8IHBob25lLmxlbmd0aCA+IGNvdW50cnkubWF4RGlnaXRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKFwiRWwgbsO6bWVybyA8Yj5cIiArICRzY29wZS5iYXRjaHNbaV0ucGhvbmUgKyBcIjwvYj4gdGVsZWbDs25pY28gbm8gY3VtcGxlIGNvbiBsYSBjYW50aWRhZCBkZSBkaWdpdG9zIG3DrW5pbW9zIHkgbcOheGltb3MgZGUgYWN1ZXJkbyBhbCBwYcOtc1wiKTtcclxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUudXBkYXRlTmFtZUluZGljYXRpdmUgPSBmdW5jdGlvbiAoaSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGxlbmd0aCA9ICRzY29wZS5saXN0SW5kaWNhdGl2ZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvdW50cnk7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuYmF0Y2hzW2ldLmluZGljYXRpdmUgPT0gJHNjb3BlLmxpc3RJbmRpY2F0aXZlc1tpbmRleF0uaWRDb3VudHJ5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY291bnRyeSA9ICRzY29wZS5saXN0SW5kaWNhdGl2ZXNbaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuYmF0Y2hzW2ldLm5hbWVJbmRpY2F0aXZlID0gXCIoK1wiICsgY291bnRyeS5waG9uZUNvZGUgKyBcIikgXCIgKyBjb3VudHJ5Lm5hbWU7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfV0pXHJcbiAgICAgICAgICAuY29udHJvbGxlcignSGlzdG9yeUNvbnRyb2xsZXInLCBbJyRzY29wZScsICdyZXN0U2VydmljZScsICdub3RpZmljYXRpb25TZXJ2aWNlJywgJyR3aW5kb3cnLCAnYXJyYXlDb25zdHJ1Y3QnLCAnc2V0RGF0YScsICckcm9vdFNjb3BlJywgZnVuY3Rpb24gKCRzY29wZSwgcmVzdFNlcnZpY2UsIG5vdGlmaWNhdGlvblNlcnZpY2UsICR3aW5kb3csIGFycmF5Q29uc3RydWN0LCBzZXREYXRhLCAkcm9vdFNjb3BlKSB7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmZ1bGxVcmxCYXNlID0gZnVsbFVybEJhc2U7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLnRlbXBsYXRlQmFzZSA9IHRlbXBsYXRlQmFzZTtcclxuICAgICAgICAgICAgICAkc2NvcGUuaWRDb250YWN0bGlzdCA9IGlkQ29udGFjdGxpc3Q7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmlkQ29udGFjdCA9IGlkQ29udGFjdDtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLmdldE9uZUNvbnRhY3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXN0U2VydmljZS5nZXRPbmVDb250YWN0KCRzY29wZS5pZENvbnRhY3QpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNvbnRhY3QgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAvL1RPRE8gU09CUkUgRU5WSU9TIERFIFNNU1xyXG4gICAgICAgICAgICAgICRzY29wZS5pbml0aWFsU01TID0gMDtcclxuICAgICAgICAgICAgICAkc2NvcGUucGFnZVNNUyA9IDE7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLm5hbWVTTVMgPSBcIlwiO1xyXG4gICAgICAgICAgICAgICRzY29wZS5mb3J3YXJkU01TID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLmluaXRpYWxTTVMgKz0gMTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5wYWdlU01TICs9IDE7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsU01TKCk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAkc2NvcGUuZmFzdGZvcndhcmRTTVMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuaW5pdGlhbFNNUyA9ICgkc2NvcGUuc21zLnRvdGFsX3BhZ2VzIC0gMSk7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUucGFnZVNNUyA9ICRzY29wZS5zbXMudG90YWxfcGFnZXM7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsU01TKCk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAkc2NvcGUuYmFja3dhcmRTTVMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuaW5pdGlhbFNNUyAtPSAxO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2VTTVMgLT0gMTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5nZXRBbGxTTVMoKTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICRzY29wZS5mYXN0YmFja3dhcmRTTVMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuaW5pdGlhbFNNUyA9IDA7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUucGFnZVNNUyA9IDE7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsU01TKCk7XHJcbiAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbFNNUyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG5hbWUgPSBcIjFcIjtcclxuICAgICAgICAgICAgICAgIGlmICgkc2NvcGUubmFtZVNNUykge1xyXG4gICAgICAgICAgICAgICAgICB2YXIgbmFtZSA9ICRzY29wZS5uYW1lU01TO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZ2V0QWxsU01TKCRzY29wZS5pZENvbnRhY3QsICRzY29wZS5pbml0aWFsU01TLCBuYW1lKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS5zbXMgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC8vRklOIERFIFRPRE8gU09CUkUgRU5WSU9TIERFIFNNU1xyXG5cclxuICAgICAgICAgICAgICAvL1RPRE8gU09CUkUgRU5WSU9TIERFIENPUlJFT1xyXG4gICAgICAgICAgICAgICRzY29wZS5pbml0aWFsTUFJTCA9IDA7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLnBhZ2VNQUlMID0gMTtcclxuICAgICAgICAgICAgICAkc2NvcGUubmFtZU1BSUwgPSBcIlwiO1xyXG4gICAgICAgICAgICAgICRzY29wZS5mb3J3YXJkTUFJTCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS5pbml0aWFsTUFJTCArPSAxO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2VNQUlMICs9IDE7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsTUFJTCgpO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmZhc3Rmb3J3YXJkTUFJTCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS5pbml0aWFsTUFJTCA9ICgkc2NvcGUubWFpbC50b3RhbF9wYWdlcyAtIDEpO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2VNQUlMID0gJHNjb3BlLm1haWwudG90YWxfcGFnZXM7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsTUFJTCgpO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmJhY2t3YXJkTUFJTCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS5pbml0aWFsTUFJTCAtPSAxO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2VNQUlMIC09IDE7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsTUFJTCgpO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmZhc3RiYWNrd2FyZE1BSUwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuaW5pdGlhbE1BSUwgPSAwO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2VNQUlMID0gMTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5nZXRBbGxNQUlMKCk7XHJcbiAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbE1BSUwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBuYW1lID0gXCIxXCI7XHJcbiAgICAgICAgICAgICAgICBpZiAoJHNjb3BlLm5hbWVNQUlMKSB7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBuYW1lID0gJHNjb3BlLm5hbWVNQUlMO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZ2V0QWxsTUFJTCgkc2NvcGUuaWRDb250YWN0LCAkc2NvcGUuaW5pdGlhbE1BSUwsIG5hbWUpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLm1haWwgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC8vRklOIERFIFRPRE8gU09CUkUgRU5WSU9TIERFIENPUlJFT1xyXG5cclxuICAgICAgICAgICAgICAvL1ByZXZpc3VhbGl6YXJcclxuICAgICAgICAgICAgICAkc2NvcGUucHJldmlld21haWx0ZW1wY29udCA9IGZ1bmN0aW9uIChpZCkge1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UucHJldmlld01haWxUZW1wbGF0ZUNvbnRlbnQoaWQpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgIHZhciBlID0gZGF0YS50ZW1wbGF0ZTtcclxuICAgICAgICAgICAgICAgICAgJCgnI2NvbnRlbnQtcHJldmlldycpLmVtcHR5KCk7XHJcbiAgICAgICAgICAgICAgICAgICQoJzxpZnJhbWUgZnJhbWVib3JkZXI9XCIwXCIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiLz4nKS5hcHBlbmRUbygnI2NvbnRlbnQtcHJldmlldycpLmNvbnRlbnRzKCkuZmluZCgnYm9keScpLmFwcGVuZChlKTtcclxuICAgICAgICAgICAgICAgICAgJCgnI215TW9kYWwnKS5tb2RhbCgnc2hvdycpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAvL0ZpbiBwcmV2aXN1YWxpemFyXHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5nZXRPbmVDb250YWN0KCk7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbFNNUygpO1xyXG4gICAgICAgICAgICAgICRzY29wZS5nZXRBbGxNQUlMKCk7XHJcbiAgICAgICAgICAgIH1dKVxyXG4gICAgICAgICAgLmNvbnRyb2xsZXIoJ05ld2NvbnRhY3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAncmVzdFNlcnZpY2UnLCAnbm90aWZpY2F0aW9uU2VydmljZScsICckd2luZG93JywgJyRyb290U2NvcGUnLCAnc2V0RGF0YScsIGZ1bmN0aW9uICgkc2NvcGUsIHJlc3RTZXJ2aWNlLCBub3RpZmljYXRpb25TZXJ2aWNlLCAkd2luZG93LCAkcm9vdFNjb3BlLCBzZXREYXRhKSB7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAkc2NvcGUuY29udGFjdCA9IG5ldyBPYmplY3QoKTtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLmluaXRDb21wb25lbnRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZ2V0QWxsSW5kaWNhdGl2ZXMoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUubGlzdEluZGljYXRpdmVzID0gcmVzcG9uc2U7XHJcbiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLmVycm9yKGRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuZnVuY3Rpb25zID0ge1xyXG4gICAgICAgICAgICAgICAgZGF0ZUJlZm9yZVJlbmRlcjogZnVuY3Rpb24gKCRkYXRlcykge1xyXG4gICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8ICRkYXRlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXcgRGF0ZSgpLmdldFRpbWUoKSA8ICRkYXRlc1tpXS51dGNEYXRlVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICRkYXRlc1tpXS5zZWxlY3RhYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgJHNjb3BlLmFkZENvbnRhY3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUucHJvZ3Jlc3NiYXIgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICRzY29wZS5jb250YWN0LnZhbGlkYXRlQ29uZmlybSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgaWYoJHNjb3BlLmNvbnRhY3QuZW1haWwgIT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNvbnRhY3QuZW1haWwgPSAkc2NvcGUuY29udGFjdC5lbWFpbC50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiAkc2NvcGUuY29udGFjdC5pbmRpY2F0aXZlICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiAkc2NvcGUuY29udGFjdC5waG9uZSAhPT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgICAgICAgICAgICB2YXIgbGVuZ3RoID0gJHNjb3BlLmxpc3RJbmRpY2F0aXZlcy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBjb3VudHJ5O1xyXG4gICAgICAgICAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCRzY29wZS5jb250YWN0LmluZGljYXRpdmUgPT0gJHNjb3BlLmxpc3RJbmRpY2F0aXZlc1tpbmRleF0uaWRDb3VudHJ5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5ID0gJHNjb3BlLmxpc3RJbmRpY2F0aXZlc1tpbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgaWYgKCRzY29wZS5jb250YWN0LnBob25lLmxlbmd0aCA8IGNvdW50cnkubWluRGlnaXRzIHx8ICRzY29wZS5jb250YWN0LnBob25lLmxlbmd0aCA+IGNvdW50cnkubWF4RGlnaXRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS5lcnJvcihcIkVsIG7Dum1lcm8gdGVsZWbDs25pY28gbm8gY3VtcGxlIGNvbiBsYSBjYW50aWRhZCBkZSBkaWdpdG9zIG3DrW5pbW9zIHkgbcOheGltb3MgZGUgYWN1ZXJkbyBhbCBwYcOtc1wiKTtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvZ3Jlc3NiYXIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5jb250YWN0LnZhbGlkYXRlQ29uZmlybSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuYWRkQ29udGFjdCgkc2NvcGUuY29udGFjdCwgaWRDb250YWN0bGlzdCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TZXJ2aWNlLnN1Y2Nlc3MoZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldEFsbEluZm9Db250YWN0bGlzdCgpO1xyXG4gICAgICAgICAgICAgICAgICAkd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnIy8nO1xyXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuY29kZSAmJiAoZGF0YS5jb2RlID09IDQwOSB8fCBkYXRhLmNvZGUgPT0gNDEwKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5lcnJvckNyZWF0ZUNvbnRhY3QgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIG9wZW5Nb2RhbENvbmZpcm0oKTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICRzY29wZS5nZXRBbGxJbmZvQ29udGFjdGxpc3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXN0U2VydmljZS5nZXRPbmVDb250YWN0bGlzdChpZENvbnRhY3RsaXN0KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgIHNldERhdGEuc2V0RGF0YShkYXRhKTtcclxuICAgICAgICAgICAgICAgICAgJHJvb3RTY29wZS5jb250YWN0bGlzdCA9IGRhdGE7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAkc2NvcGUuc2F2ZUNvbnRhY3RDb25maXJtID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuY29udGFjdC52YWxpZGF0ZUNvbmZpcm0gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuYWRkQ29udGFjdCgkc2NvcGUuY29udGFjdCwgaWRDb250YWN0bGlzdCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0QWxsSW5mb0NvbnRhY3RsaXN0KCk7XHJcbiAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblNlcnZpY2Uuc3VjY2VzcyhkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAkd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnIy8nO1xyXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2dyZXNzYmFyID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU2VydmljZS5lcnJvcihkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfV0pXHJcbiAgICAgICAgICAuY29udHJvbGxlcignaW5kZXhDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHJvdXRlUGFyYW1zJywgJyR3aW5kb3cnLCAncmVzdFNlcnZpY2UnLCAnbm90aWZpY2F0aW9uU2VydmljZScsICdzZXREYXRhJywgJyRyb290U2NvcGUnLCBmdW5jdGlvbiAoJHNjb3BlLCAkcm91dGVQYXJhbXMsICR3aW5kb3csIHJlc3RTZXJ2aWNlLCBub3RpZmljYXRpb25TZXJ2aWNlLCBzZXREYXRhLCAkcm9vdFNjb3BlKSB7XHJcbiAgICAgICAgICAgICAgcmVzdFNlcnZpY2UuZ2V0T25lQ29udGFjdGxpc3QoaWRDb250YWN0bGlzdCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICAgICAgICAgICAgICBzZXREYXRhLnNldERhdGEoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICAkcm9vdFNjb3BlLmNvbnRhY3RsaXN0ID0gc2V0RGF0YS5nZXREYXRhKCk7XHJcblxyXG4gICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgfV0pO1xyXG59KSgpO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2pzL2FuZ3VsYXIvY29udGFjdC9jb250cm9sbGVycy5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('contact.directives', [])\r\n          .directive('fileModel', [\"$parse\", function ($parse) {\r\n              return {\r\n                restrict: 'A',\r\n                link: function (scope, element, attrs) {\r\n                  var model = $parse(attrs.fileModel);\r\n                  var modelSetter = model.assign;\r\n\r\n                  element.bind('change', function () {\r\n                    scope.$apply(function () {\r\n                      modelSetter(scope, element[0].files[0]);\r\n                    });\r\n                  });\r\n                }\r\n              };\r\n            }])\r\n          .filter('trustedhtml', function ($sce) {\r\n            return function (value, type) {\r\n              return $sce.trustAs(type || 'html', value);\r\n            }\r\n          }\r\n          );\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hbmd1bGFyL2NvbnRhY3QvZGlyZWN0aXZlcy5qcz81MGI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XHJcbiAgYW5ndWxhci5tb2R1bGUoJ2NvbnRhY3QuZGlyZWN0aXZlcycsIFtdKVxyXG4gICAgICAgICAgLmRpcmVjdGl2ZSgnZmlsZU1vZGVsJywgW1wiJHBhcnNlXCIsIGZ1bmN0aW9uICgkcGFyc2UpIHtcclxuICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgcmVzdHJpY3Q6ICdBJyxcclxuICAgICAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcclxuICAgICAgICAgICAgICAgICAgdmFyIG1vZGVsID0gJHBhcnNlKGF0dHJzLmZpbGVNb2RlbCk7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBtb2RlbFNldHRlciA9IG1vZGVsLmFzc2lnbjtcclxuXHJcbiAgICAgICAgICAgICAgICAgIGVsZW1lbnQuYmluZCgnY2hhbmdlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNjb3BlLiRhcHBseShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBtb2RlbFNldHRlcihzY29wZSwgZWxlbWVudFswXS5maWxlc1swXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH1dKVxyXG4gICAgICAgICAgLmZpbHRlcigndHJ1c3RlZGh0bWwnLCBmdW5jdGlvbiAoJHNjZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlLCB0eXBlKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuICRzY2UudHJ1c3RBcyh0eXBlIHx8ICdodG1sJywgdmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICApO1xyXG59KSgpO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2pzL2FuZ3VsYXIvY29udGFjdC9kaXJlY3RpdmVzLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

eval("(function () {\r\n  angular.module('contact.services', [])\r\n    .factory('restService', ['$http', '$q', 'notificationService', function ($http, $q, notificationService) {\r\n\r\n      function getAll(page, idContactlist, stringsearch, stateend) {\r\n        \r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/contact/getcontacts/' + page + \"/\" + idContactlist;\r\n\r\n        $http.post(url,{stringsearch: stringsearch,stateend:stateend} )\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function validateTotalContacts(data) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + \"contact/validatetotalcontacts/\";\r\n\r\n        $http.post(url, data)\r\n          .success(function (response) {\r\n            deferred.resolve(response);\r\n          })\r\n          .error(function (error) {\r\n            deferred.reject(error);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function exportMoreContacts(data) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + \"api/contact/exportmorecontacts/\";\r\n\r\n        $http.post(url, data)\r\n          .success(function (response) {\r\n            deferred.resolve(response);\r\n          })\r\n          .error(function (error) {\r\n            deferred.reject(error);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function contactcsv(filecsv) {\r\n        var url = fullUrlBase + 'api/contact/contacts/';\r\n        var deferred = $q.defer();\r\n        var formData = new FormData();\r\n        formData.append('filecsv', filecsv);\r\n\r\n        $http.post(url, formData, {\r\n          headers: {\r\n            'Content-type': undefined\r\n          },\r\n          transformRequest: angular.identity\r\n        })\r\n          .success(function (res) {\r\n            deferred.resolve(res);\r\n          })\r\n          .error(function (res) {\r\n            deferred.resolve(res);\r\n            //notificationService.error(res.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function changestatus(data) {\r\n        var deferred = $q.defer();\r\n        $http.post(fullUrlBase + 'api/contact/changestatus', data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function changesuscribeselected(idsContact, idContactlist, valueSuscribe) {\r\n        var deferred = $q.defer();\r\n        var datas = [idsContact, idContactlist, valueSuscribe];\r\n        $http.post(fullUrlBase + 'api/contact/changesuscribeselected', datas)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function addcontactbatch(batchcontact, idContactlist) {\r\n        var deferred = $q.defer();\r\n        $http.post(fullUrlBase + 'api/contact/addcontactbatch/' + idContactlist, batchcontact)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function customfield(idContactlist) {\r\n        var deferred = $q.defer();\r\n        $http.get(fullUrlBase + 'api/contact/customfield/' + idContactlist)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function customfieldselect(idContactlist) {\r\n        var deferred = $q.defer();\r\n        $http.get(fullUrlBase + 'api/contact/customfieldselect/' + idContactlist)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function addContact(contact, idContactlist) {\r\n        var deferred = $q.defer();\r\n        $http.post(fullUrlBase + 'api/contact/addcontact/' + idContactlist, contact)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            if (!data.code || (data.code != 409 && data.code != 410)) {\r\n              notificationService.error(data.message);\r\n            }\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function editContact(idContact, key, value, idContactlist, idCustomfield) {\r\n        var deferred = $q.defer();\r\n        var data = {\r\n          idContact: idContact,\r\n          key: key,\r\n          value: value,\r\n          idCustomfield: idCustomfield\r\n        };\r\n        $http.post(fullUrlBase + 'api/contact/editcontact/' + idContactlist, data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function getAllIndicative() {\r\n        var deferred = $q.defer();\r\n        $http.get(fullUrlBase + 'api/contact/getallindicative')\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n\r\n      function validatecontactbatch(batchcontact, idContactlist) {\r\n        var deferred = $q.defer();\r\n        var datas = [batchcontact, idContactlist];\r\n        $http.post(fullUrlBase + 'api/contact/validatecontactbatch', datas)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function deleteContact(data) {\r\n        var deferred = $q.defer();\r\n        $http.post(fullUrlBase + 'api/contact/deletecontact', data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n        return deferred.promise;\r\n      }\r\n\r\n      function deleteContactSelected(data, idContactlist) {\r\n        var deferred = $q.defer();\r\n        datas = [data, idContactlist];\r\n        $http.post(fullUrlBase + 'api/contact/deleteselected', datas)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function getOneContactlist(id) {\r\n        var deferred = $q.defer();\r\n\r\n        $http.get(fullUrlBase + 'api/contactlist/getcontactlistinfo/' + id)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function getContactlistToMoveSelected(idContactlist) {\r\n        var deferred = $q.defer();\r\n\r\n        $http.get(fullUrlBase + 'api/contact/getcontactlisttomoveselected/' + idContactlist)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function moveContactSelected(selectedOne, contacts, idContaclistfrom) {\r\n        var deferred = $q.defer();\r\n        var datas = [selectedOne, contacts, idContaclistfrom];\r\n        $http.post(fullUrlBase + 'api/contact/movecontactselected', datas)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function validateCopyContactSelected(selectedOne, contacts, idContaclistfrom) {\r\n        var deferred = $q.defer();\r\n        var datas = [selectedOne, contacts, idContaclistfrom];\r\n        $http.post(fullUrlBase + 'api/contact/validatecopycontactselected', datas)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function copyContactSelected(selectedOne, contacts, idContaclistfrom) {\r\n        var deferred = $q.defer();\r\n        var datas = [selectedOne, contacts, idContaclistfrom];\r\n        $http.post(fullUrlBase + 'api/contact/copycontactselected', datas)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function getOneContact(idContact) {\r\n        var deferred = $q.defer();\r\n\r\n        $http.get(fullUrlBase + 'api/contact/getonecontact/' + idContact)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function getAllSMS(idContact, page, name) {\r\n        var deferred = $q.defer();\r\n        var data = [idContact, page, name];\r\n        $http.post(fullUrlBase + 'api/contact/getallsms', data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function getAllMAIL(idContact, page, name) {\r\n        var deferred = $q.defer();\r\n        var data = [idContact, page, name];\r\n        $http.post(fullUrlBase + 'api/contact/getallmail', data)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n            notificationService.error(data.message);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n      function previewMailTemplateContent(id) {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + 'api/contact/preview/' + id;\r\n        $http.post(url)\r\n          .success(function (data) {\r\n            deferred.resolve(data);\r\n          })\r\n          .error(function (data) {\r\n            deferred.reject(data);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      function getAllIndicatives() {\r\n        var deferred = $q.defer();\r\n        var url = fullUrlBase + \"api/country/indicatives\";\r\n\r\n        $http.get(url)\r\n          .success(function (response) {\r\n            deferred.resolve(response);\r\n          })\r\n          .error(function (error) {\r\n            deferred.reject(error);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      return {\r\n        contactcsv: contactcsv,\r\n        getAll: getAll,\r\n        validateTotalContacts: validateTotalContacts,\r\n        exportMoreContacts: exportMoreContacts,\r\n        changestatus: changestatus,\r\n        addcontactbatch: addcontactbatch,\r\n        customfield: customfield,\r\n        addContact: addContact,\r\n        editContact: editContact,\r\n        getAllIndicative: getAllIndicative,\r\n        validatecontactbatch: validatecontactbatch,\r\n        deleteContact: deleteContact,\r\n        deleteContactSelected: deleteContactSelected,\r\n        getOneContactlist: getOneContactlist,\r\n        customfieldselect: customfieldselect,\r\n        getContactlistToMoveSelected: getContactlistToMoveSelected,\r\n        moveContactSelected: moveContactSelected,\r\n        validateCopyContactSelected: validateCopyContactSelected,\r\n        copyContactSelected: copyContactSelected,\r\n        changesuscribeselected: changesuscribeselected,\r\n        getOneContact: getOneContact,\r\n        getAllSMS: getAllSMS,\r\n        getAllMAIL: getAllMAIL,\r\n        previewMailTemplateContent: previewMailTemplateContent,\r\n        getAllIndicatives:getAllIndicatives\r\n      };\r\n    }])\r\n    .factory('setData', function () {\r\n      var obj = {};\r\n      var datareturn = { name: \"hola\" };\r\n      obj.setData = function (data) {\r\n        datareturn = data;\r\n      }\r\n\r\n      obj.getData = function () {\r\n        return datareturn;\r\n      }\r\n      return obj;\r\n    })\r\n    .factory('notificationService', function () {\r\n      function error(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-remove-circle', 'danger');\r\n      }\r\n\r\n      function success(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-ok-circle', 'success');\r\n      }\r\n\r\n      function warning(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'warning');\r\n      }\r\n\r\n      function notice(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'notice');\r\n      }\r\n\r\n      function primary(message) {\r\n        slideOnTop(message, 4000, 'glyphicon glyphicon-exclamation-sign', 'primary');\r\n      }\r\n\r\n      return {\r\n        error: error,\r\n        success: success,\r\n        warning: warning,\r\n        notice: notice,\r\n        primary: primary\r\n      };\r\n    })\r\n    .factory('arrayConstruct', function () {\r\n      function toObject(arr) {\r\n        var data = {};\r\n        for (var k in arr) {\r\n          if (arr.hasOwnProperty(k)) {\r\n            data[k] = {\r\n              email: arr[k]['email'],\r\n              indicative: arr[k]['indicative'],\r\n              phone: arr[k]['phone'],\r\n              name: arr[k]['name'],\r\n              lastname: arr[k]['lastname'],\r\n              birthdate: arr[k]['birthdate']\r\n            };\r\n          }\r\n        }\r\n        return data;\r\n      }\r\n      return {\r\n        toObject: toObject\r\n      };\r\n    });\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ })
/******/ ]);